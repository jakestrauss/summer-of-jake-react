{"version":3,"sources":["services/RouteURLService.jsx","services/MarkerService.jsx","components/Map.jsx","mapStyles.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["result","axios","get","console","log","mapContainerStyle","width","height","center","lat","lng","mapOptions","styles","disableDefaultUI","zoomControl","kmlOptions","suppressInfoWindows","Map","useJsApiLoader","googleMapsApiKey","process","isLoaded","loadError","useState","setRoutes","useEffect","RouteURLService","getRoutes","window","google","maps","Size","zoom","options","map","route","url","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAae,M,yFARX,WACI,IAAMA,EAASC,IAAMC,IAJE,oCAMvB,OADAC,QAAQC,IAAIJ,GACLA,M,SCkBA,I,0FArBX,WACIC,IAAMC,IAJe,yC,YCIvBG,EAAoB,CACtBC,MAAO,QACPC,OAAQ,SAENC,EAAS,CACXC,IAAK,UACLC,KAAM,WAEJC,EAAa,CACfC,OCdW,CACX,CACI,YAAe,YACf,QAAW,CACP,CACI,IAAO,WAEX,CACI,WAAc,GAElB,CACI,UAAa,GAEjB,CACI,MAAS,KAIrB,CACI,YAAe,eACf,QAAW,CACP,CACI,IAAO,WAEX,CACI,YAAe,IAEnB,CACI,UAAa,IAEjB,CACI,MAAS,KAIrB,CACI,YAAe,gBACf,QAAW,CACP,CACI,IAAO,WAEX,CACI,WAAc,GAElB,CACI,UAAa,GAEjB,CACI,MAAS,KAIrB,CACI,YAAe,aACf,QAAW,CACP,CACI,IAAO,WAEX,CACI,WAAc,GAElB,CACI,UAAa,IAEjB,CACI,MAAS,KAIrB,CACI,YAAe,QACf,QAAW,CACP,CACI,IAAO,WAEX,CACI,WAAc,GAElB,CACI,UAAa,GAEjB,CACI,MAAS,KAIrB,CACI,YAAe,MACf,QAAW,CACP,CACI,IAAO,WAEX,CACI,WAAc,MAElB,CACI,WAAc,MAElB,CACI,MAAS,MDpFrBC,kBAAkB,EAClBC,aAAa,GAEXC,EAAa,CACfC,qBAAqB,GAGV,SAASC,IAAO,IAAD,EACMC,YAAe,CAC3CC,iBAAkBC,4CADdC,EADkB,EAClBA,SAAUC,EADQ,EACRA,UADQ,EAKEC,mBAAS,GALX,mBAKXC,GALW,WAa1B,GALAC,qBAAU,WACND,EAAUE,EAAgBC,gBAI1BL,EACA,OAAQ,0DACZ,IAAKD,EACD,OAAQ,oDACO,IAAIO,OAAOC,OAAOC,KAAKC,KAAK,GAAI,IAEnD,OACI,gCACI,8DACA,cAAC,IAAD,CAAW1B,kBAAmBA,EAAmB2B,KAAM,EAAGxB,OAAQA,EAAQyB,QAAStB,EAAnF,SAhBY,CAAC,2EAkBOuB,KAAI,SAAAC,GAAK,OAAK,cAAC,IAAD,CAAUC,IAAKD,EAAOF,QAASlB,YExC9DsB,MALf,WACI,OACI,cAACpB,EAAD,KCOOqB,EAXS,SAACC,GACjBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFpBQ,IAASC,OAAO,cAAC,IAAMC,WAAP,UACZ,cAAC,EAAD,MACmBC,SAASC,eAAe,SAI/Cb,M","file":"static/js/main.ac9009c5.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst ROUTESURL_REST_API_URL = 'http://localhost:8080/api/routes'\n\nclass RouteURLService {\n    getRoutes() {\n        const result = axios.get(ROUTESURL_REST_API_URL);\n        console.log(result);\n        return result;\n        //return ['https://storage.googleapis.com/strava-kmls/2021_spring_road_trip_10.kmz', 'https://storage.googleapis.com/strava-kmls/PCT_pt_1.kmz', 'https://storage.googleapis.com/strava-kmls/PCT_pt_2.kmz'];\n    }\n}\n\nexport default new RouteURLService();","import axios from 'axios';\n\nconst MARKERS_REST_API_URL = 'http://localhost:8080/api/markers'\n\nclass MarkerService {\n    getMarkers() {\n        axios.get(MARKERS_REST_API_URL);\n        // return [\n        //     {\n        //         latLong: {\n        //             lat: 44.285763,\n        //             lng: -121.536175\n        //         },\n        //         url: 'https://storage.googleapis.com/summer_of_jake_map_pictures/dog_test.jpg'\n        //     },\n        //     {\n        //         latLong: {\n        //             lat: 39.329299,\n        //             lng: -111.542582\n        //         },\n        //         url: 'https://storage.googleapis.com/summer_of_jake_map_pictures/dog_test.jpg'\n        //     }\n        // ]\n    }\n}\n\nexport default new MarkerService();","import React, {useEffect, useState} from 'react';\nimport { GoogleMap, KmlLayer, Marker, useJsApiLoader } from '@react-google-maps/api';\nimport mapStyles from './../mapStyles';\nimport RouteURLService from '../services/RouteURLService';\nimport MarkerService from '../services/MarkerService';\n\nconst mapContainerStyle = {\n    width: '100vw',\n    height: '100vh'\n};\nconst center = {\n    lat: 40.644366,\n    lng: -39.872822\n};\nconst mapOptions = {\n    styles: mapStyles,\n    disableDefaultUI: true,\n    zoomControl: true\n};\nconst kmlOptions = {\n    suppressInfoWindows: true\n};\n\nexport default function Map() {\n    const { isLoaded, loadError } = useJsApiLoader({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\"\n    });\n\n    const [routes, setRoutes] = useState(0);\n    const routesLocal = ['https://storage.googleapis.com/strava-kmls/2021_spring_road_trip_10.kmz'];\n    // const [markers, setMarkers] = useState(1);\n    useEffect(() => {\n        setRoutes(RouteURLService.getRoutes());\n        // setMarkers(MarkerService.getMarkers());\n    });\n\n    if (loadError)\n        return (<>Error loading maps</>);\n    if (!isLoaded)\n        return (<>Loading maps</>);\n    const markerSize = new window.google.maps.Size(20, 20);\n\n    return (\n        <div>\n            <h1>Summer of Jake Adventure Map</h1>\n            <GoogleMap mapContainerStyle={mapContainerStyle} zoom={3} center={center} options={mapOptions}>\n                {\n                    routesLocal.map(route => (<KmlLayer url={route} options={kmlOptions}/>\n                ))}\n                {/* {\n                    markers.map(marker => {\n                        const localIcon = {\n                            url: marker.url,\n                            scaledSize: markerSize\n                        }\n                        return(<Marker position={marker.latLong} icon={localIcon}/>)\n                    })\n                } */}\n            </GoogleMap>\n        </div>\n    );\n}\n","//\"Nature\" theme from Snazzy Maps: https://snazzymaps.com/style/47/nature\nexport default [\n    {\n        \"featureType\": \"landscape\",\n        \"stylers\": [\n            {\n                \"hue\": \"#FFA800\"\n            },\n            {\n                \"saturation\": 0\n            },\n            {\n                \"lightness\": 0\n            },\n            {\n                \"gamma\": 1\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.highway\",\n        \"stylers\": [\n            {\n                \"hue\": \"#53FF00\"\n            },\n            {\n                \"saturation\": -73\n            },\n            {\n                \"lightness\": 40\n            },\n            {\n                \"gamma\": 1\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.arterial\",\n        \"stylers\": [\n            {\n                \"hue\": \"#FBFF00\"\n            },\n            {\n                \"saturation\": 0\n            },\n            {\n                \"lightness\": 0\n            },\n            {\n                \"gamma\": 1\n            }\n        ]\n    },\n    {\n        \"featureType\": \"road.local\",\n        \"stylers\": [\n            {\n                \"hue\": \"#00FFFD\"\n            },\n            {\n                \"saturation\": 0\n            },\n            {\n                \"lightness\": 30\n            },\n            {\n                \"gamma\": 1\n            }\n        ]\n    },\n    {\n        \"featureType\": \"water\",\n        \"stylers\": [\n            {\n                \"hue\": \"#00BFFF\"\n            },\n            {\n                \"saturation\": 6\n            },\n            {\n                \"lightness\": 8\n            },\n            {\n                \"gamma\": 1\n            }\n        ]\n    },\n    {\n        \"featureType\": \"poi\",\n        \"stylers\": [\n            {\n                \"hue\": \"#679714\"\n            },\n            {\n                \"saturation\": 33.4\n            },\n            {\n                \"lightness\": -25.4\n            },\n            {\n                \"gamma\": 1\n            }\n        ]\n    }\n];\n","import React from 'react';\nimport Map from \"./components/Map\";\nfunction App() {\n    return (\n        <Map/>\n    );\n}\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(<React.StrictMode>\n    <App />\n  </React.StrictMode>, document.getElementById('root'));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}