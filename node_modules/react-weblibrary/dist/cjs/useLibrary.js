"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.useLibrary = void 0;
var react_1 = require("react");
function getFromWindow(varName) {
    return window[varName];
}
function useLibrary(varName, src, props) {
    if (props === void 0) { props = {}; }
    var library = (0, react_1.useRef)(getFromWindow(varName));
    var _a = (0, react_1.useState)(library.current ? 'load' : 'try'), status = _a[0], setStatus = _a[1];
    (0, react_1.useEffect)(function () {
        if (status !== 'try') {
            return;
        }
        var el = document.createElement('script');
        el.id = 'script-' + Buffer.from(src).toString('base64') + Math.random();
        el.src = src;
        Object.keys(props).forEach(function (k) {
            el[k] = props[k];
        });
        el.addEventListener('load', function () {
            library.current = getFromWindow(varName);
            setStatus(library.current ? 'load' : 'error');
        });
        el.addEventListener('error', function () { return setStatus('error'); });
        el.addEventListener('abort', function () { return setStatus('abort'); });
        document.body.appendChild(el);
        return function () { document.body.removeChild(el); };
        // eslint-disable-next-line react-hooks/exhaustive-deps -- props might change every render
    }, [varName, src, status]);
    var tryAgain = ['try', 'load'].includes(status)
        ? function () { return; }
        : function () { return setStatus('try'); };
    return [library.current, status, tryAgain];
}
exports.useLibrary = useLibrary;
//# sourceMappingURL=useLibrary.js.map