{"ast":null,"code":"import gapi from 'gapi';\nvar PROJECT_ID = 'summer-of-jake-adventure-map';\nvar CLIENT_ID = process.env.REACT_APP_GOOGLE_CLOUD_CLIENT_ID;\nvar API_KEY = process.env.REACT_APP_GOOGLE_CLOUD_CLIENT_SECRET_KEY;\nvar SCOPES = 'https://www.googleapis.com/storage/';\nvar API_VERSION = 'v1';\nvar BUCKET_NAME = 'strava-kmls';\n/**\n    * Load the Google storage API.\n*/\n\nfunction initializeApi() {\n  gapi.client.load('storage', API_VERSION);\n}\n/**\n * Authorize Google Compute Engine API.\n */\n\n\nfunction authorization() {\n  gapi.client.setApiKey(API_KEY);\n  gapi.auth.authorize({\n    client_id: CLIENT_ID,\n    scope: SCOPES,\n    immediate: false\n  }, function (authResult) {\n    if (authResult && !authResult.error) {\n      window.alert('Auth was successful!');\n    } else {\n      window.alert('Auth was not successful');\n    }\n  });\n}\n\nclass RouteURLService {\n  getRoutes() {\n    window.load(authorization);\n    initializeApi();\n    var request = gapi.client.storage.objects.list({\n      'bucket': BUCKET_NAME\n    });\n    request.execute(function (resp) {\n      console.log(resp);\n    });\n  }\n\n}\n\nexport default new RouteURLService();","map":{"version":3,"sources":["/Users/straussj/Documents/react_projects/summer-of-jake/src/services/RouteURLService.jsx"],"names":["gapi","PROJECT_ID","CLIENT_ID","process","env","REACT_APP_GOOGLE_CLOUD_CLIENT_ID","API_KEY","REACT_APP_GOOGLE_CLOUD_CLIENT_SECRET_KEY","SCOPES","API_VERSION","BUCKET_NAME","initializeApi","client","load","authorization","setApiKey","auth","authorize","client_id","scope","immediate","authResult","error","window","alert","RouteURLService","getRoutes","request","storage","objects","list","execute","resp","console","log"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,IAAIC,UAAU,GAAG,8BAAjB;AACA,IAAIC,SAAS,GAAGC,OAAO,CAACC,GAAR,CAAYC,gCAA5B;AACA,IAAIC,OAAO,GAAGH,OAAO,CAACC,GAAR,CAAYG,wCAA1B;AACA,IAAIC,MAAM,GAAG,qCAAb;AACA,IAAIC,WAAW,GAAG,IAAlB;AACA,IAAIC,WAAW,GAAG,aAAlB;AAEA;AACA;AACA;;AACA,SAASC,aAAT,GAAyB;AACrBX,EAAAA,IAAI,CAACY,MAAL,CAAYC,IAAZ,CAAiB,SAAjB,EAA4BJ,WAA5B;AACD;AACH;AACA;AACA;;;AACA,SAASK,aAAT,GAAyB;AACvBd,EAAAA,IAAI,CAACY,MAAL,CAAYG,SAAZ,CAAsBT,OAAtB;AACAN,EAAAA,IAAI,CAACgB,IAAL,CAAUC,SAAV,CAAoB;AAClBC,IAAAA,SAAS,EAAEhB,SADO;AAElBiB,IAAAA,KAAK,EAAEX,MAFW;AAGlBY,IAAAA,SAAS,EAAE;AAHO,GAApB,EAIG,UAASC,UAAT,EAAqB;AACnB,QAAIA,UAAU,IAAI,CAACA,UAAU,CAACC,KAA9B,EAAqC;AACnCC,MAAAA,MAAM,CAACC,KAAP,CAAa,sBAAb;AACD,KAFD,MAEO;AACLD,MAAAA,MAAM,CAACC,KAAP,CAAa,yBAAb;AACD;AACF,GAVJ;AAYD;;AAGD,MAAMC,eAAN,CAAsB;AAClBC,EAAAA,SAAS,GAAG;AACRH,IAAAA,MAAM,CAACV,IAAP,CAAYC,aAAZ;AACAH,IAAAA,aAAa;AACb,QAAIgB,OAAO,GAAG3B,IAAI,CAACY,MAAL,CAAYgB,OAAZ,CAAoBC,OAApB,CAA4BC,IAA5B,CAAiC;AAC3C,gBAAUpB;AADiC,KAAjC,CAAd;AAGAiB,IAAAA,OAAO,CAACI,OAAR,CAAgB,UAASC,IAAT,EAAe;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAFD;AAGH;;AAViB;;AAatB,eAAe,IAAIP,eAAJ,EAAf","sourcesContent":["import gapi from 'gapi'\nvar PROJECT_ID = 'summer-of-jake-adventure-map';\nvar CLIENT_ID = process.env.REACT_APP_GOOGLE_CLOUD_CLIENT_ID;\nvar API_KEY = process.env.REACT_APP_GOOGLE_CLOUD_CLIENT_SECRET_KEY;\nvar SCOPES = 'https://www.googleapis.com/storage/';\nvar API_VERSION = 'v1';\nvar BUCKET_NAME = 'strava-kmls';\n\n/**\n    * Load the Google storage API.\n*/\nfunction initializeApi() {\n    gapi.client.load('storage', API_VERSION);\n  }\n/**\n * Authorize Google Compute Engine API.\n */\nfunction authorization() {\n  gapi.client.setApiKey(API_KEY);\n  gapi.auth.authorize({\n    client_id: CLIENT_ID,\n    scope: SCOPES,\n    immediate: false\n  }, function(authResult) {\n       if (authResult && !authResult.error) {\n         window.alert('Auth was successful!');\n       } else {\n         window.alert('Auth was not successful');\n       }\n     }\n  );\n}\n\n\nclass RouteURLService {\n    getRoutes() {\n        window.load(authorization);\n        initializeApi();\n        var request = gapi.client.storage.objects.list({\n            'bucket': BUCKET_NAME\n        });\n        request.execute(function(resp) {\n            console.log(resp);\n        })\n    }\n}\n\nexport default new RouteURLService();"]},"metadata":{},"sourceType":"module"}