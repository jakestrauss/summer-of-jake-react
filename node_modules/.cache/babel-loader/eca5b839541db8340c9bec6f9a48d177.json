{"ast":null,"code":"import axios from 'axios';\nconst ROUTESURL_REST_API_URL = 'http://localhost:8080/api/routes';\n\nclass RouteURLService {\n  constructor() {\n    this.getRoutes = async () => {\n      try {\n        var finalResponse = await axios.get(ROUTESURL_REST_API_URL).then(response => {\n          const routeData = response.data;\n          var routeUrls = [];\n\n          for (var i = 0; i < routeData.length; i++) {\n            routeUrls[i] = response.data[i].url;\n          }\n\n          return routeUrls;\n        });\n        return finalResponse;\n      } catch (err) {\n        console.error(\"Routes call error\");\n      }\n    };\n  }\n\n}\n\nexport default new RouteURLService();","map":{"version":3,"sources":["/Users/straussj/Documents/react_projects/summer-of-jake/front-end/src/services/RouteURLService.jsx"],"names":["axios","ROUTESURL_REST_API_URL","RouteURLService","getRoutes","finalResponse","get","then","response","routeData","data","routeUrls","i","length","url","err","console","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,sBAAsB,GAAG,kCAA/B;;AAEA,MAAMC,eAAN,CAAsB;AAAA;AAAA,SAClBC,SADkB,GACN,YAAY;AACpB,UAAI;AACA,YAAIC,aAAa,GAAG,MAAMJ,KAAK,CAACK,GAAN,CAAUJ,sBAAV,EAAkCK,IAAlC,CAAwCC,QAAD,IAAc;AAC3E,gBAAMC,SAAS,GAAGD,QAAQ,CAACE,IAA3B;AACA,cAAIC,SAAS,GAAG,EAAhB;;AACA,eAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,SAAS,CAACI,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCD,YAAAA,SAAS,CAACC,CAAD,CAAT,GAAeJ,QAAQ,CAACE,IAAT,CAAcE,CAAd,EAAiBE,GAAhC;AACH;;AACD,iBAAOH,SAAP;AACP,SAP6B,CAA1B;AAQJ,eAAON,aAAP;AACC,OAVD,CAUE,OAAOU,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAc,mBAAd;AACH;AACJ,KAfiB;AAAA;;AAAA;;AAkBtB,eAAe,IAAId,eAAJ,EAAf","sourcesContent":["import axios from 'axios';\n\nconst ROUTESURL_REST_API_URL = 'http://localhost:8080/api/routes'\n\nclass RouteURLService {\n    getRoutes = async () => {\n        try {\n            var finalResponse = await axios.get(ROUTESURL_REST_API_URL).then((response) => {\n                const routeData = response.data;\n                var routeUrls = [];\n                for(var i = 0; i < routeData.length; i++) {\n                    routeUrls[i] = response.data[i].url;\n                }\n                return routeUrls; \n        })\n        return finalResponse;\n        } catch (err) {\n            console.error(\"Routes call error\");\n        }\n    }\n}\n\nexport default new RouteURLService();"]},"metadata":{},"sourceType":"module"}