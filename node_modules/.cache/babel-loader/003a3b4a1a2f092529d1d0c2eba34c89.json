{"ast":null,"code":"var _jsxFileName = \"/Users/straussj/Documents/react_projects/summer-of-jake/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useLoadScript } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nfunction App() {\n  _s();\n\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\"\n  });\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading maps\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: \"map\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"GIyleMSmvwUkHLuj8p7tW9iDaJE=\", false, function () {\n  return [useLoadScript];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/straussj/Documents/react_projects/summer-of-jake/src/App.tsx"],"names":["React","useLoadScript","mapStyles","width","height","App","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY"],"mappings":";;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SAAoCC,aAApC,QAAyD,wBAAzD;;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,KAAK,EAAE,MADS;AAEhBC,EAAAA,MAAM,EAAE;AAFQ,CAAlB;;AAKA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAwBN,aAAa,CAAC;AAC1CO,IAAAA,gBAAgB,EAAEC,OAAO,CAACC,GAAR,CAAYC,6BAAZ,IAA6C;AADrB,GAAD,CAA3C;AAIA,MAAIJ,SAAJ,EAAe,OAAO,oBAAP;AACf,MAAI,CAACD,QAAL,EAAe,OAAO,cAAP;AACf,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAZQD,G;UACuBJ,a;;;KADvBI,G;AAcT,eAAeA,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { GoogleMap, useJsApiLoader, useLoadScript } from '@react-google-maps/api';\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nfunction App() {\n  const {isLoaded, loadError} = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\"\n  })\n\n  if (loadError) return \"Error loading maps\";\n  if (!isLoaded) return \"Loading maps\";\n  return (\n    <div className=\"App\">\n      map\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}