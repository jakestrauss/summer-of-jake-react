{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var Access,\n      Arr,\n      Assign,\n      Base,\n      Block,\n      BooleanLiteral,\n      Call,\n      Class,\n      Code,\n      CodeFragment,\n      Comment,\n      Existence,\n      Expansion,\n      ExportAllDeclaration,\n      ExportDeclaration,\n      ExportDefaultDeclaration,\n      ExportNamedDeclaration,\n      ExportSpecifier,\n      ExportSpecifierList,\n      Extends,\n      For,\n      IdentifierLiteral,\n      If,\n      ImportClause,\n      ImportDeclaration,\n      ImportDefaultSpecifier,\n      ImportNamespaceSpecifier,\n      ImportSpecifier,\n      ImportSpecifierList,\n      In,\n      Index,\n      InfinityLiteral,\n      JS_FORBIDDEN,\n      LEVEL_ACCESS,\n      LEVEL_COND,\n      LEVEL_LIST,\n      LEVEL_OP,\n      LEVEL_PAREN,\n      LEVEL_TOP,\n      Literal,\n      ModuleDeclaration,\n      ModuleSpecifier,\n      ModuleSpecifierList,\n      NEGATE,\n      NO,\n      NaNLiteral,\n      NullLiteral,\n      NumberLiteral,\n      Obj,\n      Op,\n      Param,\n      Parens,\n      PassthroughLiteral,\n      PropertyName,\n      Range,\n      RegexLiteral,\n      RegexWithInterpolations,\n      Return,\n      SIMPLENUM,\n      Scope,\n      Slice,\n      Splat,\n      StatementLiteral,\n      StringLiteral,\n      StringWithInterpolations,\n      SuperCall,\n      Switch,\n      TAB,\n      THIS,\n      TaggedTemplateCall,\n      ThisLiteral,\n      Throw,\n      Try,\n      UTILITIES,\n      UndefinedLiteral,\n      Value,\n      While,\n      YES,\n      YieldReturn,\n      addLocationDataFn,\n      compact,\n      del,\n      ends,\n      extend,\n      flatten,\n      fragmentsToText,\n      isComplexOrAssignable,\n      isLiteralArguments,\n      isLiteralThis,\n      isUnassignable,\n      locationDataToString,\n      merge,\n      multident,\n      ref1,\n      ref2,\n      some,\n      starts,\n      throwSyntaxError,\n      unfoldSoak,\n      utility,\n      extend1 = function (child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty,\n      indexOf = [].indexOf || function (item) {\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (i in this && this[i] === item) return i;\n    }\n\n    return -1;\n  },\n      slice = [].slice;\n\n  Error.stackTraceLimit = 2e308;\n  Scope = require('./scope').Scope;\n  ref1 = require('./lexer'), isUnassignable = ref1.isUnassignable, JS_FORBIDDEN = ref1.JS_FORBIDDEN;\n  ref2 = require('./helpers'), compact = ref2.compact, flatten = ref2.flatten, extend = ref2.extend, merge = ref2.merge, del = ref2.del, starts = ref2.starts, ends = ref2.ends, some = ref2.some, addLocationDataFn = ref2.addLocationDataFn, locationDataToString = ref2.locationDataToString, throwSyntaxError = ref2.throwSyntaxError;\n  exports.extend = extend;\n  exports.addLocationDataFn = addLocationDataFn;\n\n  YES = function () {\n    return true;\n  };\n\n  NO = function () {\n    return false;\n  };\n\n  THIS = function () {\n    return this;\n  };\n\n  NEGATE = function () {\n    this.negated = !this.negated;\n    return this;\n  };\n\n  exports.CodeFragment = CodeFragment = function () {\n    function CodeFragment(parent, code) {\n      var ref3;\n      this.code = \"\" + code;\n      this.locationData = parent != null ? parent.locationData : void 0;\n      this.type = (parent != null ? (ref3 = parent.constructor) != null ? ref3.name : void 0 : void 0) || 'unknown';\n    }\n\n    CodeFragment.prototype.toString = function () {\n      return \"\" + this.code + (this.locationData ? \": \" + locationDataToString(this.locationData) : '');\n    };\n\n    return CodeFragment;\n  }();\n\n  fragmentsToText = function (fragments) {\n    var fragment;\n    return function () {\n      var j, len1, results;\n      results = [];\n\n      for (j = 0, len1 = fragments.length; j < len1; j++) {\n        fragment = fragments[j];\n        results.push(fragment.code);\n      }\n\n      return results;\n    }().join('');\n  };\n\n  exports.Base = Base = function () {\n    function Base() {}\n\n    Base.prototype.compile = function (o, lvl) {\n      return fragmentsToText(this.compileToFragments(o, lvl));\n    };\n\n    Base.prototype.compileToFragments = function (o, lvl) {\n      var node;\n      o = extend({}, o);\n\n      if (lvl) {\n        o.level = lvl;\n      }\n\n      node = this.unfoldSoak(o) || this;\n      node.tab = o.indent;\n\n      if (o.level === LEVEL_TOP || !node.isStatement(o)) {\n        return node.compileNode(o);\n      } else {\n        return node.compileClosure(o);\n      }\n    };\n\n    Base.prototype.compileClosure = function (o) {\n      var args, argumentsNode, func, jumpNode, meth, parts, ref3;\n\n      if (jumpNode = this.jumps()) {\n        jumpNode.error('cannot use a pure statement in an expression');\n      }\n\n      o.sharedScope = true;\n      func = new Code([], Block.wrap([this]));\n      args = [];\n\n      if ((argumentsNode = this.contains(isLiteralArguments)) || this.contains(isLiteralThis)) {\n        args = [new ThisLiteral()];\n\n        if (argumentsNode) {\n          meth = 'apply';\n          args.push(new IdentifierLiteral('arguments'));\n        } else {\n          meth = 'call';\n        }\n\n        func = new Value(func, [new Access(new PropertyName(meth))]);\n      }\n\n      parts = new Call(func, args).compileNode(o);\n\n      if (func.isGenerator || ((ref3 = func.base) != null ? ref3.isGenerator : void 0)) {\n        parts.unshift(this.makeCode(\"(yield* \"));\n        parts.push(this.makeCode(\")\"));\n      }\n\n      return parts;\n    };\n\n    Base.prototype.cache = function (o, level, isComplex) {\n      var complex, ref, sub;\n      complex = isComplex != null ? isComplex(this) : this.isComplex();\n\n      if (complex) {\n        ref = new IdentifierLiteral(o.scope.freeVariable('ref'));\n        sub = new Assign(ref, this);\n\n        if (level) {\n          return [sub.compileToFragments(o, level), [this.makeCode(ref.value)]];\n        } else {\n          return [sub, ref];\n        }\n      } else {\n        ref = level ? this.compileToFragments(o, level) : this;\n        return [ref, ref];\n      }\n    };\n\n    Base.prototype.cacheToCodeFragments = function (cacheValues) {\n      return [fragmentsToText(cacheValues[0]), fragmentsToText(cacheValues[1])];\n    };\n\n    Base.prototype.makeReturn = function (res) {\n      var me;\n      me = this.unwrapAll();\n\n      if (res) {\n        return new Call(new Literal(res + \".push\"), [me]);\n      } else {\n        return new Return(me);\n      }\n    };\n\n    Base.prototype.contains = function (pred) {\n      var node;\n      node = void 0;\n      this.traverseChildren(false, function (n) {\n        if (pred(n)) {\n          node = n;\n          return false;\n        }\n      });\n      return node;\n    };\n\n    Base.prototype.lastNonComment = function (list) {\n      var i;\n      i = list.length;\n\n      while (i--) {\n        if (!(list[i] instanceof Comment)) {\n          return list[i];\n        }\n      }\n\n      return null;\n    };\n\n    Base.prototype.toString = function (idt, name) {\n      var tree;\n\n      if (idt == null) {\n        idt = '';\n      }\n\n      if (name == null) {\n        name = this.constructor.name;\n      }\n\n      tree = '\\n' + idt + name;\n\n      if (this.soak) {\n        tree += '?';\n      }\n\n      this.eachChild(function (node) {\n        return tree += node.toString(idt + TAB);\n      });\n      return tree;\n    };\n\n    Base.prototype.eachChild = function (func) {\n      var attr, child, j, k, len1, len2, ref3, ref4;\n\n      if (!this.children) {\n        return this;\n      }\n\n      ref3 = this.children;\n\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        attr = ref3[j];\n\n        if (this[attr]) {\n          ref4 = flatten([this[attr]]);\n\n          for (k = 0, len2 = ref4.length; k < len2; k++) {\n            child = ref4[k];\n\n            if (func(child) === false) {\n              return this;\n            }\n          }\n        }\n      }\n\n      return this;\n    };\n\n    Base.prototype.traverseChildren = function (crossScope, func) {\n      return this.eachChild(function (child) {\n        var recur;\n        recur = func(child);\n\n        if (recur !== false) {\n          return child.traverseChildren(crossScope, func);\n        }\n      });\n    };\n\n    Base.prototype.invert = function () {\n      return new Op('!', this);\n    };\n\n    Base.prototype.unwrapAll = function () {\n      var node;\n      node = this;\n\n      while (node !== (node = node.unwrap())) {\n        continue;\n      }\n\n      return node;\n    };\n\n    Base.prototype.children = [];\n    Base.prototype.isStatement = NO;\n    Base.prototype.jumps = NO;\n    Base.prototype.isComplex = YES;\n    Base.prototype.isChainable = NO;\n    Base.prototype.isAssignable = NO;\n    Base.prototype.isNumber = NO;\n    Base.prototype.unwrap = THIS;\n    Base.prototype.unfoldSoak = NO;\n    Base.prototype.assigns = NO;\n\n    Base.prototype.updateLocationDataIfMissing = function (locationData) {\n      if (this.locationData) {\n        return this;\n      }\n\n      this.locationData = locationData;\n      return this.eachChild(function (child) {\n        return child.updateLocationDataIfMissing(locationData);\n      });\n    };\n\n    Base.prototype.error = function (message) {\n      return throwSyntaxError(message, this.locationData);\n    };\n\n    Base.prototype.makeCode = function (code) {\n      return new CodeFragment(this, code);\n    };\n\n    Base.prototype.wrapInBraces = function (fragments) {\n      return [].concat(this.makeCode('('), fragments, this.makeCode(')'));\n    };\n\n    Base.prototype.joinFragmentArrays = function (fragmentsList, joinStr) {\n      var answer, fragments, i, j, len1;\n      answer = [];\n\n      for (i = j = 0, len1 = fragmentsList.length; j < len1; i = ++j) {\n        fragments = fragmentsList[i];\n\n        if (i) {\n          answer.push(this.makeCode(joinStr));\n        }\n\n        answer = answer.concat(fragments);\n      }\n\n      return answer;\n    };\n\n    return Base;\n  }();\n\n  exports.Block = Block = function (superClass1) {\n    extend1(Block, superClass1);\n\n    function Block(nodes) {\n      this.expressions = compact(flatten(nodes || []));\n    }\n\n    Block.prototype.children = ['expressions'];\n\n    Block.prototype.push = function (node) {\n      this.expressions.push(node);\n      return this;\n    };\n\n    Block.prototype.pop = function () {\n      return this.expressions.pop();\n    };\n\n    Block.prototype.unshift = function (node) {\n      this.expressions.unshift(node);\n      return this;\n    };\n\n    Block.prototype.unwrap = function () {\n      if (this.expressions.length === 1) {\n        return this.expressions[0];\n      } else {\n        return this;\n      }\n    };\n\n    Block.prototype.isEmpty = function () {\n      return !this.expressions.length;\n    };\n\n    Block.prototype.isStatement = function (o) {\n      var exp, j, len1, ref3;\n      ref3 = this.expressions;\n\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        exp = ref3[j];\n\n        if (exp.isStatement(o)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    Block.prototype.jumps = function (o) {\n      var exp, j, jumpNode, len1, ref3;\n      ref3 = this.expressions;\n\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        exp = ref3[j];\n\n        if (jumpNode = exp.jumps(o)) {\n          return jumpNode;\n        }\n      }\n    };\n\n    Block.prototype.makeReturn = function (res) {\n      var expr, len;\n      len = this.expressions.length;\n\n      while (len--) {\n        expr = this.expressions[len];\n\n        if (!(expr instanceof Comment)) {\n          this.expressions[len] = expr.makeReturn(res);\n\n          if (expr instanceof Return && !expr.expression) {\n            this.expressions.splice(len, 1);\n          }\n\n          break;\n        }\n      }\n\n      return this;\n    };\n\n    Block.prototype.compileToFragments = function (o, level) {\n      if (o == null) {\n        o = {};\n      }\n\n      if (o.scope) {\n        return Block.__super__.compileToFragments.call(this, o, level);\n      } else {\n        return this.compileRoot(o);\n      }\n    };\n\n    Block.prototype.compileNode = function (o) {\n      var answer, compiledNodes, fragments, index, j, len1, node, ref3, top;\n      this.tab = o.indent;\n      top = o.level === LEVEL_TOP;\n      compiledNodes = [];\n      ref3 = this.expressions;\n\n      for (index = j = 0, len1 = ref3.length; j < len1; index = ++j) {\n        node = ref3[index];\n        node = node.unwrapAll();\n        node = node.unfoldSoak(o) || node;\n\n        if (node instanceof Block) {\n          compiledNodes.push(node.compileNode(o));\n        } else if (top) {\n          node.front = true;\n          fragments = node.compileToFragments(o);\n\n          if (!node.isStatement(o)) {\n            fragments.unshift(this.makeCode(\"\" + this.tab));\n            fragments.push(this.makeCode(\";\"));\n          }\n\n          compiledNodes.push(fragments);\n        } else {\n          compiledNodes.push(node.compileToFragments(o, LEVEL_LIST));\n        }\n      }\n\n      if (top) {\n        if (this.spaced) {\n          return [].concat(this.joinFragmentArrays(compiledNodes, '\\n\\n'), this.makeCode(\"\\n\"));\n        } else {\n          return this.joinFragmentArrays(compiledNodes, '\\n');\n        }\n      }\n\n      if (compiledNodes.length) {\n        answer = this.joinFragmentArrays(compiledNodes, ', ');\n      } else {\n        answer = [this.makeCode(\"void 0\")];\n      }\n\n      if (compiledNodes.length > 1 && o.level >= LEVEL_LIST) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n\n    Block.prototype.compileRoot = function (o) {\n      var exp, fragments, i, j, len1, name, prelude, preludeExps, ref3, ref4, rest;\n      o.indent = o.bare ? '' : TAB;\n      o.level = LEVEL_TOP;\n      this.spaced = true;\n      o.scope = new Scope(null, this, null, (ref3 = o.referencedVars) != null ? ref3 : []);\n      ref4 = o.locals || [];\n\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        name = ref4[j];\n        o.scope.parameter(name);\n      }\n\n      prelude = [];\n\n      if (!o.bare) {\n        preludeExps = function () {\n          var k, len2, ref5, results;\n          ref5 = this.expressions;\n          results = [];\n\n          for (i = k = 0, len2 = ref5.length; k < len2; i = ++k) {\n            exp = ref5[i];\n\n            if (!(exp.unwrap() instanceof Comment)) {\n              break;\n            }\n\n            results.push(exp);\n          }\n\n          return results;\n        }.call(this);\n\n        rest = this.expressions.slice(preludeExps.length);\n        this.expressions = preludeExps;\n\n        if (preludeExps.length) {\n          prelude = this.compileNode(merge(o, {\n            indent: ''\n          }));\n          prelude.push(this.makeCode(\"\\n\"));\n        }\n\n        this.expressions = rest;\n      }\n\n      fragments = this.compileWithDeclarations(o);\n\n      if (o.bare) {\n        return fragments;\n      }\n\n      return [].concat(prelude, this.makeCode(\"(function() {\\n\"), fragments, this.makeCode(\"\\n}).call(this);\\n\"));\n    };\n\n    Block.prototype.compileWithDeclarations = function (o) {\n      var assigns, declars, exp, fragments, i, j, len1, post, ref3, ref4, ref5, rest, scope, spaced;\n      fragments = [];\n      post = [];\n      ref3 = this.expressions;\n\n      for (i = j = 0, len1 = ref3.length; j < len1; i = ++j) {\n        exp = ref3[i];\n        exp = exp.unwrap();\n\n        if (!(exp instanceof Comment || exp instanceof Literal)) {\n          break;\n        }\n      }\n\n      o = merge(o, {\n        level: LEVEL_TOP\n      });\n\n      if (i) {\n        rest = this.expressions.splice(i, 9e9);\n        ref4 = [this.spaced, false], spaced = ref4[0], this.spaced = ref4[1];\n        ref5 = [this.compileNode(o), spaced], fragments = ref5[0], this.spaced = ref5[1];\n        this.expressions = rest;\n      }\n\n      post = this.compileNode(o);\n      scope = o.scope;\n\n      if (scope.expressions === this) {\n        declars = o.scope.hasDeclarations();\n        assigns = scope.hasAssignments;\n\n        if (declars || assigns) {\n          if (i) {\n            fragments.push(this.makeCode('\\n'));\n          }\n\n          fragments.push(this.makeCode(this.tab + \"var \"));\n\n          if (declars) {\n            fragments.push(this.makeCode(scope.declaredVariables().join(', ')));\n          }\n\n          if (assigns) {\n            if (declars) {\n              fragments.push(this.makeCode(\",\\n\" + (this.tab + TAB)));\n            }\n\n            fragments.push(this.makeCode(scope.assignedVariables().join(\",\\n\" + (this.tab + TAB))));\n          }\n\n          fragments.push(this.makeCode(\";\\n\" + (this.spaced ? '\\n' : '')));\n        } else if (fragments.length && post.length) {\n          fragments.push(this.makeCode(\"\\n\"));\n        }\n      }\n\n      return fragments.concat(post);\n    };\n\n    Block.wrap = function (nodes) {\n      if (nodes.length === 1 && nodes[0] instanceof Block) {\n        return nodes[0];\n      }\n\n      return new Block(nodes);\n    };\n\n    return Block;\n  }(Base);\n\n  exports.Literal = Literal = function (superClass1) {\n    extend1(Literal, superClass1);\n\n    function Literal(value1) {\n      this.value = value1;\n    }\n\n    Literal.prototype.isComplex = NO;\n\n    Literal.prototype.assigns = function (name) {\n      return name === this.value;\n    };\n\n    Literal.prototype.compileNode = function (o) {\n      return [this.makeCode(this.value)];\n    };\n\n    Literal.prototype.toString = function () {\n      return \" \" + (this.isStatement() ? Literal.__super__.toString.apply(this, arguments) : this.constructor.name) + \": \" + this.value;\n    };\n\n    return Literal;\n  }(Base);\n\n  exports.NumberLiteral = NumberLiteral = function (superClass1) {\n    extend1(NumberLiteral, superClass1);\n\n    function NumberLiteral() {\n      return NumberLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return NumberLiteral;\n  }(Literal);\n\n  exports.InfinityLiteral = InfinityLiteral = function (superClass1) {\n    extend1(InfinityLiteral, superClass1);\n\n    function InfinityLiteral() {\n      return InfinityLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    InfinityLiteral.prototype.compileNode = function () {\n      return [this.makeCode('2e308')];\n    };\n\n    return InfinityLiteral;\n  }(NumberLiteral);\n\n  exports.NaNLiteral = NaNLiteral = function (superClass1) {\n    extend1(NaNLiteral, superClass1);\n\n    function NaNLiteral() {\n      NaNLiteral.__super__.constructor.call(this, 'NaN');\n    }\n\n    NaNLiteral.prototype.compileNode = function (o) {\n      var code;\n      code = [this.makeCode('0/0')];\n\n      if (o.level >= LEVEL_OP) {\n        return this.wrapInBraces(code);\n      } else {\n        return code;\n      }\n    };\n\n    return NaNLiteral;\n  }(NumberLiteral);\n\n  exports.StringLiteral = StringLiteral = function (superClass1) {\n    extend1(StringLiteral, superClass1);\n\n    function StringLiteral() {\n      return StringLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return StringLiteral;\n  }(Literal);\n\n  exports.RegexLiteral = RegexLiteral = function (superClass1) {\n    extend1(RegexLiteral, superClass1);\n\n    function RegexLiteral() {\n      return RegexLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return RegexLiteral;\n  }(Literal);\n\n  exports.PassthroughLiteral = PassthroughLiteral = function (superClass1) {\n    extend1(PassthroughLiteral, superClass1);\n\n    function PassthroughLiteral() {\n      return PassthroughLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return PassthroughLiteral;\n  }(Literal);\n\n  exports.IdentifierLiteral = IdentifierLiteral = function (superClass1) {\n    extend1(IdentifierLiteral, superClass1);\n\n    function IdentifierLiteral() {\n      return IdentifierLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    IdentifierLiteral.prototype.isAssignable = YES;\n    return IdentifierLiteral;\n  }(Literal);\n\n  exports.PropertyName = PropertyName = function (superClass1) {\n    extend1(PropertyName, superClass1);\n\n    function PropertyName() {\n      return PropertyName.__super__.constructor.apply(this, arguments);\n    }\n\n    PropertyName.prototype.isAssignable = YES;\n    return PropertyName;\n  }(Literal);\n\n  exports.StatementLiteral = StatementLiteral = function (superClass1) {\n    extend1(StatementLiteral, superClass1);\n\n    function StatementLiteral() {\n      return StatementLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    StatementLiteral.prototype.isStatement = YES;\n    StatementLiteral.prototype.makeReturn = THIS;\n\n    StatementLiteral.prototype.jumps = function (o) {\n      if (this.value === 'break' && !((o != null ? o.loop : void 0) || (o != null ? o.block : void 0))) {\n        return this;\n      }\n\n      if (this.value === 'continue' && !(o != null ? o.loop : void 0)) {\n        return this;\n      }\n    };\n\n    StatementLiteral.prototype.compileNode = function (o) {\n      return [this.makeCode(\"\" + this.tab + this.value + \";\")];\n    };\n\n    return StatementLiteral;\n  }(Literal);\n\n  exports.ThisLiteral = ThisLiteral = function (superClass1) {\n    extend1(ThisLiteral, superClass1);\n\n    function ThisLiteral() {\n      ThisLiteral.__super__.constructor.call(this, 'this');\n    }\n\n    ThisLiteral.prototype.compileNode = function (o) {\n      var code, ref3;\n      code = ((ref3 = o.scope.method) != null ? ref3.bound : void 0) ? o.scope.method.context : this.value;\n      return [this.makeCode(code)];\n    };\n\n    return ThisLiteral;\n  }(Literal);\n\n  exports.UndefinedLiteral = UndefinedLiteral = function (superClass1) {\n    extend1(UndefinedLiteral, superClass1);\n\n    function UndefinedLiteral() {\n      UndefinedLiteral.__super__.constructor.call(this, 'undefined');\n    }\n\n    UndefinedLiteral.prototype.compileNode = function (o) {\n      return [this.makeCode(o.level >= LEVEL_ACCESS ? '(void 0)' : 'void 0')];\n    };\n\n    return UndefinedLiteral;\n  }(Literal);\n\n  exports.NullLiteral = NullLiteral = function (superClass1) {\n    extend1(NullLiteral, superClass1);\n\n    function NullLiteral() {\n      NullLiteral.__super__.constructor.call(this, 'null');\n    }\n\n    return NullLiteral;\n  }(Literal);\n\n  exports.BooleanLiteral = BooleanLiteral = function (superClass1) {\n    extend1(BooleanLiteral, superClass1);\n\n    function BooleanLiteral() {\n      return BooleanLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return BooleanLiteral;\n  }(Literal);\n\n  exports.Return = Return = function (superClass1) {\n    extend1(Return, superClass1);\n\n    function Return(expression) {\n      this.expression = expression;\n    }\n\n    Return.prototype.children = ['expression'];\n    Return.prototype.isStatement = YES;\n    Return.prototype.makeReturn = THIS;\n    Return.prototype.jumps = THIS;\n\n    Return.prototype.compileToFragments = function (o, level) {\n      var expr, ref3;\n      expr = (ref3 = this.expression) != null ? ref3.makeReturn() : void 0;\n\n      if (expr && !(expr instanceof Return)) {\n        return expr.compileToFragments(o, level);\n      } else {\n        return Return.__super__.compileToFragments.call(this, o, level);\n      }\n    };\n\n    Return.prototype.compileNode = function (o) {\n      var answer;\n      answer = [];\n      answer.push(this.makeCode(this.tab + (\"return\" + (this.expression ? \" \" : \"\"))));\n\n      if (this.expression) {\n        answer = answer.concat(this.expression.compileToFragments(o, LEVEL_PAREN));\n      }\n\n      answer.push(this.makeCode(\";\"));\n      return answer;\n    };\n\n    return Return;\n  }(Base);\n\n  exports.YieldReturn = YieldReturn = function (superClass1) {\n    extend1(YieldReturn, superClass1);\n\n    function YieldReturn() {\n      return YieldReturn.__super__.constructor.apply(this, arguments);\n    }\n\n    YieldReturn.prototype.compileNode = function (o) {\n      if (o.scope.parent == null) {\n        this.error('yield can only occur inside functions');\n      }\n\n      return YieldReturn.__super__.compileNode.apply(this, arguments);\n    };\n\n    return YieldReturn;\n  }(Return);\n\n  exports.Value = Value = function (superClass1) {\n    extend1(Value, superClass1);\n\n    function Value(base, props, tag) {\n      if (!props && base instanceof Value) {\n        return base;\n      }\n\n      this.base = base;\n      this.properties = props || [];\n\n      if (tag) {\n        this[tag] = true;\n      }\n\n      return this;\n    }\n\n    Value.prototype.children = ['base', 'properties'];\n\n    Value.prototype.add = function (props) {\n      this.properties = this.properties.concat(props);\n      return this;\n    };\n\n    Value.prototype.hasProperties = function () {\n      return !!this.properties.length;\n    };\n\n    Value.prototype.bareLiteral = function (type) {\n      return !this.properties.length && this.base instanceof type;\n    };\n\n    Value.prototype.isArray = function () {\n      return this.bareLiteral(Arr);\n    };\n\n    Value.prototype.isRange = function () {\n      return this.bareLiteral(Range);\n    };\n\n    Value.prototype.isComplex = function () {\n      return this.hasProperties() || this.base.isComplex();\n    };\n\n    Value.prototype.isAssignable = function () {\n      return this.hasProperties() || this.base.isAssignable();\n    };\n\n    Value.prototype.isNumber = function () {\n      return this.bareLiteral(NumberLiteral);\n    };\n\n    Value.prototype.isString = function () {\n      return this.bareLiteral(StringLiteral);\n    };\n\n    Value.prototype.isRegex = function () {\n      return this.bareLiteral(RegexLiteral);\n    };\n\n    Value.prototype.isUndefined = function () {\n      return this.bareLiteral(UndefinedLiteral);\n    };\n\n    Value.prototype.isNull = function () {\n      return this.bareLiteral(NullLiteral);\n    };\n\n    Value.prototype.isBoolean = function () {\n      return this.bareLiteral(BooleanLiteral);\n    };\n\n    Value.prototype.isAtomic = function () {\n      var j, len1, node, ref3;\n      ref3 = this.properties.concat(this.base);\n\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        node = ref3[j];\n\n        if (node.soak || node instanceof Call) {\n          return false;\n        }\n      }\n\n      return true;\n    };\n\n    Value.prototype.isNotCallable = function () {\n      return this.isNumber() || this.isString() || this.isRegex() || this.isArray() || this.isRange() || this.isSplice() || this.isObject() || this.isUndefined() || this.isNull() || this.isBoolean();\n    };\n\n    Value.prototype.isStatement = function (o) {\n      return !this.properties.length && this.base.isStatement(o);\n    };\n\n    Value.prototype.assigns = function (name) {\n      return !this.properties.length && this.base.assigns(name);\n    };\n\n    Value.prototype.jumps = function (o) {\n      return !this.properties.length && this.base.jumps(o);\n    };\n\n    Value.prototype.isObject = function (onlyGenerated) {\n      if (this.properties.length) {\n        return false;\n      }\n\n      return this.base instanceof Obj && (!onlyGenerated || this.base.generated);\n    };\n\n    Value.prototype.isSplice = function () {\n      var lastProp, ref3;\n      ref3 = this.properties, lastProp = ref3[ref3.length - 1];\n      return lastProp instanceof Slice;\n    };\n\n    Value.prototype.looksStatic = function (className) {\n      var ref3;\n      return this.base.value === className && this.properties.length === 1 && ((ref3 = this.properties[0].name) != null ? ref3.value : void 0) !== 'prototype';\n    };\n\n    Value.prototype.unwrap = function () {\n      if (this.properties.length) {\n        return this;\n      } else {\n        return this.base;\n      }\n    };\n\n    Value.prototype.cacheReference = function (o) {\n      var base, bref, name, nref, ref3;\n      ref3 = this.properties, name = ref3[ref3.length - 1];\n\n      if (this.properties.length < 2 && !this.base.isComplex() && !(name != null ? name.isComplex() : void 0)) {\n        return [this, this];\n      }\n\n      base = new Value(this.base, this.properties.slice(0, -1));\n\n      if (base.isComplex()) {\n        bref = new IdentifierLiteral(o.scope.freeVariable('base'));\n        base = new Value(new Parens(new Assign(bref, base)));\n      }\n\n      if (!name) {\n        return [base, bref];\n      }\n\n      if (name.isComplex()) {\n        nref = new IdentifierLiteral(o.scope.freeVariable('name'));\n        name = new Index(new Assign(nref, name.index));\n        nref = new Index(nref);\n      }\n\n      return [base.add(name), new Value(bref || base.base, [nref || name])];\n    };\n\n    Value.prototype.compileNode = function (o) {\n      var fragments, j, len1, prop, props;\n      this.base.front = this.front;\n      props = this.properties;\n      fragments = this.base.compileToFragments(o, props.length ? LEVEL_ACCESS : null);\n\n      if (props.length && SIMPLENUM.test(fragmentsToText(fragments))) {\n        fragments.push(this.makeCode('.'));\n      }\n\n      for (j = 0, len1 = props.length; j < len1; j++) {\n        prop = props[j];\n        fragments.push.apply(fragments, prop.compileToFragments(o));\n      }\n\n      return fragments;\n    };\n\n    Value.prototype.unfoldSoak = function (o) {\n      return this.unfoldedSoak != null ? this.unfoldedSoak : this.unfoldedSoak = function (_this) {\n        return function () {\n          var fst, i, ifn, j, len1, prop, ref, ref3, ref4, snd;\n\n          if (ifn = _this.base.unfoldSoak(o)) {\n            (ref3 = ifn.body.properties).push.apply(ref3, _this.properties);\n            return ifn;\n          }\n\n          ref4 = _this.properties;\n\n          for (i = j = 0, len1 = ref4.length; j < len1; i = ++j) {\n            prop = ref4[i];\n\n            if (!prop.soak) {\n              continue;\n            }\n\n            prop.soak = false;\n            fst = new Value(_this.base, _this.properties.slice(0, i));\n            snd = new Value(_this.base, _this.properties.slice(i));\n\n            if (fst.isComplex()) {\n              ref = new IdentifierLiteral(o.scope.freeVariable('ref'));\n              fst = new Parens(new Assign(ref, fst));\n              snd.base = ref;\n            }\n\n            return new If(new Existence(fst), snd, {\n              soak: true\n            });\n          }\n\n          return false;\n        };\n      }(this)();\n    };\n\n    return Value;\n  }(Base);\n\n  exports.Comment = Comment = function (superClass1) {\n    extend1(Comment, superClass1);\n\n    function Comment(comment1) {\n      this.comment = comment1;\n    }\n\n    Comment.prototype.isStatement = YES;\n    Comment.prototype.makeReturn = THIS;\n\n    Comment.prototype.compileNode = function (o, level) {\n      var code, comment;\n      comment = this.comment.replace(/^(\\s*)#(?=\\s)/gm, \"$1 *\");\n      code = \"/*\" + multident(comment, this.tab) + (indexOf.call(comment, '\\n') >= 0 ? \"\\n\" + this.tab : '') + \" */\";\n\n      if ((level || o.level) === LEVEL_TOP) {\n        code = o.indent + code;\n      }\n\n      return [this.makeCode(\"\\n\"), this.makeCode(code)];\n    };\n\n    return Comment;\n  }(Base);\n\n  exports.Call = Call = function (superClass1) {\n    extend1(Call, superClass1);\n\n    function Call(variable1, args1, soak1) {\n      this.variable = variable1;\n      this.args = args1 != null ? args1 : [];\n      this.soak = soak1;\n      this.isNew = false;\n\n      if (this.variable instanceof Value && this.variable.isNotCallable()) {\n        this.variable.error(\"literal is not a function\");\n      }\n    }\n\n    Call.prototype.children = ['variable', 'args'];\n\n    Call.prototype.updateLocationDataIfMissing = function (locationData) {\n      var base, ref3;\n\n      if (this.locationData && this.needsUpdatedStartLocation) {\n        this.locationData.first_line = locationData.first_line;\n        this.locationData.first_column = locationData.first_column;\n        base = ((ref3 = this.variable) != null ? ref3.base : void 0) || this.variable;\n\n        if (base.needsUpdatedStartLocation) {\n          this.variable.locationData.first_line = locationData.first_line;\n          this.variable.locationData.first_column = locationData.first_column;\n          base.updateLocationDataIfMissing(locationData);\n        }\n\n        delete this.needsUpdatedStartLocation;\n      }\n\n      return Call.__super__.updateLocationDataIfMissing.apply(this, arguments);\n    };\n\n    Call.prototype.newInstance = function () {\n      var base, ref3;\n      base = ((ref3 = this.variable) != null ? ref3.base : void 0) || this.variable;\n\n      if (base instanceof Call && !base.isNew) {\n        base.newInstance();\n      } else {\n        this.isNew = true;\n      }\n\n      this.needsUpdatedStartLocation = true;\n      return this;\n    };\n\n    Call.prototype.unfoldSoak = function (o) {\n      var call, ifn, j, left, len1, list, ref3, ref4, rite;\n\n      if (this.soak) {\n        if (this instanceof SuperCall) {\n          left = new Literal(this.superReference(o));\n          rite = new Value(left);\n        } else {\n          if (ifn = unfoldSoak(o, this, 'variable')) {\n            return ifn;\n          }\n\n          ref3 = new Value(this.variable).cacheReference(o), left = ref3[0], rite = ref3[1];\n        }\n\n        rite = new Call(rite, this.args);\n        rite.isNew = this.isNew;\n        left = new Literal(\"typeof \" + left.compile(o) + \" === \\\"function\\\"\");\n        return new If(left, new Value(rite), {\n          soak: true\n        });\n      }\n\n      call = this;\n      list = [];\n\n      while (true) {\n        if (call.variable instanceof Call) {\n          list.push(call);\n          call = call.variable;\n          continue;\n        }\n\n        if (!(call.variable instanceof Value)) {\n          break;\n        }\n\n        list.push(call);\n\n        if (!((call = call.variable.base) instanceof Call)) {\n          break;\n        }\n      }\n\n      ref4 = list.reverse();\n\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        call = ref4[j];\n\n        if (ifn) {\n          if (call.variable instanceof Call) {\n            call.variable = ifn;\n          } else {\n            call.variable.base = ifn;\n          }\n        }\n\n        ifn = unfoldSoak(o, call, 'variable');\n      }\n\n      return ifn;\n    };\n\n    Call.prototype.compileNode = function (o) {\n      var arg, argIndex, compiledArgs, compiledArray, fragments, j, len1, preface, ref3, ref4;\n\n      if ((ref3 = this.variable) != null) {\n        ref3.front = this.front;\n      }\n\n      compiledArray = Splat.compileSplattedArray(o, this.args, true);\n\n      if (compiledArray.length) {\n        return this.compileSplat(o, compiledArray);\n      }\n\n      compiledArgs = [];\n      ref4 = this.args;\n\n      for (argIndex = j = 0, len1 = ref4.length; j < len1; argIndex = ++j) {\n        arg = ref4[argIndex];\n\n        if (argIndex) {\n          compiledArgs.push(this.makeCode(\", \"));\n        }\n\n        compiledArgs.push.apply(compiledArgs, arg.compileToFragments(o, LEVEL_LIST));\n      }\n\n      fragments = [];\n\n      if (this instanceof SuperCall) {\n        preface = this.superReference(o) + (\".call(\" + this.superThis(o));\n\n        if (compiledArgs.length) {\n          preface += \", \";\n        }\n\n        fragments.push(this.makeCode(preface));\n      } else {\n        if (this.isNew) {\n          fragments.push(this.makeCode('new '));\n        }\n\n        fragments.push.apply(fragments, this.variable.compileToFragments(o, LEVEL_ACCESS));\n        fragments.push(this.makeCode(\"(\"));\n      }\n\n      fragments.push.apply(fragments, compiledArgs);\n      fragments.push(this.makeCode(\")\"));\n      return fragments;\n    };\n\n    Call.prototype.compileSplat = function (o, splatArgs) {\n      var answer, base, fun, idt, name, ref;\n\n      if (this instanceof SuperCall) {\n        return [].concat(this.makeCode(this.superReference(o) + \".apply(\" + this.superThis(o) + \", \"), splatArgs, this.makeCode(\")\"));\n      }\n\n      if (this.isNew) {\n        idt = this.tab + TAB;\n        return [].concat(this.makeCode(\"(function(func, args, ctor) {\\n\" + idt + \"ctor.prototype = func.prototype;\\n\" + idt + \"var child = new ctor, result = func.apply(child, args);\\n\" + idt + \"return Object(result) === result ? result : child;\\n\" + this.tab + \"})(\"), this.variable.compileToFragments(o, LEVEL_LIST), this.makeCode(\", \"), splatArgs, this.makeCode(\", function(){})\"));\n      }\n\n      answer = [];\n      base = new Value(this.variable);\n\n      if ((name = base.properties.pop()) && base.isComplex()) {\n        ref = o.scope.freeVariable('ref');\n        answer = answer.concat(this.makeCode(\"(\" + ref + \" = \"), base.compileToFragments(o, LEVEL_LIST), this.makeCode(\")\"), name.compileToFragments(o));\n      } else {\n        fun = base.compileToFragments(o, LEVEL_ACCESS);\n\n        if (SIMPLENUM.test(fragmentsToText(fun))) {\n          fun = this.wrapInBraces(fun);\n        }\n\n        if (name) {\n          ref = fragmentsToText(fun);\n          fun.push.apply(fun, name.compileToFragments(o));\n        } else {\n          ref = 'null';\n        }\n\n        answer = answer.concat(fun);\n      }\n\n      return answer = answer.concat(this.makeCode(\".apply(\" + ref + \", \"), splatArgs, this.makeCode(\")\"));\n    };\n\n    return Call;\n  }(Base);\n\n  exports.SuperCall = SuperCall = function (superClass1) {\n    extend1(SuperCall, superClass1);\n\n    function SuperCall(args) {\n      SuperCall.__super__.constructor.call(this, null, args != null ? args : [new Splat(new IdentifierLiteral('arguments'))]);\n\n      this.isBare = args != null;\n    }\n\n    SuperCall.prototype.superReference = function (o) {\n      var accesses, base, bref, klass, method, name, nref, variable;\n      method = o.scope.namedMethod();\n\n      if (method != null ? method.klass : void 0) {\n        klass = method.klass, name = method.name, variable = method.variable;\n\n        if (klass.isComplex()) {\n          bref = new IdentifierLiteral(o.scope.parent.freeVariable('base'));\n          base = new Value(new Parens(new Assign(bref, klass)));\n          variable.base = base;\n          variable.properties.splice(0, klass.properties.length);\n        }\n\n        if (name.isComplex() || name instanceof Index && name.index.isAssignable()) {\n          nref = new IdentifierLiteral(o.scope.parent.freeVariable('name'));\n          name = new Index(new Assign(nref, name.index));\n          variable.properties.pop();\n          variable.properties.push(name);\n        }\n\n        accesses = [new Access(new PropertyName('__super__'))];\n\n        if (method[\"static\"]) {\n          accesses.push(new Access(new PropertyName('constructor')));\n        }\n\n        accesses.push(nref != null ? new Index(nref) : name);\n        return new Value(bref != null ? bref : klass, accesses).compile(o);\n      } else if (method != null ? method.ctor : void 0) {\n        return method.name + \".__super__.constructor\";\n      } else {\n        return this.error('cannot call super outside of an instance method.');\n      }\n    };\n\n    SuperCall.prototype.superThis = function (o) {\n      var method;\n      method = o.scope.method;\n      return method && !method.klass && method.context || \"this\";\n    };\n\n    return SuperCall;\n  }(Call);\n\n  exports.RegexWithInterpolations = RegexWithInterpolations = function (superClass1) {\n    extend1(RegexWithInterpolations, superClass1);\n\n    function RegexWithInterpolations(args) {\n      if (args == null) {\n        args = [];\n      }\n\n      RegexWithInterpolations.__super__.constructor.call(this, new Value(new IdentifierLiteral('RegExp')), args, false);\n    }\n\n    return RegexWithInterpolations;\n  }(Call);\n\n  exports.TaggedTemplateCall = TaggedTemplateCall = function (superClass1) {\n    extend1(TaggedTemplateCall, superClass1);\n\n    function TaggedTemplateCall(variable, arg, soak) {\n      if (arg instanceof StringLiteral) {\n        arg = new StringWithInterpolations(Block.wrap([new Value(arg)]));\n      }\n\n      TaggedTemplateCall.__super__.constructor.call(this, variable, [arg], soak);\n    }\n\n    TaggedTemplateCall.prototype.compileNode = function (o) {\n      o.inTaggedTemplateCall = true;\n      return this.variable.compileToFragments(o, LEVEL_ACCESS).concat(this.args[0].compileToFragments(o, LEVEL_LIST));\n    };\n\n    return TaggedTemplateCall;\n  }(Call);\n\n  exports.Extends = Extends = function (superClass1) {\n    extend1(Extends, superClass1);\n\n    function Extends(child1, parent1) {\n      this.child = child1;\n      this.parent = parent1;\n    }\n\n    Extends.prototype.children = ['child', 'parent'];\n\n    Extends.prototype.compileToFragments = function (o) {\n      return new Call(new Value(new Literal(utility('extend', o))), [this.child, this.parent]).compileToFragments(o);\n    };\n\n    return Extends;\n  }(Base);\n\n  exports.Access = Access = function (superClass1) {\n    extend1(Access, superClass1);\n\n    function Access(name1, tag) {\n      this.name = name1;\n      this.soak = tag === 'soak';\n    }\n\n    Access.prototype.children = ['name'];\n\n    Access.prototype.compileToFragments = function (o) {\n      var name, node, ref3;\n      name = this.name.compileToFragments(o);\n      node = this.name.unwrap();\n\n      if (node instanceof PropertyName) {\n        if (ref3 = node.value, indexOf.call(JS_FORBIDDEN, ref3) >= 0) {\n          return [this.makeCode('[\"')].concat(slice.call(name), [this.makeCode('\"]')]);\n        } else {\n          return [this.makeCode('.')].concat(slice.call(name));\n        }\n      } else {\n        return [this.makeCode('[')].concat(slice.call(name), [this.makeCode(']')]);\n      }\n    };\n\n    Access.prototype.isComplex = NO;\n    return Access;\n  }(Base);\n\n  exports.Index = Index = function (superClass1) {\n    extend1(Index, superClass1);\n\n    function Index(index1) {\n      this.index = index1;\n    }\n\n    Index.prototype.children = ['index'];\n\n    Index.prototype.compileToFragments = function (o) {\n      return [].concat(this.makeCode(\"[\"), this.index.compileToFragments(o, LEVEL_PAREN), this.makeCode(\"]\"));\n    };\n\n    Index.prototype.isComplex = function () {\n      return this.index.isComplex();\n    };\n\n    return Index;\n  }(Base);\n\n  exports.Range = Range = function (superClass1) {\n    extend1(Range, superClass1);\n    Range.prototype.children = ['from', 'to'];\n\n    function Range(from1, to1, tag) {\n      this.from = from1;\n      this.to = to1;\n      this.exclusive = tag === 'exclusive';\n      this.equals = this.exclusive ? '' : '=';\n    }\n\n    Range.prototype.compileVariables = function (o) {\n      var isComplex, ref3, ref4, ref5, step;\n      o = merge(o, {\n        top: true\n      });\n      isComplex = del(o, 'isComplex');\n      ref3 = this.cacheToCodeFragments(this.from.cache(o, LEVEL_LIST, isComplex)), this.fromC = ref3[0], this.fromVar = ref3[1];\n      ref4 = this.cacheToCodeFragments(this.to.cache(o, LEVEL_LIST, isComplex)), this.toC = ref4[0], this.toVar = ref4[1];\n\n      if (step = del(o, 'step')) {\n        ref5 = this.cacheToCodeFragments(step.cache(o, LEVEL_LIST, isComplex)), this.step = ref5[0], this.stepVar = ref5[1];\n      }\n\n      this.fromNum = this.from.isNumber() ? Number(this.fromVar) : null;\n      this.toNum = this.to.isNumber() ? Number(this.toVar) : null;\n      return this.stepNum = (step != null ? step.isNumber() : void 0) ? Number(this.stepVar) : null;\n    };\n\n    Range.prototype.compileNode = function (o) {\n      var cond, condPart, from, gt, idx, idxName, known, lt, namedIndex, ref3, ref4, stepPart, to, varPart;\n\n      if (!this.fromVar) {\n        this.compileVariables(o);\n      }\n\n      if (!o.index) {\n        return this.compileArray(o);\n      }\n\n      known = this.fromNum != null && this.toNum != null;\n      idx = del(o, 'index');\n      idxName = del(o, 'name');\n      namedIndex = idxName && idxName !== idx;\n      varPart = idx + \" = \" + this.fromC;\n\n      if (this.toC !== this.toVar) {\n        varPart += \", \" + this.toC;\n      }\n\n      if (this.step !== this.stepVar) {\n        varPart += \", \" + this.step;\n      }\n\n      ref3 = [idx + \" <\" + this.equals, idx + \" >\" + this.equals], lt = ref3[0], gt = ref3[1];\n      condPart = this.stepNum != null ? this.stepNum > 0 ? lt + \" \" + this.toVar : gt + \" \" + this.toVar : known ? ((ref4 = [this.fromNum, this.toNum], from = ref4[0], to = ref4[1], ref4), from <= to ? lt + \" \" + to : gt + \" \" + to) : (cond = this.stepVar ? this.stepVar + \" > 0\" : this.fromVar + \" <= \" + this.toVar, cond + \" ? \" + lt + \" \" + this.toVar + \" : \" + gt + \" \" + this.toVar);\n      stepPart = this.stepVar ? idx + \" += \" + this.stepVar : known ? namedIndex ? from <= to ? \"++\" + idx : \"--\" + idx : from <= to ? idx + \"++\" : idx + \"--\" : namedIndex ? cond + \" ? ++\" + idx + \" : --\" + idx : cond + \" ? \" + idx + \"++ : \" + idx + \"--\";\n\n      if (namedIndex) {\n        varPart = idxName + \" = \" + varPart;\n      }\n\n      if (namedIndex) {\n        stepPart = idxName + \" = \" + stepPart;\n      }\n\n      return [this.makeCode(varPart + \"; \" + condPart + \"; \" + stepPart)];\n    };\n\n    Range.prototype.compileArray = function (o) {\n      var args, body, cond, hasArgs, i, idt, j, known, post, pre, range, ref3, ref4, result, results, vars;\n      known = this.fromNum != null && this.toNum != null;\n\n      if (known && Math.abs(this.fromNum - this.toNum) <= 20) {\n        range = function () {\n          results = [];\n\n          for (var j = ref3 = this.fromNum, ref4 = this.toNum; ref3 <= ref4 ? j <= ref4 : j >= ref4; ref3 <= ref4 ? j++ : j--) {\n            results.push(j);\n          }\n\n          return results;\n        }.apply(this);\n\n        if (this.exclusive) {\n          range.pop();\n        }\n\n        return [this.makeCode(\"[\" + range.join(', ') + \"]\")];\n      }\n\n      idt = this.tab + TAB;\n      i = o.scope.freeVariable('i', {\n        single: true\n      });\n      result = o.scope.freeVariable('results');\n      pre = \"\\n\" + idt + result + \" = [];\";\n\n      if (known) {\n        o.index = i;\n        body = fragmentsToText(this.compileNode(o));\n      } else {\n        vars = i + \" = \" + this.fromC + (this.toC !== this.toVar ? \", \" + this.toC : '');\n        cond = this.fromVar + \" <= \" + this.toVar;\n        body = \"var \" + vars + \"; \" + cond + \" ? \" + i + \" <\" + this.equals + \" \" + this.toVar + \" : \" + i + \" >\" + this.equals + \" \" + this.toVar + \"; \" + cond + \" ? \" + i + \"++ : \" + i + \"--\";\n      }\n\n      post = \"{ \" + result + \".push(\" + i + \"); }\\n\" + idt + \"return \" + result + \";\\n\" + o.indent;\n\n      hasArgs = function (node) {\n        return node != null ? node.contains(isLiteralArguments) : void 0;\n      };\n\n      if (hasArgs(this.from) || hasArgs(this.to)) {\n        args = ', arguments';\n      }\n\n      return [this.makeCode(\"(function() {\" + pre + \"\\n\" + idt + \"for (\" + body + \")\" + post + \"}).apply(this\" + (args != null ? args : '') + \")\")];\n    };\n\n    return Range;\n  }(Base);\n\n  exports.Slice = Slice = function (superClass1) {\n    extend1(Slice, superClass1);\n    Slice.prototype.children = ['range'];\n\n    function Slice(range1) {\n      this.range = range1;\n\n      Slice.__super__.constructor.call(this);\n    }\n\n    Slice.prototype.compileNode = function (o) {\n      var compiled, compiledText, from, fromCompiled, ref3, to, toStr;\n      ref3 = this.range, to = ref3.to, from = ref3.from;\n      fromCompiled = from && from.compileToFragments(o, LEVEL_PAREN) || [this.makeCode('0')];\n\n      if (to) {\n        compiled = to.compileToFragments(o, LEVEL_PAREN);\n        compiledText = fragmentsToText(compiled);\n\n        if (!(!this.range.exclusive && +compiledText === -1)) {\n          toStr = ', ' + (this.range.exclusive ? compiledText : to.isNumber() ? \"\" + (+compiledText + 1) : (compiled = to.compileToFragments(o, LEVEL_ACCESS), \"+\" + fragmentsToText(compiled) + \" + 1 || 9e9\"));\n        }\n      }\n\n      return [this.makeCode(\".slice(\" + fragmentsToText(fromCompiled) + (toStr || '') + \")\")];\n    };\n\n    return Slice;\n  }(Base);\n\n  exports.Obj = Obj = function (superClass1) {\n    extend1(Obj, superClass1);\n\n    function Obj(props, generated) {\n      this.generated = generated != null ? generated : false;\n      this.objects = this.properties = props || [];\n    }\n\n    Obj.prototype.children = ['properties'];\n\n    Obj.prototype.compileNode = function (o) {\n      var answer, dynamicIndex, hasDynamic, i, idt, indent, j, join, k, key, l, lastNoncom, len1, len2, len3, node, oref, prop, props, ref3, value;\n      props = this.properties;\n\n      if (this.generated) {\n        for (j = 0, len1 = props.length; j < len1; j++) {\n          node = props[j];\n\n          if (node instanceof Value) {\n            node.error('cannot have an implicit value in an implicit object');\n          }\n        }\n      }\n\n      for (dynamicIndex = k = 0, len2 = props.length; k < len2; dynamicIndex = ++k) {\n        prop = props[dynamicIndex];\n\n        if ((prop.variable || prop).base instanceof Parens) {\n          break;\n        }\n      }\n\n      hasDynamic = dynamicIndex < props.length;\n      idt = o.indent += TAB;\n      lastNoncom = this.lastNonComment(this.properties);\n      answer = [];\n\n      if (hasDynamic) {\n        oref = o.scope.freeVariable('obj');\n        answer.push(this.makeCode(\"(\\n\" + idt + oref + \" = \"));\n      }\n\n      answer.push(this.makeCode(\"{\" + (props.length === 0 || dynamicIndex === 0 ? '}' : '\\n')));\n\n      for (i = l = 0, len3 = props.length; l < len3; i = ++l) {\n        prop = props[i];\n\n        if (i === dynamicIndex) {\n          if (i !== 0) {\n            answer.push(this.makeCode(\"\\n\" + idt + \"}\"));\n          }\n\n          answer.push(this.makeCode(',\\n'));\n        }\n\n        join = i === props.length - 1 || i === dynamicIndex - 1 ? '' : prop === lastNoncom || prop instanceof Comment ? '\\n' : ',\\n';\n        indent = prop instanceof Comment ? '' : idt;\n\n        if (hasDynamic && i < dynamicIndex) {\n          indent += TAB;\n        }\n\n        if (prop instanceof Assign) {\n          if (prop.context !== 'object') {\n            prop.operatorToken.error(\"unexpected \" + prop.operatorToken.value);\n          }\n\n          if (prop.variable instanceof Value && prop.variable.hasProperties()) {\n            prop.variable.error('invalid object key');\n          }\n        }\n\n        if (prop instanceof Value && prop[\"this\"]) {\n          prop = new Assign(prop.properties[0].name, prop, 'object');\n        }\n\n        if (!(prop instanceof Comment)) {\n          if (i < dynamicIndex) {\n            if (!(prop instanceof Assign)) {\n              prop = new Assign(prop, prop, 'object');\n            }\n          } else {\n            if (prop instanceof Assign) {\n              key = prop.variable;\n              value = prop.value;\n            } else {\n              ref3 = prop.base.cache(o), key = ref3[0], value = ref3[1];\n\n              if (key instanceof IdentifierLiteral) {\n                key = new PropertyName(key.value);\n              }\n            }\n\n            prop = new Assign(new Value(new IdentifierLiteral(oref), [new Access(key)]), value);\n          }\n        }\n\n        if (indent) {\n          answer.push(this.makeCode(indent));\n        }\n\n        answer.push.apply(answer, prop.compileToFragments(o, LEVEL_TOP));\n\n        if (join) {\n          answer.push(this.makeCode(join));\n        }\n      }\n\n      if (hasDynamic) {\n        answer.push(this.makeCode(\",\\n\" + idt + oref + \"\\n\" + this.tab + \")\"));\n      } else {\n        if (props.length !== 0) {\n          answer.push(this.makeCode(\"\\n\" + this.tab + \"}\"));\n        }\n      }\n\n      if (this.front && !hasDynamic) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n\n    Obj.prototype.assigns = function (name) {\n      var j, len1, prop, ref3;\n      ref3 = this.properties;\n\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        prop = ref3[j];\n\n        if (prop.assigns(name)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    return Obj;\n  }(Base);\n\n  exports.Arr = Arr = function (superClass1) {\n    extend1(Arr, superClass1);\n\n    function Arr(objs) {\n      this.objects = objs || [];\n    }\n\n    Arr.prototype.children = ['objects'];\n\n    Arr.prototype.compileNode = function (o) {\n      var answer, compiledObjs, fragments, index, j, len1, obj;\n\n      if (!this.objects.length) {\n        return [this.makeCode('[]')];\n      }\n\n      o.indent += TAB;\n      answer = Splat.compileSplattedArray(o, this.objects);\n\n      if (answer.length) {\n        return answer;\n      }\n\n      answer = [];\n\n      compiledObjs = function () {\n        var j, len1, ref3, results;\n        ref3 = this.objects;\n        results = [];\n\n        for (j = 0, len1 = ref3.length; j < len1; j++) {\n          obj = ref3[j];\n          results.push(obj.compileToFragments(o, LEVEL_LIST));\n        }\n\n        return results;\n      }.call(this);\n\n      for (index = j = 0, len1 = compiledObjs.length; j < len1; index = ++j) {\n        fragments = compiledObjs[index];\n\n        if (index) {\n          answer.push(this.makeCode(\", \"));\n        }\n\n        answer.push.apply(answer, fragments);\n      }\n\n      if (fragmentsToText(answer).indexOf('\\n') >= 0) {\n        answer.unshift(this.makeCode(\"[\\n\" + o.indent));\n        answer.push(this.makeCode(\"\\n\" + this.tab + \"]\"));\n      } else {\n        answer.unshift(this.makeCode(\"[\"));\n        answer.push(this.makeCode(\"]\"));\n      }\n\n      return answer;\n    };\n\n    Arr.prototype.assigns = function (name) {\n      var j, len1, obj, ref3;\n      ref3 = this.objects;\n\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        obj = ref3[j];\n\n        if (obj.assigns(name)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n\n    return Arr;\n  }(Base);\n\n  exports.Class = Class = function (superClass1) {\n    extend1(Class, superClass1);\n\n    function Class(variable1, parent1, body1) {\n      this.variable = variable1;\n      this.parent = parent1;\n      this.body = body1 != null ? body1 : new Block();\n      this.boundFuncs = [];\n      this.body.classBody = true;\n    }\n\n    Class.prototype.children = ['variable', 'parent', 'body'];\n    Class.prototype.defaultClassVariableName = '_Class';\n\n    Class.prototype.determineName = function () {\n      var message, name, node, ref3, tail;\n\n      if (!this.variable) {\n        return this.defaultClassVariableName;\n      }\n\n      ref3 = this.variable.properties, tail = ref3[ref3.length - 1];\n      node = tail ? tail instanceof Access && tail.name : this.variable.base;\n\n      if (!(node instanceof IdentifierLiteral || node instanceof PropertyName)) {\n        return this.defaultClassVariableName;\n      }\n\n      name = node.value;\n\n      if (!tail) {\n        message = isUnassignable(name);\n\n        if (message) {\n          this.variable.error(message);\n        }\n      }\n\n      if (indexOf.call(JS_FORBIDDEN, name) >= 0) {\n        return \"_\" + name;\n      } else {\n        return name;\n      }\n    };\n\n    Class.prototype.setContext = function (name) {\n      return this.body.traverseChildren(false, function (node) {\n        if (node.classBody) {\n          return false;\n        }\n\n        if (node instanceof ThisLiteral) {\n          return node.value = name;\n        } else if (node instanceof Code) {\n          if (node.bound) {\n            return node.context = name;\n          }\n        }\n      });\n    };\n\n    Class.prototype.addBoundFunctions = function (o) {\n      var bvar, j, len1, lhs, ref3;\n      ref3 = this.boundFuncs;\n\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        bvar = ref3[j];\n        lhs = new Value(new ThisLiteral(), [new Access(bvar)]).compile(o);\n        this.ctor.body.unshift(new Literal(lhs + \" = \" + utility('bind', o) + \"(\" + lhs + \", this)\"));\n      }\n    };\n\n    Class.prototype.addProperties = function (node, name, o) {\n      var acc, assign, base, exprs, func, props;\n      props = node.base.properties.slice(0);\n\n      exprs = function () {\n        var results;\n        results = [];\n\n        while (assign = props.shift()) {\n          if (assign instanceof Assign) {\n            base = assign.variable.base;\n            delete assign.context;\n            func = assign.value;\n\n            if (base.value === 'constructor') {\n              if (this.ctor) {\n                assign.error('cannot define more than one constructor in a class');\n              }\n\n              if (func.bound) {\n                assign.error('cannot define a constructor as a bound function');\n              }\n\n              if (func instanceof Code) {\n                assign = this.ctor = func;\n              } else {\n                this.externalCtor = o.classScope.freeVariable('ctor');\n                assign = new Assign(new IdentifierLiteral(this.externalCtor), func);\n              }\n            } else {\n              if (assign.variable[\"this\"]) {\n                func[\"static\"] = true;\n              } else {\n                acc = base.isComplex() ? new Index(base) : new Access(base);\n                assign.variable = new Value(new IdentifierLiteral(name), [new Access(new PropertyName('prototype')), acc]);\n\n                if (func instanceof Code && func.bound) {\n                  this.boundFuncs.push(base);\n                  func.bound = false;\n                }\n              }\n            }\n          }\n\n          results.push(assign);\n        }\n\n        return results;\n      }.call(this);\n\n      return compact(exprs);\n    };\n\n    Class.prototype.walkBody = function (name, o) {\n      return this.traverseChildren(false, function (_this) {\n        return function (child) {\n          var cont, exps, i, j, len1, node, ref3;\n          cont = true;\n\n          if (child instanceof Class) {\n            return false;\n          }\n\n          if (child instanceof Block) {\n            ref3 = exps = child.expressions;\n\n            for (i = j = 0, len1 = ref3.length; j < len1; i = ++j) {\n              node = ref3[i];\n\n              if (node instanceof Assign && node.variable.looksStatic(name)) {\n                node.value[\"static\"] = true;\n              } else if (node instanceof Value && node.isObject(true)) {\n                cont = false;\n                exps[i] = _this.addProperties(node, name, o);\n              }\n            }\n\n            child.expressions = exps = flatten(exps);\n          }\n\n          return cont && !(child instanceof Class);\n        };\n      }(this));\n    };\n\n    Class.prototype.hoistDirectivePrologue = function () {\n      var expressions, index, node;\n      index = 0;\n      expressions = this.body.expressions;\n\n      while ((node = expressions[index]) && node instanceof Comment || node instanceof Value && node.isString()) {\n        ++index;\n      }\n\n      return this.directives = expressions.splice(0, index);\n    };\n\n    Class.prototype.ensureConstructor = function (name) {\n      if (!this.ctor) {\n        this.ctor = new Code();\n\n        if (this.externalCtor) {\n          this.ctor.body.push(new Literal(this.externalCtor + \".apply(this, arguments)\"));\n        } else if (this.parent) {\n          this.ctor.body.push(new Literal(name + \".__super__.constructor.apply(this, arguments)\"));\n        }\n\n        this.ctor.body.makeReturn();\n        this.body.expressions.unshift(this.ctor);\n      }\n\n      this.ctor.ctor = this.ctor.name = name;\n      this.ctor.klass = null;\n      return this.ctor.noReturn = true;\n    };\n\n    Class.prototype.compileNode = function (o) {\n      var args, argumentsNode, func, jumpNode, klass, lname, name, ref3, superClass;\n\n      if (jumpNode = this.body.jumps()) {\n        jumpNode.error('Class bodies cannot contain pure statements');\n      }\n\n      if (argumentsNode = this.body.contains(isLiteralArguments)) {\n        argumentsNode.error(\"Class bodies shouldn't reference arguments\");\n      }\n\n      name = this.determineName();\n      lname = new IdentifierLiteral(name);\n      func = new Code([], Block.wrap([this.body]));\n      args = [];\n      o.classScope = func.makeScope(o.scope);\n      this.hoistDirectivePrologue();\n      this.setContext(name);\n      this.walkBody(name, o);\n      this.ensureConstructor(name);\n      this.addBoundFunctions(o);\n      this.body.spaced = true;\n      this.body.expressions.push(lname);\n\n      if (this.parent) {\n        superClass = new IdentifierLiteral(o.classScope.freeVariable('superClass', {\n          reserve: false\n        }));\n        this.body.expressions.unshift(new Extends(lname, superClass));\n        func.params.push(new Param(superClass));\n        args.push(this.parent);\n      }\n\n      (ref3 = this.body.expressions).unshift.apply(ref3, this.directives);\n      klass = new Parens(new Call(func, args));\n\n      if (this.variable) {\n        klass = new Assign(this.variable, klass, null, {\n          moduleDeclaration: this.moduleDeclaration\n        });\n      }\n\n      return klass.compileToFragments(o);\n    };\n\n    return Class;\n  }(Base);\n\n  exports.ModuleDeclaration = ModuleDeclaration = function (superClass1) {\n    extend1(ModuleDeclaration, superClass1);\n\n    function ModuleDeclaration(clause, source1) {\n      this.clause = clause;\n      this.source = source1;\n      this.checkSource();\n    }\n\n    ModuleDeclaration.prototype.children = ['clause', 'source'];\n    ModuleDeclaration.prototype.isStatement = YES;\n    ModuleDeclaration.prototype.jumps = THIS;\n    ModuleDeclaration.prototype.makeReturn = THIS;\n\n    ModuleDeclaration.prototype.checkSource = function () {\n      if (this.source != null && this.source instanceof StringWithInterpolations) {\n        return this.source.error('the name of the module to be imported from must be an uninterpolated string');\n      }\n    };\n\n    ModuleDeclaration.prototype.checkScope = function (o, moduleDeclarationType) {\n      if (o.indent.length !== 0) {\n        return this.error(moduleDeclarationType + \" statements must be at top-level scope\");\n      }\n    };\n\n    return ModuleDeclaration;\n  }(Base);\n\n  exports.ImportDeclaration = ImportDeclaration = function (superClass1) {\n    extend1(ImportDeclaration, superClass1);\n\n    function ImportDeclaration() {\n      return ImportDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    ImportDeclaration.prototype.compileNode = function (o) {\n      var code, ref3;\n      this.checkScope(o, 'import');\n      o.importedSymbols = [];\n      code = [];\n      code.push(this.makeCode(this.tab + \"import \"));\n\n      if (this.clause != null) {\n        code.push.apply(code, this.clause.compileNode(o));\n      }\n\n      if (((ref3 = this.source) != null ? ref3.value : void 0) != null) {\n        if (this.clause !== null) {\n          code.push(this.makeCode(' from '));\n        }\n\n        code.push(this.makeCode(this.source.value));\n      }\n\n      code.push(this.makeCode(';'));\n      return code;\n    };\n\n    return ImportDeclaration;\n  }(ModuleDeclaration);\n\n  exports.ImportClause = ImportClause = function (superClass1) {\n    extend1(ImportClause, superClass1);\n\n    function ImportClause(defaultBinding, namedImports) {\n      this.defaultBinding = defaultBinding;\n      this.namedImports = namedImports;\n    }\n\n    ImportClause.prototype.children = ['defaultBinding', 'namedImports'];\n\n    ImportClause.prototype.compileNode = function (o) {\n      var code;\n      code = [];\n\n      if (this.defaultBinding != null) {\n        code.push.apply(code, this.defaultBinding.compileNode(o));\n\n        if (this.namedImports != null) {\n          code.push(this.makeCode(', '));\n        }\n      }\n\n      if (this.namedImports != null) {\n        code.push.apply(code, this.namedImports.compileNode(o));\n      }\n\n      return code;\n    };\n\n    return ImportClause;\n  }(Base);\n\n  exports.ExportDeclaration = ExportDeclaration = function (superClass1) {\n    extend1(ExportDeclaration, superClass1);\n\n    function ExportDeclaration() {\n      return ExportDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    ExportDeclaration.prototype.compileNode = function (o) {\n      var code, ref3;\n      this.checkScope(o, 'export');\n      code = [];\n      code.push(this.makeCode(this.tab + \"export \"));\n\n      if (this instanceof ExportDefaultDeclaration) {\n        code.push(this.makeCode('default '));\n      }\n\n      if (!(this instanceof ExportDefaultDeclaration) && (this.clause instanceof Assign || this.clause instanceof Class)) {\n        if (this.clause instanceof Class && !this.clause.variable) {\n          this.clause.error('anonymous classes cannot be exported');\n        }\n\n        code.push(this.makeCode('var '));\n        this.clause.moduleDeclaration = 'export';\n      }\n\n      if (this.clause.body != null && this.clause.body instanceof Block) {\n        code = code.concat(this.clause.compileToFragments(o, LEVEL_TOP));\n      } else {\n        code = code.concat(this.clause.compileNode(o));\n      }\n\n      if (((ref3 = this.source) != null ? ref3.value : void 0) != null) {\n        code.push(this.makeCode(\" from \" + this.source.value));\n      }\n\n      code.push(this.makeCode(';'));\n      return code;\n    };\n\n    return ExportDeclaration;\n  }(ModuleDeclaration);\n\n  exports.ExportNamedDeclaration = ExportNamedDeclaration = function (superClass1) {\n    extend1(ExportNamedDeclaration, superClass1);\n\n    function ExportNamedDeclaration() {\n      return ExportNamedDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    return ExportNamedDeclaration;\n  }(ExportDeclaration);\n\n  exports.ExportDefaultDeclaration = ExportDefaultDeclaration = function (superClass1) {\n    extend1(ExportDefaultDeclaration, superClass1);\n\n    function ExportDefaultDeclaration() {\n      return ExportDefaultDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    return ExportDefaultDeclaration;\n  }(ExportDeclaration);\n\n  exports.ExportAllDeclaration = ExportAllDeclaration = function (superClass1) {\n    extend1(ExportAllDeclaration, superClass1);\n\n    function ExportAllDeclaration() {\n      return ExportAllDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    return ExportAllDeclaration;\n  }(ExportDeclaration);\n\n  exports.ModuleSpecifierList = ModuleSpecifierList = function (superClass1) {\n    extend1(ModuleSpecifierList, superClass1);\n\n    function ModuleSpecifierList(specifiers) {\n      this.specifiers = specifiers;\n    }\n\n    ModuleSpecifierList.prototype.children = ['specifiers'];\n\n    ModuleSpecifierList.prototype.compileNode = function (o) {\n      var code, compiledList, fragments, index, j, len1, specifier;\n      code = [];\n      o.indent += TAB;\n\n      compiledList = function () {\n        var j, len1, ref3, results;\n        ref3 = this.specifiers;\n        results = [];\n\n        for (j = 0, len1 = ref3.length; j < len1; j++) {\n          specifier = ref3[j];\n          results.push(specifier.compileToFragments(o, LEVEL_LIST));\n        }\n\n        return results;\n      }.call(this);\n\n      if (this.specifiers.length !== 0) {\n        code.push(this.makeCode(\"{\\n\" + o.indent));\n\n        for (index = j = 0, len1 = compiledList.length; j < len1; index = ++j) {\n          fragments = compiledList[index];\n\n          if (index) {\n            code.push(this.makeCode(\",\\n\" + o.indent));\n          }\n\n          code.push.apply(code, fragments);\n        }\n\n        code.push(this.makeCode(\"\\n}\"));\n      } else {\n        code.push(this.makeCode('{}'));\n      }\n\n      return code;\n    };\n\n    return ModuleSpecifierList;\n  }(Base);\n\n  exports.ImportSpecifierList = ImportSpecifierList = function (superClass1) {\n    extend1(ImportSpecifierList, superClass1);\n\n    function ImportSpecifierList() {\n      return ImportSpecifierList.__super__.constructor.apply(this, arguments);\n    }\n\n    return ImportSpecifierList;\n  }(ModuleSpecifierList);\n\n  exports.ExportSpecifierList = ExportSpecifierList = function (superClass1) {\n    extend1(ExportSpecifierList, superClass1);\n\n    function ExportSpecifierList() {\n      return ExportSpecifierList.__super__.constructor.apply(this, arguments);\n    }\n\n    return ExportSpecifierList;\n  }(ModuleSpecifierList);\n\n  exports.ModuleSpecifier = ModuleSpecifier = function (superClass1) {\n    extend1(ModuleSpecifier, superClass1);\n\n    function ModuleSpecifier(original, alias, moduleDeclarationType1) {\n      this.original = original;\n      this.alias = alias;\n      this.moduleDeclarationType = moduleDeclarationType1;\n      this.identifier = this.alias != null ? this.alias.value : this.original.value;\n    }\n\n    ModuleSpecifier.prototype.children = ['original', 'alias'];\n\n    ModuleSpecifier.prototype.compileNode = function (o) {\n      var code;\n      o.scope.find(this.identifier, this.moduleDeclarationType);\n      code = [];\n      code.push(this.makeCode(this.original.value));\n\n      if (this.alias != null) {\n        code.push(this.makeCode(\" as \" + this.alias.value));\n      }\n\n      return code;\n    };\n\n    return ModuleSpecifier;\n  }(Base);\n\n  exports.ImportSpecifier = ImportSpecifier = function (superClass1) {\n    extend1(ImportSpecifier, superClass1);\n\n    function ImportSpecifier(imported, local) {\n      ImportSpecifier.__super__.constructor.call(this, imported, local, 'import');\n    }\n\n    ImportSpecifier.prototype.compileNode = function (o) {\n      var ref3;\n\n      if ((ref3 = this.identifier, indexOf.call(o.importedSymbols, ref3) >= 0) || o.scope.check(this.identifier)) {\n        this.error(\"'\" + this.identifier + \"' has already been declared\");\n      } else {\n        o.importedSymbols.push(this.identifier);\n      }\n\n      return ImportSpecifier.__super__.compileNode.call(this, o);\n    };\n\n    return ImportSpecifier;\n  }(ModuleSpecifier);\n\n  exports.ImportDefaultSpecifier = ImportDefaultSpecifier = function (superClass1) {\n    extend1(ImportDefaultSpecifier, superClass1);\n\n    function ImportDefaultSpecifier() {\n      return ImportDefaultSpecifier.__super__.constructor.apply(this, arguments);\n    }\n\n    return ImportDefaultSpecifier;\n  }(ImportSpecifier);\n\n  exports.ImportNamespaceSpecifier = ImportNamespaceSpecifier = function (superClass1) {\n    extend1(ImportNamespaceSpecifier, superClass1);\n\n    function ImportNamespaceSpecifier() {\n      return ImportNamespaceSpecifier.__super__.constructor.apply(this, arguments);\n    }\n\n    return ImportNamespaceSpecifier;\n  }(ImportSpecifier);\n\n  exports.ExportSpecifier = ExportSpecifier = function (superClass1) {\n    extend1(ExportSpecifier, superClass1);\n\n    function ExportSpecifier(local, exported) {\n      ExportSpecifier.__super__.constructor.call(this, local, exported, 'export');\n    }\n\n    return ExportSpecifier;\n  }(ModuleSpecifier);\n\n  exports.Assign = Assign = function (superClass1) {\n    extend1(Assign, superClass1);\n\n    function Assign(variable1, value1, context, options) {\n      this.variable = variable1;\n      this.value = value1;\n      this.context = context;\n\n      if (options == null) {\n        options = {};\n      }\n\n      this.param = options.param, this.subpattern = options.subpattern, this.operatorToken = options.operatorToken, this.moduleDeclaration = options.moduleDeclaration;\n    }\n\n    Assign.prototype.children = ['variable', 'value'];\n\n    Assign.prototype.isStatement = function (o) {\n      return (o != null ? o.level : void 0) === LEVEL_TOP && this.context != null && (this.moduleDeclaration || indexOf.call(this.context, \"?\") >= 0);\n    };\n\n    Assign.prototype.checkAssignability = function (o, varBase) {\n      if (Object.prototype.hasOwnProperty.call(o.scope.positions, varBase.value) && o.scope.variables[o.scope.positions[varBase.value]].type === 'import') {\n        return varBase.error(\"'\" + varBase.value + \"' is read-only\");\n      }\n    };\n\n    Assign.prototype.assigns = function (name) {\n      return this[this.context === 'object' ? 'value' : 'variable'].assigns(name);\n    };\n\n    Assign.prototype.unfoldSoak = function (o) {\n      return unfoldSoak(o, this, 'variable');\n    };\n\n    Assign.prototype.compileNode = function (o) {\n      var answer, compiledName, isValue, j, name, properties, prototype, ref3, ref4, ref5, ref6, ref7, ref8, val, varBase;\n\n      if (isValue = this.variable instanceof Value) {\n        if (this.variable.isArray() || this.variable.isObject()) {\n          return this.compilePatternMatch(o);\n        }\n\n        if (this.variable.isSplice()) {\n          return this.compileSplice(o);\n        }\n\n        if ((ref3 = this.context) === '||=' || ref3 === '&&=' || ref3 === '?=') {\n          return this.compileConditional(o);\n        }\n\n        if ((ref4 = this.context) === '**=' || ref4 === '//=' || ref4 === '%%=') {\n          return this.compileSpecialMath(o);\n        }\n      }\n\n      if (this.value instanceof Code) {\n        if (this.value[\"static\"]) {\n          this.value.klass = this.variable.base;\n          this.value.name = this.variable.properties[0];\n          this.value.variable = this.variable;\n        } else if (((ref5 = this.variable.properties) != null ? ref5.length : void 0) >= 2) {\n          ref6 = this.variable.properties, properties = 3 <= ref6.length ? slice.call(ref6, 0, j = ref6.length - 2) : (j = 0, []), prototype = ref6[j++], name = ref6[j++];\n\n          if (((ref7 = prototype.name) != null ? ref7.value : void 0) === 'prototype') {\n            this.value.klass = new Value(this.variable.base, properties);\n            this.value.name = name;\n            this.value.variable = this.variable;\n          }\n        }\n      }\n\n      if (!this.context) {\n        varBase = this.variable.unwrapAll();\n\n        if (!varBase.isAssignable()) {\n          this.variable.error(\"'\" + this.variable.compile(o) + \"' can't be assigned\");\n        }\n\n        if (!(typeof varBase.hasProperties === \"function\" ? varBase.hasProperties() : void 0)) {\n          if (this.moduleDeclaration) {\n            this.checkAssignability(o, varBase);\n            o.scope.add(varBase.value, this.moduleDeclaration);\n          } else if (this.param) {\n            o.scope.add(varBase.value, 'var');\n          } else {\n            this.checkAssignability(o, varBase);\n            o.scope.find(varBase.value);\n          }\n        }\n      }\n\n      val = this.value.compileToFragments(o, LEVEL_LIST);\n\n      if (isValue && this.variable.base instanceof Obj) {\n        this.variable.front = true;\n      }\n\n      compiledName = this.variable.compileToFragments(o, LEVEL_LIST);\n\n      if (this.context === 'object') {\n        if (ref8 = fragmentsToText(compiledName), indexOf.call(JS_FORBIDDEN, ref8) >= 0) {\n          compiledName.unshift(this.makeCode('\"'));\n          compiledName.push(this.makeCode('\"'));\n        }\n\n        return compiledName.concat(this.makeCode(\": \"), val);\n      }\n\n      answer = compiledName.concat(this.makeCode(\" \" + (this.context || '=') + \" \"), val);\n\n      if (o.level <= LEVEL_LIST) {\n        return answer;\n      } else {\n        return this.wrapInBraces(answer);\n      }\n    };\n\n    Assign.prototype.compilePatternMatch = function (o) {\n      var acc, assigns, code, defaultValue, expandedIdx, fragments, i, idx, isObject, ivar, j, len1, message, name, obj, objects, olen, ref, ref3, ref4, ref5, ref6, rest, top, val, value, vvar, vvarText;\n      top = o.level === LEVEL_TOP;\n      value = this.value;\n      objects = this.variable.base.objects;\n\n      if (!(olen = objects.length)) {\n        code = value.compileToFragments(o);\n\n        if (o.level >= LEVEL_OP) {\n          return this.wrapInBraces(code);\n        } else {\n          return code;\n        }\n      }\n\n      obj = objects[0];\n\n      if (olen === 1 && obj instanceof Expansion) {\n        obj.error('Destructuring assignment has no target');\n      }\n\n      isObject = this.variable.isObject();\n\n      if (top && olen === 1 && !(obj instanceof Splat)) {\n        defaultValue = null;\n\n        if (obj instanceof Assign && obj.context === 'object') {\n          ref3 = obj, (ref4 = ref3.variable, idx = ref4.base), obj = ref3.value;\n\n          if (obj instanceof Assign) {\n            defaultValue = obj.value;\n            obj = obj.variable;\n          }\n        } else {\n          if (obj instanceof Assign) {\n            defaultValue = obj.value;\n            obj = obj.variable;\n          }\n\n          idx = isObject ? obj[\"this\"] ? obj.properties[0].name : new PropertyName(obj.unwrap().value) : new NumberLiteral(0);\n        }\n\n        acc = idx.unwrap() instanceof PropertyName;\n        value = new Value(value);\n        value.properties.push(new (acc ? Access : Index)(idx));\n        message = isUnassignable(obj.unwrap().value);\n\n        if (message) {\n          obj.error(message);\n        }\n\n        if (defaultValue) {\n          value = new Op('?', value, defaultValue);\n        }\n\n        return new Assign(obj, value, null, {\n          param: this.param\n        }).compileToFragments(o, LEVEL_TOP);\n      }\n\n      vvar = value.compileToFragments(o, LEVEL_LIST);\n      vvarText = fragmentsToText(vvar);\n      assigns = [];\n      expandedIdx = false;\n\n      if (!(value.unwrap() instanceof IdentifierLiteral) || this.variable.assigns(vvarText)) {\n        assigns.push([this.makeCode((ref = o.scope.freeVariable('ref')) + \" = \")].concat(slice.call(vvar)));\n        vvar = [this.makeCode(ref)];\n        vvarText = ref;\n      }\n\n      for (i = j = 0, len1 = objects.length; j < len1; i = ++j) {\n        obj = objects[i];\n        idx = i;\n\n        if (!expandedIdx && obj instanceof Splat) {\n          name = obj.name.unwrap().value;\n          obj = obj.unwrap();\n          val = olen + \" <= \" + vvarText + \".length ? \" + utility('slice', o) + \".call(\" + vvarText + \", \" + i;\n\n          if (rest = olen - i - 1) {\n            ivar = o.scope.freeVariable('i', {\n              single: true\n            });\n            val += \", \" + ivar + \" = \" + vvarText + \".length - \" + rest + \") : (\" + ivar + \" = \" + i + \", [])\";\n          } else {\n            val += \") : []\";\n          }\n\n          val = new Literal(val);\n          expandedIdx = ivar + \"++\";\n        } else if (!expandedIdx && obj instanceof Expansion) {\n          if (rest = olen - i - 1) {\n            if (rest === 1) {\n              expandedIdx = vvarText + \".length - 1\";\n            } else {\n              ivar = o.scope.freeVariable('i', {\n                single: true\n              });\n              val = new Literal(ivar + \" = \" + vvarText + \".length - \" + rest);\n              expandedIdx = ivar + \"++\";\n              assigns.push(val.compileToFragments(o, LEVEL_LIST));\n            }\n          }\n\n          continue;\n        } else {\n          if (obj instanceof Splat || obj instanceof Expansion) {\n            obj.error(\"multiple splats/expansions are disallowed in an assignment\");\n          }\n\n          defaultValue = null;\n\n          if (obj instanceof Assign && obj.context === 'object') {\n            ref5 = obj, (ref6 = ref5.variable, idx = ref6.base), obj = ref5.value;\n\n            if (obj instanceof Assign) {\n              defaultValue = obj.value;\n              obj = obj.variable;\n            }\n          } else {\n            if (obj instanceof Assign) {\n              defaultValue = obj.value;\n              obj = obj.variable;\n            }\n\n            idx = isObject ? obj[\"this\"] ? obj.properties[0].name : new PropertyName(obj.unwrap().value) : new Literal(expandedIdx || idx);\n          }\n\n          name = obj.unwrap().value;\n          acc = idx.unwrap() instanceof PropertyName;\n          val = new Value(new Literal(vvarText), [new (acc ? Access : Index)(idx)]);\n\n          if (defaultValue) {\n            val = new Op('?', val, defaultValue);\n          }\n        }\n\n        if (name != null) {\n          message = isUnassignable(name);\n\n          if (message) {\n            obj.error(message);\n          }\n        }\n\n        assigns.push(new Assign(obj, val, null, {\n          param: this.param,\n          subpattern: true\n        }).compileToFragments(o, LEVEL_LIST));\n      }\n\n      if (!(top || this.subpattern)) {\n        assigns.push(vvar);\n      }\n\n      fragments = this.joinFragmentArrays(assigns, ', ');\n\n      if (o.level < LEVEL_LIST) {\n        return fragments;\n      } else {\n        return this.wrapInBraces(fragments);\n      }\n    };\n\n    Assign.prototype.compileConditional = function (o) {\n      var fragments, left, ref3, right;\n      ref3 = this.variable.cacheReference(o), left = ref3[0], right = ref3[1];\n\n      if (!left.properties.length && left.base instanceof Literal && !(left.base instanceof ThisLiteral) && !o.scope.check(left.base.value)) {\n        this.variable.error(\"the variable \\\"\" + left.base.value + \"\\\" can't be assigned with \" + this.context + \" because it has not been declared before\");\n      }\n\n      if (indexOf.call(this.context, \"?\") >= 0) {\n        o.isExistentialEquals = true;\n        return new If(new Existence(left), right, {\n          type: 'if'\n        }).addElse(new Assign(right, this.value, '=')).compileToFragments(o);\n      } else {\n        fragments = new Op(this.context.slice(0, -1), left, new Assign(right, this.value, '=')).compileToFragments(o);\n\n        if (o.level <= LEVEL_LIST) {\n          return fragments;\n        } else {\n          return this.wrapInBraces(fragments);\n        }\n      }\n    };\n\n    Assign.prototype.compileSpecialMath = function (o) {\n      var left, ref3, right;\n      ref3 = this.variable.cacheReference(o), left = ref3[0], right = ref3[1];\n      return new Assign(left, new Op(this.context.slice(0, -1), right, this.value)).compileToFragments(o);\n    };\n\n    Assign.prototype.compileSplice = function (o) {\n      var answer, exclusive, from, fromDecl, fromRef, name, ref3, ref4, ref5, to, valDef, valRef;\n      ref3 = this.variable.properties.pop().range, from = ref3.from, to = ref3.to, exclusive = ref3.exclusive;\n      name = this.variable.compile(o);\n\n      if (from) {\n        ref4 = this.cacheToCodeFragments(from.cache(o, LEVEL_OP)), fromDecl = ref4[0], fromRef = ref4[1];\n      } else {\n        fromDecl = fromRef = '0';\n      }\n\n      if (to) {\n        if ((from != null ? from.isNumber() : void 0) && to.isNumber()) {\n          to = to.compile(o) - fromRef;\n\n          if (!exclusive) {\n            to += 1;\n          }\n        } else {\n          to = to.compile(o, LEVEL_ACCESS) + ' - ' + fromRef;\n\n          if (!exclusive) {\n            to += ' + 1';\n          }\n        }\n      } else {\n        to = \"9e9\";\n      }\n\n      ref5 = this.value.cache(o, LEVEL_LIST), valDef = ref5[0], valRef = ref5[1];\n      answer = [].concat(this.makeCode(\"[].splice.apply(\" + name + \", [\" + fromDecl + \", \" + to + \"].concat(\"), valDef, this.makeCode(\")), \"), valRef);\n\n      if (o.level > LEVEL_TOP) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n\n    return Assign;\n  }(Base);\n\n  exports.Code = Code = function (superClass1) {\n    extend1(Code, superClass1);\n\n    function Code(params, body, tag) {\n      this.params = params || [];\n      this.body = body || new Block();\n      this.bound = tag === 'boundfunc';\n      this.isGenerator = !!this.body.contains(function (node) {\n        return node instanceof Op && node.isYield() || node instanceof YieldReturn;\n      });\n    }\n\n    Code.prototype.children = ['params', 'body'];\n\n    Code.prototype.isStatement = function () {\n      return !!this.ctor;\n    };\n\n    Code.prototype.jumps = NO;\n\n    Code.prototype.makeScope = function (parentScope) {\n      return new Scope(parentScope, this.body, this);\n    };\n\n    Code.prototype.compileNode = function (o) {\n      var answer, boundfunc, code, exprs, i, j, k, l, len1, len2, len3, len4, len5, len6, lit, m, p, param, params, q, r, ref, ref3, ref4, ref5, ref6, ref7, ref8, splats, uniqs, val, wasEmpty, wrapper;\n\n      if (this.bound && ((ref3 = o.scope.method) != null ? ref3.bound : void 0)) {\n        this.context = o.scope.method.context;\n      }\n\n      if (this.bound && !this.context) {\n        this.context = '_this';\n        wrapper = new Code([new Param(new IdentifierLiteral(this.context))], new Block([this]));\n        boundfunc = new Call(wrapper, [new ThisLiteral()]);\n        boundfunc.updateLocationDataIfMissing(this.locationData);\n        return boundfunc.compileNode(o);\n      }\n\n      o.scope = del(o, 'classScope') || this.makeScope(o.scope);\n      o.scope.shared = del(o, 'sharedScope');\n      o.indent += TAB;\n      delete o.bare;\n      delete o.isExistentialEquals;\n      params = [];\n      exprs = [];\n      ref4 = this.params;\n\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        param = ref4[j];\n\n        if (!(param instanceof Expansion)) {\n          o.scope.parameter(param.asReference(o));\n        }\n      }\n\n      ref5 = this.params;\n\n      for (k = 0, len2 = ref5.length; k < len2; k++) {\n        param = ref5[k];\n\n        if (!(param.splat || param instanceof Expansion)) {\n          continue;\n        }\n\n        ref6 = this.params;\n\n        for (l = 0, len3 = ref6.length; l < len3; l++) {\n          p = ref6[l];\n\n          if (!(p instanceof Expansion) && p.name.value) {\n            o.scope.add(p.name.value, 'var', true);\n          }\n        }\n\n        splats = new Assign(new Value(new Arr(function () {\n          var len4, m, ref7, results;\n          ref7 = this.params;\n          results = [];\n\n          for (m = 0, len4 = ref7.length; m < len4; m++) {\n            p = ref7[m];\n            results.push(p.asReference(o));\n          }\n\n          return results;\n        }.call(this))), new Value(new IdentifierLiteral('arguments')));\n        break;\n      }\n\n      ref7 = this.params;\n\n      for (m = 0, len4 = ref7.length; m < len4; m++) {\n        param = ref7[m];\n\n        if (param.isComplex()) {\n          val = ref = param.asReference(o);\n\n          if (param.value) {\n            val = new Op('?', ref, param.value);\n          }\n\n          exprs.push(new Assign(new Value(param.name), val, '=', {\n            param: true\n          }));\n        } else {\n          ref = param;\n\n          if (param.value) {\n            lit = new Literal(ref.name.value + ' == null');\n            val = new Assign(new Value(param.name), param.value, '=');\n            exprs.push(new If(lit, val));\n          }\n        }\n\n        if (!splats) {\n          params.push(ref);\n        }\n      }\n\n      wasEmpty = this.body.isEmpty();\n\n      if (splats) {\n        exprs.unshift(splats);\n      }\n\n      if (exprs.length) {\n        (ref8 = this.body.expressions).unshift.apply(ref8, exprs);\n      }\n\n      for (i = q = 0, len5 = params.length; q < len5; i = ++q) {\n        p = params[i];\n        params[i] = p.compileToFragments(o);\n        o.scope.parameter(fragmentsToText(params[i]));\n      }\n\n      uniqs = [];\n      this.eachParamName(function (name, node) {\n        if (indexOf.call(uniqs, name) >= 0) {\n          node.error(\"multiple parameters named \" + name);\n        }\n\n        return uniqs.push(name);\n      });\n\n      if (!(wasEmpty || this.noReturn)) {\n        this.body.makeReturn();\n      }\n\n      code = 'function';\n\n      if (this.isGenerator) {\n        code += '*';\n      }\n\n      if (this.ctor) {\n        code += ' ' + this.name;\n      }\n\n      code += '(';\n      answer = [this.makeCode(code)];\n\n      for (i = r = 0, len6 = params.length; r < len6; i = ++r) {\n        p = params[i];\n\n        if (i) {\n          answer.push(this.makeCode(\", \"));\n        }\n\n        answer.push.apply(answer, p);\n      }\n\n      answer.push(this.makeCode(') {'));\n\n      if (!this.body.isEmpty()) {\n        answer = answer.concat(this.makeCode(\"\\n\"), this.body.compileWithDeclarations(o), this.makeCode(\"\\n\" + this.tab));\n      }\n\n      answer.push(this.makeCode('}'));\n\n      if (this.ctor) {\n        return [this.makeCode(this.tab)].concat(slice.call(answer));\n      }\n\n      if (this.front || o.level >= LEVEL_ACCESS) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n\n    Code.prototype.eachParamName = function (iterator) {\n      var j, len1, param, ref3, results;\n      ref3 = this.params;\n      results = [];\n\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        param = ref3[j];\n        results.push(param.eachName(iterator));\n      }\n\n      return results;\n    };\n\n    Code.prototype.traverseChildren = function (crossScope, func) {\n      if (crossScope) {\n        return Code.__super__.traverseChildren.call(this, crossScope, func);\n      }\n    };\n\n    return Code;\n  }(Base);\n\n  exports.Param = Param = function (superClass1) {\n    extend1(Param, superClass1);\n\n    function Param(name1, value1, splat) {\n      var message, token;\n      this.name = name1;\n      this.value = value1;\n      this.splat = splat;\n      message = isUnassignable(this.name.unwrapAll().value);\n\n      if (message) {\n        this.name.error(message);\n      }\n\n      if (this.name instanceof Obj && this.name.generated) {\n        token = this.name.objects[0].operatorToken;\n        token.error(\"unexpected \" + token.value);\n      }\n    }\n\n    Param.prototype.children = ['name', 'value'];\n\n    Param.prototype.compileToFragments = function (o) {\n      return this.name.compileToFragments(o, LEVEL_LIST);\n    };\n\n    Param.prototype.asReference = function (o) {\n      var name, node;\n\n      if (this.reference) {\n        return this.reference;\n      }\n\n      node = this.name;\n\n      if (node[\"this\"]) {\n        name = node.properties[0].name.value;\n\n        if (indexOf.call(JS_FORBIDDEN, name) >= 0) {\n          name = \"_\" + name;\n        }\n\n        node = new IdentifierLiteral(o.scope.freeVariable(name));\n      } else if (node.isComplex()) {\n        node = new IdentifierLiteral(o.scope.freeVariable('arg'));\n      }\n\n      node = new Value(node);\n\n      if (this.splat) {\n        node = new Splat(node);\n      }\n\n      node.updateLocationDataIfMissing(this.locationData);\n      return this.reference = node;\n    };\n\n    Param.prototype.isComplex = function () {\n      return this.name.isComplex();\n    };\n\n    Param.prototype.eachName = function (iterator, name) {\n      var atParam, j, len1, node, obj, ref3, ref4;\n\n      if (name == null) {\n        name = this.name;\n      }\n\n      atParam = function (obj) {\n        return iterator(\"@\" + obj.properties[0].name.value, obj);\n      };\n\n      if (name instanceof Literal) {\n        return iterator(name.value, name);\n      }\n\n      if (name instanceof Value) {\n        return atParam(name);\n      }\n\n      ref4 = (ref3 = name.objects) != null ? ref3 : [];\n\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        obj = ref4[j];\n\n        if (obj instanceof Assign && obj.context == null) {\n          obj = obj.variable;\n        }\n\n        if (obj instanceof Assign) {\n          if (obj.value instanceof Assign) {\n            obj = obj.value;\n          }\n\n          this.eachName(iterator, obj.value.unwrap());\n        } else if (obj instanceof Splat) {\n          node = obj.name.unwrap();\n          iterator(node.value, node);\n        } else if (obj instanceof Value) {\n          if (obj.isArray() || obj.isObject()) {\n            this.eachName(iterator, obj.base);\n          } else if (obj[\"this\"]) {\n            atParam(obj);\n          } else {\n            iterator(obj.base.value, obj.base);\n          }\n        } else if (!(obj instanceof Expansion)) {\n          obj.error(\"illegal parameter \" + obj.compile());\n        }\n      }\n    };\n\n    return Param;\n  }(Base);\n\n  exports.Splat = Splat = function (superClass1) {\n    extend1(Splat, superClass1);\n    Splat.prototype.children = ['name'];\n    Splat.prototype.isAssignable = YES;\n\n    function Splat(name) {\n      this.name = name.compile ? name : new Literal(name);\n    }\n\n    Splat.prototype.assigns = function (name) {\n      return this.name.assigns(name);\n    };\n\n    Splat.prototype.compileToFragments = function (o) {\n      return this.name.compileToFragments(o);\n    };\n\n    Splat.prototype.unwrap = function () {\n      return this.name;\n    };\n\n    Splat.compileSplattedArray = function (o, list, apply) {\n      var args, base, compiledNode, concatPart, fragments, i, index, j, last, len1, node;\n      index = -1;\n\n      while ((node = list[++index]) && !(node instanceof Splat)) {\n        continue;\n      }\n\n      if (index >= list.length) {\n        return [];\n      }\n\n      if (list.length === 1) {\n        node = list[0];\n        fragments = node.compileToFragments(o, LEVEL_LIST);\n\n        if (apply) {\n          return fragments;\n        }\n\n        return [].concat(node.makeCode(utility('slice', o) + \".call(\"), fragments, node.makeCode(\")\"));\n      }\n\n      args = list.slice(index);\n\n      for (i = j = 0, len1 = args.length; j < len1; i = ++j) {\n        node = args[i];\n        compiledNode = node.compileToFragments(o, LEVEL_LIST);\n        args[i] = node instanceof Splat ? [].concat(node.makeCode(utility('slice', o) + \".call(\"), compiledNode, node.makeCode(\")\")) : [].concat(node.makeCode(\"[\"), compiledNode, node.makeCode(\"]\"));\n      }\n\n      if (index === 0) {\n        node = list[0];\n        concatPart = node.joinFragmentArrays(args.slice(1), ', ');\n        return args[0].concat(node.makeCode(\".concat(\"), concatPart, node.makeCode(\")\"));\n      }\n\n      base = function () {\n        var k, len2, ref3, results;\n        ref3 = list.slice(0, index);\n        results = [];\n\n        for (k = 0, len2 = ref3.length; k < len2; k++) {\n          node = ref3[k];\n          results.push(node.compileToFragments(o, LEVEL_LIST));\n        }\n\n        return results;\n      }();\n\n      base = list[0].joinFragmentArrays(base, ', ');\n      concatPart = list[index].joinFragmentArrays(args, ', ');\n      last = list[list.length - 1];\n      return [].concat(list[0].makeCode(\"[\"), base, list[index].makeCode(\"].concat(\"), concatPart, last.makeCode(\")\"));\n    };\n\n    return Splat;\n  }(Base);\n\n  exports.Expansion = Expansion = function (superClass1) {\n    extend1(Expansion, superClass1);\n\n    function Expansion() {\n      return Expansion.__super__.constructor.apply(this, arguments);\n    }\n\n    Expansion.prototype.isComplex = NO;\n\n    Expansion.prototype.compileNode = function (o) {\n      return this.error('Expansion must be used inside a destructuring assignment or parameter list');\n    };\n\n    Expansion.prototype.asReference = function (o) {\n      return this;\n    };\n\n    Expansion.prototype.eachName = function (iterator) {};\n\n    return Expansion;\n  }(Base);\n\n  exports.While = While = function (superClass1) {\n    extend1(While, superClass1);\n\n    function While(condition, options) {\n      this.condition = (options != null ? options.invert : void 0) ? condition.invert() : condition;\n      this.guard = options != null ? options.guard : void 0;\n    }\n\n    While.prototype.children = ['condition', 'guard', 'body'];\n    While.prototype.isStatement = YES;\n\n    While.prototype.makeReturn = function (res) {\n      if (res) {\n        return While.__super__.makeReturn.apply(this, arguments);\n      } else {\n        this.returns = !this.jumps({\n          loop: true\n        });\n        return this;\n      }\n    };\n\n    While.prototype.addBody = function (body1) {\n      this.body = body1;\n      return this;\n    };\n\n    While.prototype.jumps = function () {\n      var expressions, j, jumpNode, len1, node;\n      expressions = this.body.expressions;\n\n      if (!expressions.length) {\n        return false;\n      }\n\n      for (j = 0, len1 = expressions.length; j < len1; j++) {\n        node = expressions[j];\n\n        if (jumpNode = node.jumps({\n          loop: true\n        })) {\n          return jumpNode;\n        }\n      }\n\n      return false;\n    };\n\n    While.prototype.compileNode = function (o) {\n      var answer, body, rvar, set;\n      o.indent += TAB;\n      set = '';\n      body = this.body;\n\n      if (body.isEmpty()) {\n        body = this.makeCode('');\n      } else {\n        if (this.returns) {\n          body.makeReturn(rvar = o.scope.freeVariable('results'));\n          set = \"\" + this.tab + rvar + \" = [];\\n\";\n        }\n\n        if (this.guard) {\n          if (body.expressions.length > 1) {\n            body.expressions.unshift(new If(new Parens(this.guard).invert(), new StatementLiteral(\"continue\")));\n          } else {\n            if (this.guard) {\n              body = Block.wrap([new If(this.guard, body)]);\n            }\n          }\n        }\n\n        body = [].concat(this.makeCode(\"\\n\"), body.compileToFragments(o, LEVEL_TOP), this.makeCode(\"\\n\" + this.tab));\n      }\n\n      answer = [].concat(this.makeCode(set + this.tab + \"while (\"), this.condition.compileToFragments(o, LEVEL_PAREN), this.makeCode(\") {\"), body, this.makeCode(\"}\"));\n\n      if (this.returns) {\n        answer.push(this.makeCode(\"\\n\" + this.tab + \"return \" + rvar + \";\"));\n      }\n\n      return answer;\n    };\n\n    return While;\n  }(Base);\n\n  exports.Op = Op = function (superClass1) {\n    var CONVERSIONS, INVERSIONS;\n    extend1(Op, superClass1);\n\n    function Op(op, first, second, flip) {\n      if (op === 'in') {\n        return new In(first, second);\n      }\n\n      if (op === 'do') {\n        return this.generateDo(first);\n      }\n\n      if (op === 'new') {\n        if (first instanceof Call && !first[\"do\"] && !first.isNew) {\n          return first.newInstance();\n        }\n\n        if (first instanceof Code && first.bound || first[\"do\"]) {\n          first = new Parens(first);\n        }\n      }\n\n      this.operator = CONVERSIONS[op] || op;\n      this.first = first;\n      this.second = second;\n      this.flip = !!flip;\n      return this;\n    }\n\n    CONVERSIONS = {\n      '==': '===',\n      '!=': '!==',\n      'of': 'in',\n      'yieldfrom': 'yield*'\n    };\n    INVERSIONS = {\n      '!==': '===',\n      '===': '!=='\n    };\n    Op.prototype.children = ['first', 'second'];\n\n    Op.prototype.isNumber = function () {\n      var ref3;\n      return this.isUnary() && ((ref3 = this.operator) === '+' || ref3 === '-') && this.first instanceof Value && this.first.isNumber();\n    };\n\n    Op.prototype.isYield = function () {\n      var ref3;\n      return (ref3 = this.operator) === 'yield' || ref3 === 'yield*';\n    };\n\n    Op.prototype.isUnary = function () {\n      return !this.second;\n    };\n\n    Op.prototype.isComplex = function () {\n      return !this.isNumber();\n    };\n\n    Op.prototype.isChainable = function () {\n      var ref3;\n      return (ref3 = this.operator) === '<' || ref3 === '>' || ref3 === '>=' || ref3 === '<=' || ref3 === '===' || ref3 === '!==';\n    };\n\n    Op.prototype.invert = function () {\n      var allInvertable, curr, fst, op, ref3;\n\n      if (this.isChainable() && this.first.isChainable()) {\n        allInvertable = true;\n        curr = this;\n\n        while (curr && curr.operator) {\n          allInvertable && (allInvertable = curr.operator in INVERSIONS);\n          curr = curr.first;\n        }\n\n        if (!allInvertable) {\n          return new Parens(this).invert();\n        }\n\n        curr = this;\n\n        while (curr && curr.operator) {\n          curr.invert = !curr.invert;\n          curr.operator = INVERSIONS[curr.operator];\n          curr = curr.first;\n        }\n\n        return this;\n      } else if (op = INVERSIONS[this.operator]) {\n        this.operator = op;\n\n        if (this.first.unwrap() instanceof Op) {\n          this.first.invert();\n        }\n\n        return this;\n      } else if (this.second) {\n        return new Parens(this).invert();\n      } else if (this.operator === '!' && (fst = this.first.unwrap()) instanceof Op && ((ref3 = fst.operator) === '!' || ref3 === 'in' || ref3 === 'instanceof')) {\n        return fst;\n      } else {\n        return new Op('!', this);\n      }\n    };\n\n    Op.prototype.unfoldSoak = function (o) {\n      var ref3;\n      return ((ref3 = this.operator) === '++' || ref3 === '--' || ref3 === 'delete') && unfoldSoak(o, this, 'first');\n    };\n\n    Op.prototype.generateDo = function (exp) {\n      var call, func, j, len1, param, passedParams, ref, ref3;\n      passedParams = [];\n      func = exp instanceof Assign && (ref = exp.value.unwrap()) instanceof Code ? ref : exp;\n      ref3 = func.params || [];\n\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        param = ref3[j];\n\n        if (param.value) {\n          passedParams.push(param.value);\n          delete param.value;\n        } else {\n          passedParams.push(param);\n        }\n      }\n\n      call = new Call(exp, passedParams);\n      call[\"do\"] = true;\n      return call;\n    };\n\n    Op.prototype.compileNode = function (o) {\n      var answer, isChain, lhs, message, ref3, rhs;\n      isChain = this.isChainable() && this.first.isChainable();\n\n      if (!isChain) {\n        this.first.front = this.front;\n      }\n\n      if (this.operator === 'delete' && o.scope.check(this.first.unwrapAll().value)) {\n        this.error('delete operand may not be argument or var');\n      }\n\n      if ((ref3 = this.operator) === '--' || ref3 === '++') {\n        message = isUnassignable(this.first.unwrapAll().value);\n\n        if (message) {\n          this.first.error(message);\n        }\n      }\n\n      if (this.isYield()) {\n        return this.compileYield(o);\n      }\n\n      if (this.isUnary()) {\n        return this.compileUnary(o);\n      }\n\n      if (isChain) {\n        return this.compileChain(o);\n      }\n\n      switch (this.operator) {\n        case '?':\n          return this.compileExistence(o);\n\n        case '**':\n          return this.compilePower(o);\n\n        case '//':\n          return this.compileFloorDivision(o);\n\n        case '%%':\n          return this.compileModulo(o);\n\n        default:\n          lhs = this.first.compileToFragments(o, LEVEL_OP);\n          rhs = this.second.compileToFragments(o, LEVEL_OP);\n          answer = [].concat(lhs, this.makeCode(\" \" + this.operator + \" \"), rhs);\n\n          if (o.level <= LEVEL_OP) {\n            return answer;\n          } else {\n            return this.wrapInBraces(answer);\n          }\n\n      }\n    };\n\n    Op.prototype.compileChain = function (o) {\n      var fragments, fst, ref3, shared;\n      ref3 = this.first.second.cache(o), this.first.second = ref3[0], shared = ref3[1];\n      fst = this.first.compileToFragments(o, LEVEL_OP);\n      fragments = fst.concat(this.makeCode(\" \" + (this.invert ? '&&' : '||') + \" \"), shared.compileToFragments(o), this.makeCode(\" \" + this.operator + \" \"), this.second.compileToFragments(o, LEVEL_OP));\n      return this.wrapInBraces(fragments);\n    };\n\n    Op.prototype.compileExistence = function (o) {\n      var fst, ref;\n\n      if (this.first.isComplex()) {\n        ref = new IdentifierLiteral(o.scope.freeVariable('ref'));\n        fst = new Parens(new Assign(ref, this.first));\n      } else {\n        fst = this.first;\n        ref = fst;\n      }\n\n      return new If(new Existence(fst), ref, {\n        type: 'if'\n      }).addElse(this.second).compileToFragments(o);\n    };\n\n    Op.prototype.compileUnary = function (o) {\n      var op, parts, plusMinus;\n      parts = [];\n      op = this.operator;\n      parts.push([this.makeCode(op)]);\n\n      if (op === '!' && this.first instanceof Existence) {\n        this.first.negated = !this.first.negated;\n        return this.first.compileToFragments(o);\n      }\n\n      if (o.level >= LEVEL_ACCESS) {\n        return new Parens(this).compileToFragments(o);\n      }\n\n      plusMinus = op === '+' || op === '-';\n\n      if (op === 'new' || op === 'typeof' || op === 'delete' || plusMinus && this.first instanceof Op && this.first.operator === op) {\n        parts.push([this.makeCode(' ')]);\n      }\n\n      if (plusMinus && this.first instanceof Op || op === 'new' && this.first.isStatement(o)) {\n        this.first = new Parens(this.first);\n      }\n\n      parts.push(this.first.compileToFragments(o, LEVEL_OP));\n\n      if (this.flip) {\n        parts.reverse();\n      }\n\n      return this.joinFragmentArrays(parts, '');\n    };\n\n    Op.prototype.compileYield = function (o) {\n      var op, parts, ref3;\n      parts = [];\n      op = this.operator;\n\n      if (o.scope.parent == null) {\n        this.error('yield can only occur inside functions');\n      }\n\n      if (indexOf.call(Object.keys(this.first), 'expression') >= 0 && !(this.first instanceof Throw)) {\n        if (this.first.expression != null) {\n          parts.push(this.first.expression.compileToFragments(o, LEVEL_OP));\n        }\n      } else {\n        if (o.level >= LEVEL_PAREN) {\n          parts.push([this.makeCode(\"(\")]);\n        }\n\n        parts.push([this.makeCode(op)]);\n\n        if (((ref3 = this.first.base) != null ? ref3.value : void 0) !== '') {\n          parts.push([this.makeCode(\" \")]);\n        }\n\n        parts.push(this.first.compileToFragments(o, LEVEL_OP));\n\n        if (o.level >= LEVEL_PAREN) {\n          parts.push([this.makeCode(\")\")]);\n        }\n      }\n\n      return this.joinFragmentArrays(parts, '');\n    };\n\n    Op.prototype.compilePower = function (o) {\n      var pow;\n      pow = new Value(new IdentifierLiteral('Math'), [new Access(new PropertyName('pow'))]);\n      return new Call(pow, [this.first, this.second]).compileToFragments(o);\n    };\n\n    Op.prototype.compileFloorDivision = function (o) {\n      var div, floor, second;\n      floor = new Value(new IdentifierLiteral('Math'), [new Access(new PropertyName('floor'))]);\n      second = this.second.isComplex() ? new Parens(this.second) : this.second;\n      div = new Op('/', this.first, second);\n      return new Call(floor, [div]).compileToFragments(o);\n    };\n\n    Op.prototype.compileModulo = function (o) {\n      var mod;\n      mod = new Value(new Literal(utility('modulo', o)));\n      return new Call(mod, [this.first, this.second]).compileToFragments(o);\n    };\n\n    Op.prototype.toString = function (idt) {\n      return Op.__super__.toString.call(this, idt, this.constructor.name + ' ' + this.operator);\n    };\n\n    return Op;\n  }(Base);\n\n  exports.In = In = function (superClass1) {\n    extend1(In, superClass1);\n\n    function In(object, array) {\n      this.object = object;\n      this.array = array;\n    }\n\n    In.prototype.children = ['object', 'array'];\n    In.prototype.invert = NEGATE;\n\n    In.prototype.compileNode = function (o) {\n      var hasSplat, j, len1, obj, ref3;\n\n      if (this.array instanceof Value && this.array.isArray() && this.array.base.objects.length) {\n        ref3 = this.array.base.objects;\n\n        for (j = 0, len1 = ref3.length; j < len1; j++) {\n          obj = ref3[j];\n\n          if (!(obj instanceof Splat)) {\n            continue;\n          }\n\n          hasSplat = true;\n          break;\n        }\n\n        if (!hasSplat) {\n          return this.compileOrTest(o);\n        }\n      }\n\n      return this.compileLoopTest(o);\n    };\n\n    In.prototype.compileOrTest = function (o) {\n      var cmp, cnj, i, item, j, len1, ref, ref3, ref4, ref5, sub, tests;\n      ref3 = this.object.cache(o, LEVEL_OP), sub = ref3[0], ref = ref3[1];\n      ref4 = this.negated ? [' !== ', ' && '] : [' === ', ' || '], cmp = ref4[0], cnj = ref4[1];\n      tests = [];\n      ref5 = this.array.base.objects;\n\n      for (i = j = 0, len1 = ref5.length; j < len1; i = ++j) {\n        item = ref5[i];\n\n        if (i) {\n          tests.push(this.makeCode(cnj));\n        }\n\n        tests = tests.concat(i ? ref : sub, this.makeCode(cmp), item.compileToFragments(o, LEVEL_ACCESS));\n      }\n\n      if (o.level < LEVEL_OP) {\n        return tests;\n      } else {\n        return this.wrapInBraces(tests);\n      }\n    };\n\n    In.prototype.compileLoopTest = function (o) {\n      var fragments, ref, ref3, sub;\n      ref3 = this.object.cache(o, LEVEL_LIST), sub = ref3[0], ref = ref3[1];\n      fragments = [].concat(this.makeCode(utility('indexOf', o) + \".call(\"), this.array.compileToFragments(o, LEVEL_LIST), this.makeCode(\", \"), ref, this.makeCode(\") \" + (this.negated ? '< 0' : '>= 0')));\n\n      if (fragmentsToText(sub) === fragmentsToText(ref)) {\n        return fragments;\n      }\n\n      fragments = sub.concat(this.makeCode(', '), fragments);\n\n      if (o.level < LEVEL_LIST) {\n        return fragments;\n      } else {\n        return this.wrapInBraces(fragments);\n      }\n    };\n\n    In.prototype.toString = function (idt) {\n      return In.__super__.toString.call(this, idt, this.constructor.name + (this.negated ? '!' : ''));\n    };\n\n    return In;\n  }(Base);\n\n  exports.Try = Try = function (superClass1) {\n    extend1(Try, superClass1);\n\n    function Try(attempt, errorVariable, recovery, ensure) {\n      this.attempt = attempt;\n      this.errorVariable = errorVariable;\n      this.recovery = recovery;\n      this.ensure = ensure;\n    }\n\n    Try.prototype.children = ['attempt', 'recovery', 'ensure'];\n    Try.prototype.isStatement = YES;\n\n    Try.prototype.jumps = function (o) {\n      var ref3;\n      return this.attempt.jumps(o) || ((ref3 = this.recovery) != null ? ref3.jumps(o) : void 0);\n    };\n\n    Try.prototype.makeReturn = function (res) {\n      if (this.attempt) {\n        this.attempt = this.attempt.makeReturn(res);\n      }\n\n      if (this.recovery) {\n        this.recovery = this.recovery.makeReturn(res);\n      }\n\n      return this;\n    };\n\n    Try.prototype.compileNode = function (o) {\n      var catchPart, ensurePart, generatedErrorVariableName, message, placeholder, tryPart;\n      o.indent += TAB;\n      tryPart = this.attempt.compileToFragments(o, LEVEL_TOP);\n      catchPart = this.recovery ? (generatedErrorVariableName = o.scope.freeVariable('error', {\n        reserve: false\n      }), placeholder = new IdentifierLiteral(generatedErrorVariableName), this.errorVariable ? (message = isUnassignable(this.errorVariable.unwrapAll().value), message ? this.errorVariable.error(message) : void 0, this.recovery.unshift(new Assign(this.errorVariable, placeholder))) : void 0, [].concat(this.makeCode(\" catch (\"), placeholder.compileToFragments(o), this.makeCode(\") {\\n\"), this.recovery.compileToFragments(o, LEVEL_TOP), this.makeCode(\"\\n\" + this.tab + \"}\"))) : !(this.ensure || this.recovery) ? (generatedErrorVariableName = o.scope.freeVariable('error', {\n        reserve: false\n      }), [this.makeCode(\" catch (\" + generatedErrorVariableName + \") {}\")]) : [];\n      ensurePart = this.ensure ? [].concat(this.makeCode(\" finally {\\n\"), this.ensure.compileToFragments(o, LEVEL_TOP), this.makeCode(\"\\n\" + this.tab + \"}\")) : [];\n      return [].concat(this.makeCode(this.tab + \"try {\\n\"), tryPart, this.makeCode(\"\\n\" + this.tab + \"}\"), catchPart, ensurePart);\n    };\n\n    return Try;\n  }(Base);\n\n  exports.Throw = Throw = function (superClass1) {\n    extend1(Throw, superClass1);\n\n    function Throw(expression) {\n      this.expression = expression;\n    }\n\n    Throw.prototype.children = ['expression'];\n    Throw.prototype.isStatement = YES;\n    Throw.prototype.jumps = NO;\n    Throw.prototype.makeReturn = THIS;\n\n    Throw.prototype.compileNode = function (o) {\n      return [].concat(this.makeCode(this.tab + \"throw \"), this.expression.compileToFragments(o), this.makeCode(\";\"));\n    };\n\n    return Throw;\n  }(Base);\n\n  exports.Existence = Existence = function (superClass1) {\n    extend1(Existence, superClass1);\n\n    function Existence(expression) {\n      this.expression = expression;\n    }\n\n    Existence.prototype.children = ['expression'];\n    Existence.prototype.invert = NEGATE;\n\n    Existence.prototype.compileNode = function (o) {\n      var cmp, cnj, code, ref3;\n      this.expression.front = this.front;\n      code = this.expression.compile(o, LEVEL_OP);\n\n      if (this.expression.unwrap() instanceof IdentifierLiteral && !o.scope.check(code)) {\n        ref3 = this.negated ? ['===', '||'] : ['!==', '&&'], cmp = ref3[0], cnj = ref3[1];\n        code = \"typeof \" + code + \" \" + cmp + \" \\\"undefined\\\" \" + cnj + \" \" + code + \" \" + cmp + \" null\";\n      } else {\n        code = code + \" \" + (this.negated ? '==' : '!=') + \" null\";\n      }\n\n      return [this.makeCode(o.level <= LEVEL_COND ? code : \"(\" + code + \")\")];\n    };\n\n    return Existence;\n  }(Base);\n\n  exports.Parens = Parens = function (superClass1) {\n    extend1(Parens, superClass1);\n\n    function Parens(body1) {\n      this.body = body1;\n    }\n\n    Parens.prototype.children = ['body'];\n\n    Parens.prototype.unwrap = function () {\n      return this.body;\n    };\n\n    Parens.prototype.isComplex = function () {\n      return this.body.isComplex();\n    };\n\n    Parens.prototype.compileNode = function (o) {\n      var bare, expr, fragments;\n      expr = this.body.unwrap();\n\n      if (expr instanceof Value && expr.isAtomic()) {\n        expr.front = this.front;\n        return expr.compileToFragments(o);\n      }\n\n      fragments = expr.compileToFragments(o, LEVEL_PAREN);\n      bare = o.level < LEVEL_OP && (expr instanceof Op || expr instanceof Call || expr instanceof For && expr.returns) && (o.level < LEVEL_COND || fragments.length <= 3);\n\n      if (bare) {\n        return fragments;\n      } else {\n        return this.wrapInBraces(fragments);\n      }\n    };\n\n    return Parens;\n  }(Base);\n\n  exports.StringWithInterpolations = StringWithInterpolations = function (superClass1) {\n    extend1(StringWithInterpolations, superClass1);\n\n    function StringWithInterpolations() {\n      return StringWithInterpolations.__super__.constructor.apply(this, arguments);\n    }\n\n    StringWithInterpolations.prototype.compileNode = function (o) {\n      var element, elements, expr, fragments, j, len1, value;\n\n      if (!o.inTaggedTemplateCall) {\n        return StringWithInterpolations.__super__.compileNode.apply(this, arguments);\n      }\n\n      expr = this.body.unwrap();\n      elements = [];\n      expr.traverseChildren(false, function (node) {\n        if (node instanceof StringLiteral) {\n          elements.push(node);\n          return true;\n        } else if (node instanceof Parens) {\n          elements.push(node);\n          return false;\n        }\n\n        return true;\n      });\n      fragments = [];\n      fragments.push(this.makeCode('`'));\n\n      for (j = 0, len1 = elements.length; j < len1; j++) {\n        element = elements[j];\n\n        if (element instanceof StringLiteral) {\n          value = element.value.slice(1, -1);\n          value = value.replace(/(\\\\*)(`|\\$\\{)/g, function (match, backslashes, toBeEscaped) {\n            if (backslashes.length % 2 === 0) {\n              return backslashes + \"\\\\\" + toBeEscaped;\n            } else {\n              return match;\n            }\n          });\n          fragments.push(this.makeCode(value));\n        } else {\n          fragments.push(this.makeCode('${'));\n          fragments.push.apply(fragments, element.compileToFragments(o, LEVEL_PAREN));\n          fragments.push(this.makeCode('}'));\n        }\n      }\n\n      fragments.push(this.makeCode('`'));\n      return fragments;\n    };\n\n    return StringWithInterpolations;\n  }(Parens);\n\n  exports.For = For = function (superClass1) {\n    extend1(For, superClass1);\n\n    function For(body, source) {\n      var ref3;\n      this.source = source.source, this.guard = source.guard, this.step = source.step, this.name = source.name, this.index = source.index;\n      this.body = Block.wrap([body]);\n      this.own = !!source.own;\n      this.object = !!source.object;\n      this.from = !!source.from;\n\n      if (this.from && this.index) {\n        this.index.error('cannot use index with for-from');\n      }\n\n      if (this.own && !this.object) {\n        source.ownTag.error(\"cannot use own with for-\" + (this.from ? 'from' : 'in'));\n      }\n\n      if (this.object) {\n        ref3 = [this.index, this.name], this.name = ref3[0], this.index = ref3[1];\n      }\n\n      if (this.index instanceof Value && !this.index.isAssignable()) {\n        this.index.error('index cannot be a pattern matching expression');\n      }\n\n      this.range = this.source instanceof Value && this.source.base instanceof Range && !this.source.properties.length && !this.from;\n      this.pattern = this.name instanceof Value;\n\n      if (this.range && this.index) {\n        this.index.error('indexes do not apply to range loops');\n      }\n\n      if (this.range && this.pattern) {\n        this.name.error('cannot pattern match over range loops');\n      }\n\n      this.returns = false;\n    }\n\n    For.prototype.children = ['body', 'source', 'guard', 'step'];\n\n    For.prototype.compileNode = function (o) {\n      var body, bodyFragments, compare, compareDown, declare, declareDown, defPart, defPartFragments, down, forPartFragments, guardPart, idt1, increment, index, ivar, kvar, kvarAssign, last, lvar, name, namePart, ref, ref3, ref4, resultPart, returnResult, rvar, scope, source, step, stepNum, stepVar, svar, varPart;\n      body = Block.wrap([this.body]);\n      ref3 = body.expressions, last = ref3[ref3.length - 1];\n\n      if ((last != null ? last.jumps() : void 0) instanceof Return) {\n        this.returns = false;\n      }\n\n      source = this.range ? this.source.base : this.source;\n      scope = o.scope;\n\n      if (!this.pattern) {\n        name = this.name && this.name.compile(o, LEVEL_LIST);\n      }\n\n      index = this.index && this.index.compile(o, LEVEL_LIST);\n\n      if (name && !this.pattern) {\n        scope.find(name);\n      }\n\n      if (index && !(this.index instanceof Value)) {\n        scope.find(index);\n      }\n\n      if (this.returns) {\n        rvar = scope.freeVariable('results');\n      }\n\n      if (this.from) {\n        if (this.pattern) {\n          ivar = scope.freeVariable('x', {\n            single: true\n          });\n        }\n      } else {\n        ivar = this.object && index || scope.freeVariable('i', {\n          single: true\n        });\n      }\n\n      kvar = (this.range || this.from) && name || index || ivar;\n      kvarAssign = kvar !== ivar ? kvar + \" = \" : \"\";\n\n      if (this.step && !this.range) {\n        ref4 = this.cacheToCodeFragments(this.step.cache(o, LEVEL_LIST, isComplexOrAssignable)), step = ref4[0], stepVar = ref4[1];\n\n        if (this.step.isNumber()) {\n          stepNum = Number(stepVar);\n        }\n      }\n\n      if (this.pattern) {\n        name = ivar;\n      }\n\n      varPart = '';\n      guardPart = '';\n      defPart = '';\n      idt1 = this.tab + TAB;\n\n      if (this.range) {\n        forPartFragments = source.compileToFragments(merge(o, {\n          index: ivar,\n          name: name,\n          step: this.step,\n          isComplex: isComplexOrAssignable\n        }));\n      } else {\n        svar = this.source.compile(o, LEVEL_LIST);\n\n        if ((name || this.own) && !(this.source.unwrap() instanceof IdentifierLiteral)) {\n          defPart += \"\" + this.tab + (ref = scope.freeVariable('ref')) + \" = \" + svar + \";\\n\";\n          svar = ref;\n        }\n\n        if (name && !this.pattern && !this.from) {\n          namePart = name + \" = \" + svar + \"[\" + kvar + \"]\";\n        }\n\n        if (!this.object && !this.from) {\n          if (step !== stepVar) {\n            defPart += \"\" + this.tab + step + \";\\n\";\n          }\n\n          down = stepNum < 0;\n\n          if (!(this.step && stepNum != null && down)) {\n            lvar = scope.freeVariable('len');\n          }\n\n          declare = \"\" + kvarAssign + ivar + \" = 0, \" + lvar + \" = \" + svar + \".length\";\n          declareDown = \"\" + kvarAssign + ivar + \" = \" + svar + \".length - 1\";\n          compare = ivar + \" < \" + lvar;\n          compareDown = ivar + \" >= 0\";\n\n          if (this.step) {\n            if (stepNum != null) {\n              if (down) {\n                compare = compareDown;\n                declare = declareDown;\n              }\n            } else {\n              compare = stepVar + \" > 0 ? \" + compare + \" : \" + compareDown;\n              declare = \"(\" + stepVar + \" > 0 ? (\" + declare + \") : \" + declareDown + \")\";\n            }\n\n            increment = ivar + \" += \" + stepVar;\n          } else {\n            increment = \"\" + (kvar !== ivar ? \"++\" + ivar : ivar + \"++\");\n          }\n\n          forPartFragments = [this.makeCode(declare + \"; \" + compare + \"; \" + kvarAssign + increment)];\n        }\n      }\n\n      if (this.returns) {\n        resultPart = \"\" + this.tab + rvar + \" = [];\\n\";\n        returnResult = \"\\n\" + this.tab + \"return \" + rvar + \";\";\n        body.makeReturn(rvar);\n      }\n\n      if (this.guard) {\n        if (body.expressions.length > 1) {\n          body.expressions.unshift(new If(new Parens(this.guard).invert(), new StatementLiteral(\"continue\")));\n        } else {\n          if (this.guard) {\n            body = Block.wrap([new If(this.guard, body)]);\n          }\n        }\n      }\n\n      if (this.pattern) {\n        body.expressions.unshift(new Assign(this.name, this.from ? new IdentifierLiteral(kvar) : new Literal(svar + \"[\" + kvar + \"]\")));\n      }\n\n      defPartFragments = [].concat(this.makeCode(defPart), this.pluckDirectCall(o, body));\n\n      if (namePart) {\n        varPart = \"\\n\" + idt1 + namePart + \";\";\n      }\n\n      if (this.object) {\n        forPartFragments = [this.makeCode(kvar + \" in \" + svar)];\n\n        if (this.own) {\n          guardPart = \"\\n\" + idt1 + \"if (!\" + utility('hasProp', o) + \".call(\" + svar + \", \" + kvar + \")) continue;\";\n        }\n      } else if (this.from) {\n        forPartFragments = [this.makeCode(kvar + \" of \" + svar)];\n      }\n\n      bodyFragments = body.compileToFragments(merge(o, {\n        indent: idt1\n      }), LEVEL_TOP);\n\n      if (bodyFragments && bodyFragments.length > 0) {\n        bodyFragments = [].concat(this.makeCode(\"\\n\"), bodyFragments, this.makeCode(\"\\n\"));\n      }\n\n      return [].concat(defPartFragments, this.makeCode(\"\" + (resultPart || '') + this.tab + \"for (\"), forPartFragments, this.makeCode(\") {\" + guardPart + varPart), bodyFragments, this.makeCode(this.tab + \"}\" + (returnResult || '')));\n    };\n\n    For.prototype.pluckDirectCall = function (o, body) {\n      var base, defs, expr, fn, idx, j, len1, ref, ref3, ref4, ref5, ref6, ref7, ref8, ref9, val;\n      defs = [];\n      ref3 = body.expressions;\n\n      for (idx = j = 0, len1 = ref3.length; j < len1; idx = ++j) {\n        expr = ref3[idx];\n        expr = expr.unwrapAll();\n\n        if (!(expr instanceof Call)) {\n          continue;\n        }\n\n        val = (ref4 = expr.variable) != null ? ref4.unwrapAll() : void 0;\n\n        if (!(val instanceof Code || val instanceof Value && ((ref5 = val.base) != null ? ref5.unwrapAll() : void 0) instanceof Code && val.properties.length === 1 && ((ref6 = (ref7 = val.properties[0].name) != null ? ref7.value : void 0) === 'call' || ref6 === 'apply'))) {\n          continue;\n        }\n\n        fn = ((ref8 = val.base) != null ? ref8.unwrapAll() : void 0) || val;\n        ref = new IdentifierLiteral(o.scope.freeVariable('fn'));\n        base = new Value(ref);\n\n        if (val.base) {\n          ref9 = [base, val], val.base = ref9[0], base = ref9[1];\n        }\n\n        body.expressions[idx] = new Call(base, expr.args);\n        defs = defs.concat(this.makeCode(this.tab), new Assign(ref, fn).compileToFragments(o, LEVEL_TOP), this.makeCode(';\\n'));\n      }\n\n      return defs;\n    };\n\n    return For;\n  }(While);\n\n  exports.Switch = Switch = function (superClass1) {\n    extend1(Switch, superClass1);\n\n    function Switch(subject, cases, otherwise) {\n      this.subject = subject;\n      this.cases = cases;\n      this.otherwise = otherwise;\n    }\n\n    Switch.prototype.children = ['subject', 'cases', 'otherwise'];\n    Switch.prototype.isStatement = YES;\n\n    Switch.prototype.jumps = function (o) {\n      var block, conds, j, jumpNode, len1, ref3, ref4, ref5;\n\n      if (o == null) {\n        o = {\n          block: true\n        };\n      }\n\n      ref3 = this.cases;\n\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        ref4 = ref3[j], conds = ref4[0], block = ref4[1];\n\n        if (jumpNode = block.jumps(o)) {\n          return jumpNode;\n        }\n      }\n\n      return (ref5 = this.otherwise) != null ? ref5.jumps(o) : void 0;\n    };\n\n    Switch.prototype.makeReturn = function (res) {\n      var j, len1, pair, ref3, ref4;\n      ref3 = this.cases;\n\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        pair = ref3[j];\n        pair[1].makeReturn(res);\n      }\n\n      if (res) {\n        this.otherwise || (this.otherwise = new Block([new Literal('void 0')]));\n      }\n\n      if ((ref4 = this.otherwise) != null) {\n        ref4.makeReturn(res);\n      }\n\n      return this;\n    };\n\n    Switch.prototype.compileNode = function (o) {\n      var block, body, cond, conditions, expr, fragments, i, idt1, idt2, j, k, len1, len2, ref3, ref4, ref5;\n      idt1 = o.indent + TAB;\n      idt2 = o.indent = idt1 + TAB;\n      fragments = [].concat(this.makeCode(this.tab + \"switch (\"), this.subject ? this.subject.compileToFragments(o, LEVEL_PAREN) : this.makeCode(\"false\"), this.makeCode(\") {\\n\"));\n      ref3 = this.cases;\n\n      for (i = j = 0, len1 = ref3.length; j < len1; i = ++j) {\n        ref4 = ref3[i], conditions = ref4[0], block = ref4[1];\n        ref5 = flatten([conditions]);\n\n        for (k = 0, len2 = ref5.length; k < len2; k++) {\n          cond = ref5[k];\n\n          if (!this.subject) {\n            cond = cond.invert();\n          }\n\n          fragments = fragments.concat(this.makeCode(idt1 + \"case \"), cond.compileToFragments(o, LEVEL_PAREN), this.makeCode(\":\\n\"));\n        }\n\n        if ((body = block.compileToFragments(o, LEVEL_TOP)).length > 0) {\n          fragments = fragments.concat(body, this.makeCode('\\n'));\n        }\n\n        if (i === this.cases.length - 1 && !this.otherwise) {\n          break;\n        }\n\n        expr = this.lastNonComment(block.expressions);\n\n        if (expr instanceof Return || expr instanceof Literal && expr.jumps() && expr.value !== 'debugger') {\n          continue;\n        }\n\n        fragments.push(cond.makeCode(idt2 + 'break;\\n'));\n      }\n\n      if (this.otherwise && this.otherwise.expressions.length) {\n        fragments.push.apply(fragments, [this.makeCode(idt1 + \"default:\\n\")].concat(slice.call(this.otherwise.compileToFragments(o, LEVEL_TOP)), [this.makeCode(\"\\n\")]));\n      }\n\n      fragments.push(this.makeCode(this.tab + '}'));\n      return fragments;\n    };\n\n    return Switch;\n  }(Base);\n\n  exports.If = If = function (superClass1) {\n    extend1(If, superClass1);\n\n    function If(condition, body1, options) {\n      this.body = body1;\n\n      if (options == null) {\n        options = {};\n      }\n\n      this.condition = options.type === 'unless' ? condition.invert() : condition;\n      this.elseBody = null;\n      this.isChain = false;\n      this.soak = options.soak;\n    }\n\n    If.prototype.children = ['condition', 'body', 'elseBody'];\n\n    If.prototype.bodyNode = function () {\n      var ref3;\n      return (ref3 = this.body) != null ? ref3.unwrap() : void 0;\n    };\n\n    If.prototype.elseBodyNode = function () {\n      var ref3;\n      return (ref3 = this.elseBody) != null ? ref3.unwrap() : void 0;\n    };\n\n    If.prototype.addElse = function (elseBody) {\n      if (this.isChain) {\n        this.elseBodyNode().addElse(elseBody);\n      } else {\n        this.isChain = elseBody instanceof If;\n        this.elseBody = this.ensureBlock(elseBody);\n        this.elseBody.updateLocationDataIfMissing(elseBody.locationData);\n      }\n\n      return this;\n    };\n\n    If.prototype.isStatement = function (o) {\n      var ref3;\n      return (o != null ? o.level : void 0) === LEVEL_TOP || this.bodyNode().isStatement(o) || ((ref3 = this.elseBodyNode()) != null ? ref3.isStatement(o) : void 0);\n    };\n\n    If.prototype.jumps = function (o) {\n      var ref3;\n      return this.body.jumps(o) || ((ref3 = this.elseBody) != null ? ref3.jumps(o) : void 0);\n    };\n\n    If.prototype.compileNode = function (o) {\n      if (this.isStatement(o)) {\n        return this.compileStatement(o);\n      } else {\n        return this.compileExpression(o);\n      }\n    };\n\n    If.prototype.makeReturn = function (res) {\n      if (res) {\n        this.elseBody || (this.elseBody = new Block([new Literal('void 0')]));\n      }\n\n      this.body && (this.body = new Block([this.body.makeReturn(res)]));\n      this.elseBody && (this.elseBody = new Block([this.elseBody.makeReturn(res)]));\n      return this;\n    };\n\n    If.prototype.ensureBlock = function (node) {\n      if (node instanceof Block) {\n        return node;\n      } else {\n        return new Block([node]);\n      }\n    };\n\n    If.prototype.compileStatement = function (o) {\n      var answer, body, child, cond, exeq, ifPart, indent;\n      child = del(o, 'chainChild');\n      exeq = del(o, 'isExistentialEquals');\n\n      if (exeq) {\n        return new If(this.condition.invert(), this.elseBodyNode(), {\n          type: 'if'\n        }).compileToFragments(o);\n      }\n\n      indent = o.indent + TAB;\n      cond = this.condition.compileToFragments(o, LEVEL_PAREN);\n      body = this.ensureBlock(this.body).compileToFragments(merge(o, {\n        indent: indent\n      }));\n      ifPart = [].concat(this.makeCode(\"if (\"), cond, this.makeCode(\") {\\n\"), body, this.makeCode(\"\\n\" + this.tab + \"}\"));\n\n      if (!child) {\n        ifPart.unshift(this.makeCode(this.tab));\n      }\n\n      if (!this.elseBody) {\n        return ifPart;\n      }\n\n      answer = ifPart.concat(this.makeCode(' else '));\n\n      if (this.isChain) {\n        o.chainChild = true;\n        answer = answer.concat(this.elseBody.unwrap().compileToFragments(o, LEVEL_TOP));\n      } else {\n        answer = answer.concat(this.makeCode(\"{\\n\"), this.elseBody.compileToFragments(merge(o, {\n          indent: indent\n        }), LEVEL_TOP), this.makeCode(\"\\n\" + this.tab + \"}\"));\n      }\n\n      return answer;\n    };\n\n    If.prototype.compileExpression = function (o) {\n      var alt, body, cond, fragments;\n      cond = this.condition.compileToFragments(o, LEVEL_COND);\n      body = this.bodyNode().compileToFragments(o, LEVEL_LIST);\n      alt = this.elseBodyNode() ? this.elseBodyNode().compileToFragments(o, LEVEL_LIST) : [this.makeCode('void 0')];\n      fragments = cond.concat(this.makeCode(\" ? \"), body, this.makeCode(\" : \"), alt);\n\n      if (o.level >= LEVEL_COND) {\n        return this.wrapInBraces(fragments);\n      } else {\n        return fragments;\n      }\n    };\n\n    If.prototype.unfoldSoak = function () {\n      return this.soak && this;\n    };\n\n    return If;\n  }(Base);\n\n  UTILITIES = {\n    extend: function (o) {\n      return \"function(child, parent) { for (var key in parent) { if (\" + utility('hasProp', o) + \".call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; }\";\n    },\n    bind: function () {\n      return 'function(fn, me){ return function(){ return fn.apply(me, arguments); }; }';\n    },\n    indexOf: function () {\n      return \"[].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; }\";\n    },\n    modulo: function () {\n      return \"function(a, b) { return (+a % (b = +b) + b) % b; }\";\n    },\n    hasProp: function () {\n      return '{}.hasOwnProperty';\n    },\n    slice: function () {\n      return '[].slice';\n    }\n  };\n  LEVEL_TOP = 1;\n  LEVEL_PAREN = 2;\n  LEVEL_LIST = 3;\n  LEVEL_COND = 4;\n  LEVEL_OP = 5;\n  LEVEL_ACCESS = 6;\n  TAB = '  ';\n  SIMPLENUM = /^[+-]?\\d+$/;\n\n  utility = function (name, o) {\n    var ref, root;\n    root = o.scope.root;\n\n    if (name in root.utilities) {\n      return root.utilities[name];\n    } else {\n      ref = root.freeVariable(name);\n      root.assign(ref, UTILITIES[name](o));\n      return root.utilities[name] = ref;\n    }\n  };\n\n  multident = function (code, tab) {\n    code = code.replace(/\\n/g, '$&' + tab);\n    return code.replace(/\\s+$/, '');\n  };\n\n  isLiteralArguments = function (node) {\n    return node instanceof IdentifierLiteral && node.value === 'arguments';\n  };\n\n  isLiteralThis = function (node) {\n    return node instanceof ThisLiteral || node instanceof Code && node.bound || node instanceof SuperCall;\n  };\n\n  isComplexOrAssignable = function (node) {\n    return node.isComplex() || (typeof node.isAssignable === \"function\" ? node.isAssignable() : void 0);\n  };\n\n  unfoldSoak = function (o, parent, name) {\n    var ifn;\n\n    if (!(ifn = parent[name].unfoldSoak(o))) {\n      return;\n    }\n\n    parent[name] = ifn.body;\n    ifn.body = new Value(parent);\n    return ifn;\n  };\n}).call(this);","map":{"version":3,"sources":["/Users/straussj/Documents/react_projects/summer-of-jake/node_modules/coffee-script/lib/coffee-script/nodes.js"],"names":["Access","Arr","Assign","Base","Block","BooleanLiteral","Call","Class","Code","CodeFragment","Comment","Existence","Expansion","ExportAllDeclaration","ExportDeclaration","ExportDefaultDeclaration","ExportNamedDeclaration","ExportSpecifier","ExportSpecifierList","Extends","For","IdentifierLiteral","If","ImportClause","ImportDeclaration","ImportDefaultSpecifier","ImportNamespaceSpecifier","ImportSpecifier","ImportSpecifierList","In","Index","InfinityLiteral","JS_FORBIDDEN","LEVEL_ACCESS","LEVEL_COND","LEVEL_LIST","LEVEL_OP","LEVEL_PAREN","LEVEL_TOP","Literal","ModuleDeclaration","ModuleSpecifier","ModuleSpecifierList","NEGATE","NO","NaNLiteral","NullLiteral","NumberLiteral","Obj","Op","Param","Parens","PassthroughLiteral","PropertyName","Range","RegexLiteral","RegexWithInterpolations","Return","SIMPLENUM","Scope","Slice","Splat","StatementLiteral","StringLiteral","StringWithInterpolations","SuperCall","Switch","TAB","THIS","TaggedTemplateCall","ThisLiteral","Throw","Try","UTILITIES","UndefinedLiteral","Value","While","YES","YieldReturn","addLocationDataFn","compact","del","ends","extend","flatten","fragmentsToText","isComplexOrAssignable","isLiteralArguments","isLiteralThis","isUnassignable","locationDataToString","merge","multident","ref1","ref2","some","starts","throwSyntaxError","unfoldSoak","utility","extend1","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","indexOf","item","i","l","length","slice","Error","stackTraceLimit","require","exports","negated","code","ref3","locationData","type","name","toString","fragments","fragment","j","len1","results","push","join","compile","o","lvl","compileToFragments","node","level","tab","indent","isStatement","compileNode","compileClosure","args","argumentsNode","func","jumpNode","meth","parts","jumps","error","sharedScope","wrap","contains","isGenerator","base","unshift","makeCode","cache","isComplex","complex","ref","sub","scope","freeVariable","value","cacheToCodeFragments","cacheValues","makeReturn","res","me","unwrapAll","pred","traverseChildren","n","lastNonComment","list","idt","tree","soak","eachChild","attr","k","len2","ref4","children","crossScope","recur","invert","unwrap","isChainable","isAssignable","isNumber","assigns","updateLocationDataIfMissing","message","wrapInBraces","concat","joinFragmentArrays","fragmentsList","joinStr","answer","superClass1","nodes","expressions","pop","isEmpty","exp","expr","len","expression","splice","compileRoot","compiledNodes","index","top","front","spaced","prelude","preludeExps","rest","bare","referencedVars","locals","parameter","ref5","compileWithDeclarations","declars","post","hasDeclarations","hasAssignments","declaredVariables","assignedVariables","value1","apply","arguments","loop","block","method","bound","context","props","tag","properties","add","hasProperties","bareLiteral","isArray","isRange","isString","isRegex","isUndefined","isNull","isBoolean","isAtomic","isNotCallable","isSplice","isObject","onlyGenerated","generated","lastProp","looksStatic","className","cacheReference","bref","nref","prop","test","unfoldedSoak","_this","fst","ifn","snd","body","comment1","comment","replace","variable1","args1","soak1","variable","isNew","needsUpdatedStartLocation","first_line","first_column","newInstance","left","rite","superReference","reverse","arg","argIndex","compiledArgs","compiledArray","preface","compileSplattedArray","compileSplat","superThis","splatArgs","fun","isBare","accesses","klass","namedMethod","inTaggedTemplateCall","child1","parent1","name1","index1","from1","to1","from","to","exclusive","equals","compileVariables","step","fromC","fromVar","toC","toVar","stepVar","fromNum","Number","toNum","stepNum","cond","condPart","gt","idx","idxName","known","lt","namedIndex","stepPart","varPart","compileArray","hasArgs","pre","range","result","vars","Math","abs","single","range1","compiled","compiledText","fromCompiled","toStr","objects","dynamicIndex","hasDynamic","lastNoncom","len3","oref","operatorToken","objs","compiledObjs","obj","body1","boundFuncs","classBody","defaultClassVariableName","determineName","tail","setContext","addBoundFunctions","bvar","lhs","addProperties","acc","assign","exprs","shift","externalCtor","classScope","walkBody","cont","exps","hoistDirectivePrologue","directives","ensureConstructor","noReturn","lname","superClass","makeScope","reserve","params","moduleDeclaration","clause","source1","source","checkSource","checkScope","moduleDeclarationType","importedSymbols","defaultBinding","namedImports","specifiers","compiledList","specifier","original","alias","moduleDeclarationType1","identifier","find","imported","local","check","exported","options","param","subpattern","checkAssignability","varBase","Object","positions","variables","compiledName","isValue","ref6","ref7","ref8","val","compilePatternMatch","compileSplice","compileConditional","compileSpecialMath","defaultValue","expandedIdx","ivar","olen","vvar","vvarText","right","isExistentialEquals","addElse","fromDecl","fromRef","valDef","valRef","isYield","parentScope","boundfunc","len4","len5","len6","lit","m","p","q","r","splats","uniqs","wasEmpty","wrapper","shared","asReference","splat","eachParamName","iterator","eachName","token","reference","atParam","compiledNode","concatPart","last","condition","guard","returns","addBody","rvar","set","CONVERSIONS","INVERSIONS","op","first","second","flip","generateDo","operator","isUnary","allInvertable","curr","passedParams","isChain","rhs","compileYield","compileUnary","compileChain","compileExistence","compilePower","compileFloorDivision","compileModulo","plusMinus","keys","pow","div","floor","mod","object","array","hasSplat","compileOrTest","compileLoopTest","cmp","cnj","tests","attempt","errorVariable","recovery","ensure","catchPart","ensurePart","generatedErrorVariableName","placeholder","tryPart","element","elements","match","backslashes","toBeEscaped","own","ownTag","pattern","bodyFragments","compare","compareDown","declare","declareDown","defPart","defPartFragments","down","forPartFragments","guardPart","idt1","increment","kvar","kvarAssign","lvar","namePart","resultPart","returnResult","svar","pluckDirectCall","defs","fn","ref9","subject","cases","otherwise","conds","pair","conditions","idt2","elseBody","bodyNode","elseBodyNode","ensureBlock","compileStatement","compileExpression","exeq","ifPart","chainChild","alt","bind","modulo","root","utilities"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var Access, Arr, Assign, Base, Block, BooleanLiteral, Call, Class, Code, CodeFragment, Comment, Existence, Expansion, ExportAllDeclaration, ExportDeclaration, ExportDefaultDeclaration, ExportNamedDeclaration, ExportSpecifier, ExportSpecifierList, Extends, For, IdentifierLiteral, If, ImportClause, ImportDeclaration, ImportDefaultSpecifier, ImportNamespaceSpecifier, ImportSpecifier, ImportSpecifierList, In, Index, InfinityLiteral, JS_FORBIDDEN, LEVEL_ACCESS, LEVEL_COND, LEVEL_LIST, LEVEL_OP, LEVEL_PAREN, LEVEL_TOP, Literal, ModuleDeclaration, ModuleSpecifier, ModuleSpecifierList, NEGATE, NO, NaNLiteral, NullLiteral, NumberLiteral, Obj, Op, Param, Parens, PassthroughLiteral, PropertyName, Range, RegexLiteral, RegexWithInterpolations, Return, SIMPLENUM, Scope, Slice, Splat, StatementLiteral, StringLiteral, StringWithInterpolations, SuperCall, Switch, TAB, THIS, TaggedTemplateCall, ThisLiteral, Throw, Try, UTILITIES, UndefinedLiteral, Value, While, YES, YieldReturn, addLocationDataFn, compact, del, ends, extend, flatten, fragmentsToText, isComplexOrAssignable, isLiteralArguments, isLiteralThis, isUnassignable, locationDataToString, merge, multident, ref1, ref2, some, starts, throwSyntaxError, unfoldSoak, utility,\n    extend1 = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty,\n    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },\n    slice = [].slice;\n\n  Error.stackTraceLimit = 2e308;\n\n  Scope = require('./scope').Scope;\n\n  ref1 = require('./lexer'), isUnassignable = ref1.isUnassignable, JS_FORBIDDEN = ref1.JS_FORBIDDEN;\n\n  ref2 = require('./helpers'), compact = ref2.compact, flatten = ref2.flatten, extend = ref2.extend, merge = ref2.merge, del = ref2.del, starts = ref2.starts, ends = ref2.ends, some = ref2.some, addLocationDataFn = ref2.addLocationDataFn, locationDataToString = ref2.locationDataToString, throwSyntaxError = ref2.throwSyntaxError;\n\n  exports.extend = extend;\n\n  exports.addLocationDataFn = addLocationDataFn;\n\n  YES = function() {\n    return true;\n  };\n\n  NO = function() {\n    return false;\n  };\n\n  THIS = function() {\n    return this;\n  };\n\n  NEGATE = function() {\n    this.negated = !this.negated;\n    return this;\n  };\n\n  exports.CodeFragment = CodeFragment = (function() {\n    function CodeFragment(parent, code) {\n      var ref3;\n      this.code = \"\" + code;\n      this.locationData = parent != null ? parent.locationData : void 0;\n      this.type = (parent != null ? (ref3 = parent.constructor) != null ? ref3.name : void 0 : void 0) || 'unknown';\n    }\n\n    CodeFragment.prototype.toString = function() {\n      return \"\" + this.code + (this.locationData ? \": \" + locationDataToString(this.locationData) : '');\n    };\n\n    return CodeFragment;\n\n  })();\n\n  fragmentsToText = function(fragments) {\n    var fragment;\n    return ((function() {\n      var j, len1, results;\n      results = [];\n      for (j = 0, len1 = fragments.length; j < len1; j++) {\n        fragment = fragments[j];\n        results.push(fragment.code);\n      }\n      return results;\n    })()).join('');\n  };\n\n  exports.Base = Base = (function() {\n    function Base() {}\n\n    Base.prototype.compile = function(o, lvl) {\n      return fragmentsToText(this.compileToFragments(o, lvl));\n    };\n\n    Base.prototype.compileToFragments = function(o, lvl) {\n      var node;\n      o = extend({}, o);\n      if (lvl) {\n        o.level = lvl;\n      }\n      node = this.unfoldSoak(o) || this;\n      node.tab = o.indent;\n      if (o.level === LEVEL_TOP || !node.isStatement(o)) {\n        return node.compileNode(o);\n      } else {\n        return node.compileClosure(o);\n      }\n    };\n\n    Base.prototype.compileClosure = function(o) {\n      var args, argumentsNode, func, jumpNode, meth, parts, ref3;\n      if (jumpNode = this.jumps()) {\n        jumpNode.error('cannot use a pure statement in an expression');\n      }\n      o.sharedScope = true;\n      func = new Code([], Block.wrap([this]));\n      args = [];\n      if ((argumentsNode = this.contains(isLiteralArguments)) || this.contains(isLiteralThis)) {\n        args = [new ThisLiteral];\n        if (argumentsNode) {\n          meth = 'apply';\n          args.push(new IdentifierLiteral('arguments'));\n        } else {\n          meth = 'call';\n        }\n        func = new Value(func, [new Access(new PropertyName(meth))]);\n      }\n      parts = (new Call(func, args)).compileNode(o);\n      if (func.isGenerator || ((ref3 = func.base) != null ? ref3.isGenerator : void 0)) {\n        parts.unshift(this.makeCode(\"(yield* \"));\n        parts.push(this.makeCode(\")\"));\n      }\n      return parts;\n    };\n\n    Base.prototype.cache = function(o, level, isComplex) {\n      var complex, ref, sub;\n      complex = isComplex != null ? isComplex(this) : this.isComplex();\n      if (complex) {\n        ref = new IdentifierLiteral(o.scope.freeVariable('ref'));\n        sub = new Assign(ref, this);\n        if (level) {\n          return [sub.compileToFragments(o, level), [this.makeCode(ref.value)]];\n        } else {\n          return [sub, ref];\n        }\n      } else {\n        ref = level ? this.compileToFragments(o, level) : this;\n        return [ref, ref];\n      }\n    };\n\n    Base.prototype.cacheToCodeFragments = function(cacheValues) {\n      return [fragmentsToText(cacheValues[0]), fragmentsToText(cacheValues[1])];\n    };\n\n    Base.prototype.makeReturn = function(res) {\n      var me;\n      me = this.unwrapAll();\n      if (res) {\n        return new Call(new Literal(res + \".push\"), [me]);\n      } else {\n        return new Return(me);\n      }\n    };\n\n    Base.prototype.contains = function(pred) {\n      var node;\n      node = void 0;\n      this.traverseChildren(false, function(n) {\n        if (pred(n)) {\n          node = n;\n          return false;\n        }\n      });\n      return node;\n    };\n\n    Base.prototype.lastNonComment = function(list) {\n      var i;\n      i = list.length;\n      while (i--) {\n        if (!(list[i] instanceof Comment)) {\n          return list[i];\n        }\n      }\n      return null;\n    };\n\n    Base.prototype.toString = function(idt, name) {\n      var tree;\n      if (idt == null) {\n        idt = '';\n      }\n      if (name == null) {\n        name = this.constructor.name;\n      }\n      tree = '\\n' + idt + name;\n      if (this.soak) {\n        tree += '?';\n      }\n      this.eachChild(function(node) {\n        return tree += node.toString(idt + TAB);\n      });\n      return tree;\n    };\n\n    Base.prototype.eachChild = function(func) {\n      var attr, child, j, k, len1, len2, ref3, ref4;\n      if (!this.children) {\n        return this;\n      }\n      ref3 = this.children;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        attr = ref3[j];\n        if (this[attr]) {\n          ref4 = flatten([this[attr]]);\n          for (k = 0, len2 = ref4.length; k < len2; k++) {\n            child = ref4[k];\n            if (func(child) === false) {\n              return this;\n            }\n          }\n        }\n      }\n      return this;\n    };\n\n    Base.prototype.traverseChildren = function(crossScope, func) {\n      return this.eachChild(function(child) {\n        var recur;\n        recur = func(child);\n        if (recur !== false) {\n          return child.traverseChildren(crossScope, func);\n        }\n      });\n    };\n\n    Base.prototype.invert = function() {\n      return new Op('!', this);\n    };\n\n    Base.prototype.unwrapAll = function() {\n      var node;\n      node = this;\n      while (node !== (node = node.unwrap())) {\n        continue;\n      }\n      return node;\n    };\n\n    Base.prototype.children = [];\n\n    Base.prototype.isStatement = NO;\n\n    Base.prototype.jumps = NO;\n\n    Base.prototype.isComplex = YES;\n\n    Base.prototype.isChainable = NO;\n\n    Base.prototype.isAssignable = NO;\n\n    Base.prototype.isNumber = NO;\n\n    Base.prototype.unwrap = THIS;\n\n    Base.prototype.unfoldSoak = NO;\n\n    Base.prototype.assigns = NO;\n\n    Base.prototype.updateLocationDataIfMissing = function(locationData) {\n      if (this.locationData) {\n        return this;\n      }\n      this.locationData = locationData;\n      return this.eachChild(function(child) {\n        return child.updateLocationDataIfMissing(locationData);\n      });\n    };\n\n    Base.prototype.error = function(message) {\n      return throwSyntaxError(message, this.locationData);\n    };\n\n    Base.prototype.makeCode = function(code) {\n      return new CodeFragment(this, code);\n    };\n\n    Base.prototype.wrapInBraces = function(fragments) {\n      return [].concat(this.makeCode('('), fragments, this.makeCode(')'));\n    };\n\n    Base.prototype.joinFragmentArrays = function(fragmentsList, joinStr) {\n      var answer, fragments, i, j, len1;\n      answer = [];\n      for (i = j = 0, len1 = fragmentsList.length; j < len1; i = ++j) {\n        fragments = fragmentsList[i];\n        if (i) {\n          answer.push(this.makeCode(joinStr));\n        }\n        answer = answer.concat(fragments);\n      }\n      return answer;\n    };\n\n    return Base;\n\n  })();\n\n  exports.Block = Block = (function(superClass1) {\n    extend1(Block, superClass1);\n\n    function Block(nodes) {\n      this.expressions = compact(flatten(nodes || []));\n    }\n\n    Block.prototype.children = ['expressions'];\n\n    Block.prototype.push = function(node) {\n      this.expressions.push(node);\n      return this;\n    };\n\n    Block.prototype.pop = function() {\n      return this.expressions.pop();\n    };\n\n    Block.prototype.unshift = function(node) {\n      this.expressions.unshift(node);\n      return this;\n    };\n\n    Block.prototype.unwrap = function() {\n      if (this.expressions.length === 1) {\n        return this.expressions[0];\n      } else {\n        return this;\n      }\n    };\n\n    Block.prototype.isEmpty = function() {\n      return !this.expressions.length;\n    };\n\n    Block.prototype.isStatement = function(o) {\n      var exp, j, len1, ref3;\n      ref3 = this.expressions;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        exp = ref3[j];\n        if (exp.isStatement(o)) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    Block.prototype.jumps = function(o) {\n      var exp, j, jumpNode, len1, ref3;\n      ref3 = this.expressions;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        exp = ref3[j];\n        if (jumpNode = exp.jumps(o)) {\n          return jumpNode;\n        }\n      }\n    };\n\n    Block.prototype.makeReturn = function(res) {\n      var expr, len;\n      len = this.expressions.length;\n      while (len--) {\n        expr = this.expressions[len];\n        if (!(expr instanceof Comment)) {\n          this.expressions[len] = expr.makeReturn(res);\n          if (expr instanceof Return && !expr.expression) {\n            this.expressions.splice(len, 1);\n          }\n          break;\n        }\n      }\n      return this;\n    };\n\n    Block.prototype.compileToFragments = function(o, level) {\n      if (o == null) {\n        o = {};\n      }\n      if (o.scope) {\n        return Block.__super__.compileToFragments.call(this, o, level);\n      } else {\n        return this.compileRoot(o);\n      }\n    };\n\n    Block.prototype.compileNode = function(o) {\n      var answer, compiledNodes, fragments, index, j, len1, node, ref3, top;\n      this.tab = o.indent;\n      top = o.level === LEVEL_TOP;\n      compiledNodes = [];\n      ref3 = this.expressions;\n      for (index = j = 0, len1 = ref3.length; j < len1; index = ++j) {\n        node = ref3[index];\n        node = node.unwrapAll();\n        node = node.unfoldSoak(o) || node;\n        if (node instanceof Block) {\n          compiledNodes.push(node.compileNode(o));\n        } else if (top) {\n          node.front = true;\n          fragments = node.compileToFragments(o);\n          if (!node.isStatement(o)) {\n            fragments.unshift(this.makeCode(\"\" + this.tab));\n            fragments.push(this.makeCode(\";\"));\n          }\n          compiledNodes.push(fragments);\n        } else {\n          compiledNodes.push(node.compileToFragments(o, LEVEL_LIST));\n        }\n      }\n      if (top) {\n        if (this.spaced) {\n          return [].concat(this.joinFragmentArrays(compiledNodes, '\\n\\n'), this.makeCode(\"\\n\"));\n        } else {\n          return this.joinFragmentArrays(compiledNodes, '\\n');\n        }\n      }\n      if (compiledNodes.length) {\n        answer = this.joinFragmentArrays(compiledNodes, ', ');\n      } else {\n        answer = [this.makeCode(\"void 0\")];\n      }\n      if (compiledNodes.length > 1 && o.level >= LEVEL_LIST) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n\n    Block.prototype.compileRoot = function(o) {\n      var exp, fragments, i, j, len1, name, prelude, preludeExps, ref3, ref4, rest;\n      o.indent = o.bare ? '' : TAB;\n      o.level = LEVEL_TOP;\n      this.spaced = true;\n      o.scope = new Scope(null, this, null, (ref3 = o.referencedVars) != null ? ref3 : []);\n      ref4 = o.locals || [];\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        name = ref4[j];\n        o.scope.parameter(name);\n      }\n      prelude = [];\n      if (!o.bare) {\n        preludeExps = (function() {\n          var k, len2, ref5, results;\n          ref5 = this.expressions;\n          results = [];\n          for (i = k = 0, len2 = ref5.length; k < len2; i = ++k) {\n            exp = ref5[i];\n            if (!(exp.unwrap() instanceof Comment)) {\n              break;\n            }\n            results.push(exp);\n          }\n          return results;\n        }).call(this);\n        rest = this.expressions.slice(preludeExps.length);\n        this.expressions = preludeExps;\n        if (preludeExps.length) {\n          prelude = this.compileNode(merge(o, {\n            indent: ''\n          }));\n          prelude.push(this.makeCode(\"\\n\"));\n        }\n        this.expressions = rest;\n      }\n      fragments = this.compileWithDeclarations(o);\n      if (o.bare) {\n        return fragments;\n      }\n      return [].concat(prelude, this.makeCode(\"(function() {\\n\"), fragments, this.makeCode(\"\\n}).call(this);\\n\"));\n    };\n\n    Block.prototype.compileWithDeclarations = function(o) {\n      var assigns, declars, exp, fragments, i, j, len1, post, ref3, ref4, ref5, rest, scope, spaced;\n      fragments = [];\n      post = [];\n      ref3 = this.expressions;\n      for (i = j = 0, len1 = ref3.length; j < len1; i = ++j) {\n        exp = ref3[i];\n        exp = exp.unwrap();\n        if (!(exp instanceof Comment || exp instanceof Literal)) {\n          break;\n        }\n      }\n      o = merge(o, {\n        level: LEVEL_TOP\n      });\n      if (i) {\n        rest = this.expressions.splice(i, 9e9);\n        ref4 = [this.spaced, false], spaced = ref4[0], this.spaced = ref4[1];\n        ref5 = [this.compileNode(o), spaced], fragments = ref5[0], this.spaced = ref5[1];\n        this.expressions = rest;\n      }\n      post = this.compileNode(o);\n      scope = o.scope;\n      if (scope.expressions === this) {\n        declars = o.scope.hasDeclarations();\n        assigns = scope.hasAssignments;\n        if (declars || assigns) {\n          if (i) {\n            fragments.push(this.makeCode('\\n'));\n          }\n          fragments.push(this.makeCode(this.tab + \"var \"));\n          if (declars) {\n            fragments.push(this.makeCode(scope.declaredVariables().join(', ')));\n          }\n          if (assigns) {\n            if (declars) {\n              fragments.push(this.makeCode(\",\\n\" + (this.tab + TAB)));\n            }\n            fragments.push(this.makeCode(scope.assignedVariables().join(\",\\n\" + (this.tab + TAB))));\n          }\n          fragments.push(this.makeCode(\";\\n\" + (this.spaced ? '\\n' : '')));\n        } else if (fragments.length && post.length) {\n          fragments.push(this.makeCode(\"\\n\"));\n        }\n      }\n      return fragments.concat(post);\n    };\n\n    Block.wrap = function(nodes) {\n      if (nodes.length === 1 && nodes[0] instanceof Block) {\n        return nodes[0];\n      }\n      return new Block(nodes);\n    };\n\n    return Block;\n\n  })(Base);\n\n  exports.Literal = Literal = (function(superClass1) {\n    extend1(Literal, superClass1);\n\n    function Literal(value1) {\n      this.value = value1;\n    }\n\n    Literal.prototype.isComplex = NO;\n\n    Literal.prototype.assigns = function(name) {\n      return name === this.value;\n    };\n\n    Literal.prototype.compileNode = function(o) {\n      return [this.makeCode(this.value)];\n    };\n\n    Literal.prototype.toString = function() {\n      return \" \" + (this.isStatement() ? Literal.__super__.toString.apply(this, arguments) : this.constructor.name) + \": \" + this.value;\n    };\n\n    return Literal;\n\n  })(Base);\n\n  exports.NumberLiteral = NumberLiteral = (function(superClass1) {\n    extend1(NumberLiteral, superClass1);\n\n    function NumberLiteral() {\n      return NumberLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return NumberLiteral;\n\n  })(Literal);\n\n  exports.InfinityLiteral = InfinityLiteral = (function(superClass1) {\n    extend1(InfinityLiteral, superClass1);\n\n    function InfinityLiteral() {\n      return InfinityLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    InfinityLiteral.prototype.compileNode = function() {\n      return [this.makeCode('2e308')];\n    };\n\n    return InfinityLiteral;\n\n  })(NumberLiteral);\n\n  exports.NaNLiteral = NaNLiteral = (function(superClass1) {\n    extend1(NaNLiteral, superClass1);\n\n    function NaNLiteral() {\n      NaNLiteral.__super__.constructor.call(this, 'NaN');\n    }\n\n    NaNLiteral.prototype.compileNode = function(o) {\n      var code;\n      code = [this.makeCode('0/0')];\n      if (o.level >= LEVEL_OP) {\n        return this.wrapInBraces(code);\n      } else {\n        return code;\n      }\n    };\n\n    return NaNLiteral;\n\n  })(NumberLiteral);\n\n  exports.StringLiteral = StringLiteral = (function(superClass1) {\n    extend1(StringLiteral, superClass1);\n\n    function StringLiteral() {\n      return StringLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return StringLiteral;\n\n  })(Literal);\n\n  exports.RegexLiteral = RegexLiteral = (function(superClass1) {\n    extend1(RegexLiteral, superClass1);\n\n    function RegexLiteral() {\n      return RegexLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return RegexLiteral;\n\n  })(Literal);\n\n  exports.PassthroughLiteral = PassthroughLiteral = (function(superClass1) {\n    extend1(PassthroughLiteral, superClass1);\n\n    function PassthroughLiteral() {\n      return PassthroughLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return PassthroughLiteral;\n\n  })(Literal);\n\n  exports.IdentifierLiteral = IdentifierLiteral = (function(superClass1) {\n    extend1(IdentifierLiteral, superClass1);\n\n    function IdentifierLiteral() {\n      return IdentifierLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    IdentifierLiteral.prototype.isAssignable = YES;\n\n    return IdentifierLiteral;\n\n  })(Literal);\n\n  exports.PropertyName = PropertyName = (function(superClass1) {\n    extend1(PropertyName, superClass1);\n\n    function PropertyName() {\n      return PropertyName.__super__.constructor.apply(this, arguments);\n    }\n\n    PropertyName.prototype.isAssignable = YES;\n\n    return PropertyName;\n\n  })(Literal);\n\n  exports.StatementLiteral = StatementLiteral = (function(superClass1) {\n    extend1(StatementLiteral, superClass1);\n\n    function StatementLiteral() {\n      return StatementLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    StatementLiteral.prototype.isStatement = YES;\n\n    StatementLiteral.prototype.makeReturn = THIS;\n\n    StatementLiteral.prototype.jumps = function(o) {\n      if (this.value === 'break' && !((o != null ? o.loop : void 0) || (o != null ? o.block : void 0))) {\n        return this;\n      }\n      if (this.value === 'continue' && !(o != null ? o.loop : void 0)) {\n        return this;\n      }\n    };\n\n    StatementLiteral.prototype.compileNode = function(o) {\n      return [this.makeCode(\"\" + this.tab + this.value + \";\")];\n    };\n\n    return StatementLiteral;\n\n  })(Literal);\n\n  exports.ThisLiteral = ThisLiteral = (function(superClass1) {\n    extend1(ThisLiteral, superClass1);\n\n    function ThisLiteral() {\n      ThisLiteral.__super__.constructor.call(this, 'this');\n    }\n\n    ThisLiteral.prototype.compileNode = function(o) {\n      var code, ref3;\n      code = ((ref3 = o.scope.method) != null ? ref3.bound : void 0) ? o.scope.method.context : this.value;\n      return [this.makeCode(code)];\n    };\n\n    return ThisLiteral;\n\n  })(Literal);\n\n  exports.UndefinedLiteral = UndefinedLiteral = (function(superClass1) {\n    extend1(UndefinedLiteral, superClass1);\n\n    function UndefinedLiteral() {\n      UndefinedLiteral.__super__.constructor.call(this, 'undefined');\n    }\n\n    UndefinedLiteral.prototype.compileNode = function(o) {\n      return [this.makeCode(o.level >= LEVEL_ACCESS ? '(void 0)' : 'void 0')];\n    };\n\n    return UndefinedLiteral;\n\n  })(Literal);\n\n  exports.NullLiteral = NullLiteral = (function(superClass1) {\n    extend1(NullLiteral, superClass1);\n\n    function NullLiteral() {\n      NullLiteral.__super__.constructor.call(this, 'null');\n    }\n\n    return NullLiteral;\n\n  })(Literal);\n\n  exports.BooleanLiteral = BooleanLiteral = (function(superClass1) {\n    extend1(BooleanLiteral, superClass1);\n\n    function BooleanLiteral() {\n      return BooleanLiteral.__super__.constructor.apply(this, arguments);\n    }\n\n    return BooleanLiteral;\n\n  })(Literal);\n\n  exports.Return = Return = (function(superClass1) {\n    extend1(Return, superClass1);\n\n    function Return(expression) {\n      this.expression = expression;\n    }\n\n    Return.prototype.children = ['expression'];\n\n    Return.prototype.isStatement = YES;\n\n    Return.prototype.makeReturn = THIS;\n\n    Return.prototype.jumps = THIS;\n\n    Return.prototype.compileToFragments = function(o, level) {\n      var expr, ref3;\n      expr = (ref3 = this.expression) != null ? ref3.makeReturn() : void 0;\n      if (expr && !(expr instanceof Return)) {\n        return expr.compileToFragments(o, level);\n      } else {\n        return Return.__super__.compileToFragments.call(this, o, level);\n      }\n    };\n\n    Return.prototype.compileNode = function(o) {\n      var answer;\n      answer = [];\n      answer.push(this.makeCode(this.tab + (\"return\" + (this.expression ? \" \" : \"\"))));\n      if (this.expression) {\n        answer = answer.concat(this.expression.compileToFragments(o, LEVEL_PAREN));\n      }\n      answer.push(this.makeCode(\";\"));\n      return answer;\n    };\n\n    return Return;\n\n  })(Base);\n\n  exports.YieldReturn = YieldReturn = (function(superClass1) {\n    extend1(YieldReturn, superClass1);\n\n    function YieldReturn() {\n      return YieldReturn.__super__.constructor.apply(this, arguments);\n    }\n\n    YieldReturn.prototype.compileNode = function(o) {\n      if (o.scope.parent == null) {\n        this.error('yield can only occur inside functions');\n      }\n      return YieldReturn.__super__.compileNode.apply(this, arguments);\n    };\n\n    return YieldReturn;\n\n  })(Return);\n\n  exports.Value = Value = (function(superClass1) {\n    extend1(Value, superClass1);\n\n    function Value(base, props, tag) {\n      if (!props && base instanceof Value) {\n        return base;\n      }\n      this.base = base;\n      this.properties = props || [];\n      if (tag) {\n        this[tag] = true;\n      }\n      return this;\n    }\n\n    Value.prototype.children = ['base', 'properties'];\n\n    Value.prototype.add = function(props) {\n      this.properties = this.properties.concat(props);\n      return this;\n    };\n\n    Value.prototype.hasProperties = function() {\n      return !!this.properties.length;\n    };\n\n    Value.prototype.bareLiteral = function(type) {\n      return !this.properties.length && this.base instanceof type;\n    };\n\n    Value.prototype.isArray = function() {\n      return this.bareLiteral(Arr);\n    };\n\n    Value.prototype.isRange = function() {\n      return this.bareLiteral(Range);\n    };\n\n    Value.prototype.isComplex = function() {\n      return this.hasProperties() || this.base.isComplex();\n    };\n\n    Value.prototype.isAssignable = function() {\n      return this.hasProperties() || this.base.isAssignable();\n    };\n\n    Value.prototype.isNumber = function() {\n      return this.bareLiteral(NumberLiteral);\n    };\n\n    Value.prototype.isString = function() {\n      return this.bareLiteral(StringLiteral);\n    };\n\n    Value.prototype.isRegex = function() {\n      return this.bareLiteral(RegexLiteral);\n    };\n\n    Value.prototype.isUndefined = function() {\n      return this.bareLiteral(UndefinedLiteral);\n    };\n\n    Value.prototype.isNull = function() {\n      return this.bareLiteral(NullLiteral);\n    };\n\n    Value.prototype.isBoolean = function() {\n      return this.bareLiteral(BooleanLiteral);\n    };\n\n    Value.prototype.isAtomic = function() {\n      var j, len1, node, ref3;\n      ref3 = this.properties.concat(this.base);\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        node = ref3[j];\n        if (node.soak || node instanceof Call) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    Value.prototype.isNotCallable = function() {\n      return this.isNumber() || this.isString() || this.isRegex() || this.isArray() || this.isRange() || this.isSplice() || this.isObject() || this.isUndefined() || this.isNull() || this.isBoolean();\n    };\n\n    Value.prototype.isStatement = function(o) {\n      return !this.properties.length && this.base.isStatement(o);\n    };\n\n    Value.prototype.assigns = function(name) {\n      return !this.properties.length && this.base.assigns(name);\n    };\n\n    Value.prototype.jumps = function(o) {\n      return !this.properties.length && this.base.jumps(o);\n    };\n\n    Value.prototype.isObject = function(onlyGenerated) {\n      if (this.properties.length) {\n        return false;\n      }\n      return (this.base instanceof Obj) && (!onlyGenerated || this.base.generated);\n    };\n\n    Value.prototype.isSplice = function() {\n      var lastProp, ref3;\n      ref3 = this.properties, lastProp = ref3[ref3.length - 1];\n      return lastProp instanceof Slice;\n    };\n\n    Value.prototype.looksStatic = function(className) {\n      var ref3;\n      return this.base.value === className && this.properties.length === 1 && ((ref3 = this.properties[0].name) != null ? ref3.value : void 0) !== 'prototype';\n    };\n\n    Value.prototype.unwrap = function() {\n      if (this.properties.length) {\n        return this;\n      } else {\n        return this.base;\n      }\n    };\n\n    Value.prototype.cacheReference = function(o) {\n      var base, bref, name, nref, ref3;\n      ref3 = this.properties, name = ref3[ref3.length - 1];\n      if (this.properties.length < 2 && !this.base.isComplex() && !(name != null ? name.isComplex() : void 0)) {\n        return [this, this];\n      }\n      base = new Value(this.base, this.properties.slice(0, -1));\n      if (base.isComplex()) {\n        bref = new IdentifierLiteral(o.scope.freeVariable('base'));\n        base = new Value(new Parens(new Assign(bref, base)));\n      }\n      if (!name) {\n        return [base, bref];\n      }\n      if (name.isComplex()) {\n        nref = new IdentifierLiteral(o.scope.freeVariable('name'));\n        name = new Index(new Assign(nref, name.index));\n        nref = new Index(nref);\n      }\n      return [base.add(name), new Value(bref || base.base, [nref || name])];\n    };\n\n    Value.prototype.compileNode = function(o) {\n      var fragments, j, len1, prop, props;\n      this.base.front = this.front;\n      props = this.properties;\n      fragments = this.base.compileToFragments(o, (props.length ? LEVEL_ACCESS : null));\n      if (props.length && SIMPLENUM.test(fragmentsToText(fragments))) {\n        fragments.push(this.makeCode('.'));\n      }\n      for (j = 0, len1 = props.length; j < len1; j++) {\n        prop = props[j];\n        fragments.push.apply(fragments, prop.compileToFragments(o));\n      }\n      return fragments;\n    };\n\n    Value.prototype.unfoldSoak = function(o) {\n      return this.unfoldedSoak != null ? this.unfoldedSoak : this.unfoldedSoak = (function(_this) {\n        return function() {\n          var fst, i, ifn, j, len1, prop, ref, ref3, ref4, snd;\n          if (ifn = _this.base.unfoldSoak(o)) {\n            (ref3 = ifn.body.properties).push.apply(ref3, _this.properties);\n            return ifn;\n          }\n          ref4 = _this.properties;\n          for (i = j = 0, len1 = ref4.length; j < len1; i = ++j) {\n            prop = ref4[i];\n            if (!prop.soak) {\n              continue;\n            }\n            prop.soak = false;\n            fst = new Value(_this.base, _this.properties.slice(0, i));\n            snd = new Value(_this.base, _this.properties.slice(i));\n            if (fst.isComplex()) {\n              ref = new IdentifierLiteral(o.scope.freeVariable('ref'));\n              fst = new Parens(new Assign(ref, fst));\n              snd.base = ref;\n            }\n            return new If(new Existence(fst), snd, {\n              soak: true\n            });\n          }\n          return false;\n        };\n      })(this)();\n    };\n\n    return Value;\n\n  })(Base);\n\n  exports.Comment = Comment = (function(superClass1) {\n    extend1(Comment, superClass1);\n\n    function Comment(comment1) {\n      this.comment = comment1;\n    }\n\n    Comment.prototype.isStatement = YES;\n\n    Comment.prototype.makeReturn = THIS;\n\n    Comment.prototype.compileNode = function(o, level) {\n      var code, comment;\n      comment = this.comment.replace(/^(\\s*)#(?=\\s)/gm, \"$1 *\");\n      code = \"/*\" + (multident(comment, this.tab)) + (indexOf.call(comment, '\\n') >= 0 ? \"\\n\" + this.tab : '') + \" */\";\n      if ((level || o.level) === LEVEL_TOP) {\n        code = o.indent + code;\n      }\n      return [this.makeCode(\"\\n\"), this.makeCode(code)];\n    };\n\n    return Comment;\n\n  })(Base);\n\n  exports.Call = Call = (function(superClass1) {\n    extend1(Call, superClass1);\n\n    function Call(variable1, args1, soak1) {\n      this.variable = variable1;\n      this.args = args1 != null ? args1 : [];\n      this.soak = soak1;\n      this.isNew = false;\n      if (this.variable instanceof Value && this.variable.isNotCallable()) {\n        this.variable.error(\"literal is not a function\");\n      }\n    }\n\n    Call.prototype.children = ['variable', 'args'];\n\n    Call.prototype.updateLocationDataIfMissing = function(locationData) {\n      var base, ref3;\n      if (this.locationData && this.needsUpdatedStartLocation) {\n        this.locationData.first_line = locationData.first_line;\n        this.locationData.first_column = locationData.first_column;\n        base = ((ref3 = this.variable) != null ? ref3.base : void 0) || this.variable;\n        if (base.needsUpdatedStartLocation) {\n          this.variable.locationData.first_line = locationData.first_line;\n          this.variable.locationData.first_column = locationData.first_column;\n          base.updateLocationDataIfMissing(locationData);\n        }\n        delete this.needsUpdatedStartLocation;\n      }\n      return Call.__super__.updateLocationDataIfMissing.apply(this, arguments);\n    };\n\n    Call.prototype.newInstance = function() {\n      var base, ref3;\n      base = ((ref3 = this.variable) != null ? ref3.base : void 0) || this.variable;\n      if (base instanceof Call && !base.isNew) {\n        base.newInstance();\n      } else {\n        this.isNew = true;\n      }\n      this.needsUpdatedStartLocation = true;\n      return this;\n    };\n\n    Call.prototype.unfoldSoak = function(o) {\n      var call, ifn, j, left, len1, list, ref3, ref4, rite;\n      if (this.soak) {\n        if (this instanceof SuperCall) {\n          left = new Literal(this.superReference(o));\n          rite = new Value(left);\n        } else {\n          if (ifn = unfoldSoak(o, this, 'variable')) {\n            return ifn;\n          }\n          ref3 = new Value(this.variable).cacheReference(o), left = ref3[0], rite = ref3[1];\n        }\n        rite = new Call(rite, this.args);\n        rite.isNew = this.isNew;\n        left = new Literal(\"typeof \" + (left.compile(o)) + \" === \\\"function\\\"\");\n        return new If(left, new Value(rite), {\n          soak: true\n        });\n      }\n      call = this;\n      list = [];\n      while (true) {\n        if (call.variable instanceof Call) {\n          list.push(call);\n          call = call.variable;\n          continue;\n        }\n        if (!(call.variable instanceof Value)) {\n          break;\n        }\n        list.push(call);\n        if (!((call = call.variable.base) instanceof Call)) {\n          break;\n        }\n      }\n      ref4 = list.reverse();\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        call = ref4[j];\n        if (ifn) {\n          if (call.variable instanceof Call) {\n            call.variable = ifn;\n          } else {\n            call.variable.base = ifn;\n          }\n        }\n        ifn = unfoldSoak(o, call, 'variable');\n      }\n      return ifn;\n    };\n\n    Call.prototype.compileNode = function(o) {\n      var arg, argIndex, compiledArgs, compiledArray, fragments, j, len1, preface, ref3, ref4;\n      if ((ref3 = this.variable) != null) {\n        ref3.front = this.front;\n      }\n      compiledArray = Splat.compileSplattedArray(o, this.args, true);\n      if (compiledArray.length) {\n        return this.compileSplat(o, compiledArray);\n      }\n      compiledArgs = [];\n      ref4 = this.args;\n      for (argIndex = j = 0, len1 = ref4.length; j < len1; argIndex = ++j) {\n        arg = ref4[argIndex];\n        if (argIndex) {\n          compiledArgs.push(this.makeCode(\", \"));\n        }\n        compiledArgs.push.apply(compiledArgs, arg.compileToFragments(o, LEVEL_LIST));\n      }\n      fragments = [];\n      if (this instanceof SuperCall) {\n        preface = this.superReference(o) + (\".call(\" + (this.superThis(o)));\n        if (compiledArgs.length) {\n          preface += \", \";\n        }\n        fragments.push(this.makeCode(preface));\n      } else {\n        if (this.isNew) {\n          fragments.push(this.makeCode('new '));\n        }\n        fragments.push.apply(fragments, this.variable.compileToFragments(o, LEVEL_ACCESS));\n        fragments.push(this.makeCode(\"(\"));\n      }\n      fragments.push.apply(fragments, compiledArgs);\n      fragments.push(this.makeCode(\")\"));\n      return fragments;\n    };\n\n    Call.prototype.compileSplat = function(o, splatArgs) {\n      var answer, base, fun, idt, name, ref;\n      if (this instanceof SuperCall) {\n        return [].concat(this.makeCode((this.superReference(o)) + \".apply(\" + (this.superThis(o)) + \", \"), splatArgs, this.makeCode(\")\"));\n      }\n      if (this.isNew) {\n        idt = this.tab + TAB;\n        return [].concat(this.makeCode(\"(function(func, args, ctor) {\\n\" + idt + \"ctor.prototype = func.prototype;\\n\" + idt + \"var child = new ctor, result = func.apply(child, args);\\n\" + idt + \"return Object(result) === result ? result : child;\\n\" + this.tab + \"})(\"), this.variable.compileToFragments(o, LEVEL_LIST), this.makeCode(\", \"), splatArgs, this.makeCode(\", function(){})\"));\n      }\n      answer = [];\n      base = new Value(this.variable);\n      if ((name = base.properties.pop()) && base.isComplex()) {\n        ref = o.scope.freeVariable('ref');\n        answer = answer.concat(this.makeCode(\"(\" + ref + \" = \"), base.compileToFragments(o, LEVEL_LIST), this.makeCode(\")\"), name.compileToFragments(o));\n      } else {\n        fun = base.compileToFragments(o, LEVEL_ACCESS);\n        if (SIMPLENUM.test(fragmentsToText(fun))) {\n          fun = this.wrapInBraces(fun);\n        }\n        if (name) {\n          ref = fragmentsToText(fun);\n          fun.push.apply(fun, name.compileToFragments(o));\n        } else {\n          ref = 'null';\n        }\n        answer = answer.concat(fun);\n      }\n      return answer = answer.concat(this.makeCode(\".apply(\" + ref + \", \"), splatArgs, this.makeCode(\")\"));\n    };\n\n    return Call;\n\n  })(Base);\n\n  exports.SuperCall = SuperCall = (function(superClass1) {\n    extend1(SuperCall, superClass1);\n\n    function SuperCall(args) {\n      SuperCall.__super__.constructor.call(this, null, args != null ? args : [new Splat(new IdentifierLiteral('arguments'))]);\n      this.isBare = args != null;\n    }\n\n    SuperCall.prototype.superReference = function(o) {\n      var accesses, base, bref, klass, method, name, nref, variable;\n      method = o.scope.namedMethod();\n      if (method != null ? method.klass : void 0) {\n        klass = method.klass, name = method.name, variable = method.variable;\n        if (klass.isComplex()) {\n          bref = new IdentifierLiteral(o.scope.parent.freeVariable('base'));\n          base = new Value(new Parens(new Assign(bref, klass)));\n          variable.base = base;\n          variable.properties.splice(0, klass.properties.length);\n        }\n        if (name.isComplex() || (name instanceof Index && name.index.isAssignable())) {\n          nref = new IdentifierLiteral(o.scope.parent.freeVariable('name'));\n          name = new Index(new Assign(nref, name.index));\n          variable.properties.pop();\n          variable.properties.push(name);\n        }\n        accesses = [new Access(new PropertyName('__super__'))];\n        if (method[\"static\"]) {\n          accesses.push(new Access(new PropertyName('constructor')));\n        }\n        accesses.push(nref != null ? new Index(nref) : name);\n        return (new Value(bref != null ? bref : klass, accesses)).compile(o);\n      } else if (method != null ? method.ctor : void 0) {\n        return method.name + \".__super__.constructor\";\n      } else {\n        return this.error('cannot call super outside of an instance method.');\n      }\n    };\n\n    SuperCall.prototype.superThis = function(o) {\n      var method;\n      method = o.scope.method;\n      return (method && !method.klass && method.context) || \"this\";\n    };\n\n    return SuperCall;\n\n  })(Call);\n\n  exports.RegexWithInterpolations = RegexWithInterpolations = (function(superClass1) {\n    extend1(RegexWithInterpolations, superClass1);\n\n    function RegexWithInterpolations(args) {\n      if (args == null) {\n        args = [];\n      }\n      RegexWithInterpolations.__super__.constructor.call(this, new Value(new IdentifierLiteral('RegExp')), args, false);\n    }\n\n    return RegexWithInterpolations;\n\n  })(Call);\n\n  exports.TaggedTemplateCall = TaggedTemplateCall = (function(superClass1) {\n    extend1(TaggedTemplateCall, superClass1);\n\n    function TaggedTemplateCall(variable, arg, soak) {\n      if (arg instanceof StringLiteral) {\n        arg = new StringWithInterpolations(Block.wrap([new Value(arg)]));\n      }\n      TaggedTemplateCall.__super__.constructor.call(this, variable, [arg], soak);\n    }\n\n    TaggedTemplateCall.prototype.compileNode = function(o) {\n      o.inTaggedTemplateCall = true;\n      return this.variable.compileToFragments(o, LEVEL_ACCESS).concat(this.args[0].compileToFragments(o, LEVEL_LIST));\n    };\n\n    return TaggedTemplateCall;\n\n  })(Call);\n\n  exports.Extends = Extends = (function(superClass1) {\n    extend1(Extends, superClass1);\n\n    function Extends(child1, parent1) {\n      this.child = child1;\n      this.parent = parent1;\n    }\n\n    Extends.prototype.children = ['child', 'parent'];\n\n    Extends.prototype.compileToFragments = function(o) {\n      return new Call(new Value(new Literal(utility('extend', o))), [this.child, this.parent]).compileToFragments(o);\n    };\n\n    return Extends;\n\n  })(Base);\n\n  exports.Access = Access = (function(superClass1) {\n    extend1(Access, superClass1);\n\n    function Access(name1, tag) {\n      this.name = name1;\n      this.soak = tag === 'soak';\n    }\n\n    Access.prototype.children = ['name'];\n\n    Access.prototype.compileToFragments = function(o) {\n      var name, node, ref3;\n      name = this.name.compileToFragments(o);\n      node = this.name.unwrap();\n      if (node instanceof PropertyName) {\n        if (ref3 = node.value, indexOf.call(JS_FORBIDDEN, ref3) >= 0) {\n          return [this.makeCode('[\"')].concat(slice.call(name), [this.makeCode('\"]')]);\n        } else {\n          return [this.makeCode('.')].concat(slice.call(name));\n        }\n      } else {\n        return [this.makeCode('[')].concat(slice.call(name), [this.makeCode(']')]);\n      }\n    };\n\n    Access.prototype.isComplex = NO;\n\n    return Access;\n\n  })(Base);\n\n  exports.Index = Index = (function(superClass1) {\n    extend1(Index, superClass1);\n\n    function Index(index1) {\n      this.index = index1;\n    }\n\n    Index.prototype.children = ['index'];\n\n    Index.prototype.compileToFragments = function(o) {\n      return [].concat(this.makeCode(\"[\"), this.index.compileToFragments(o, LEVEL_PAREN), this.makeCode(\"]\"));\n    };\n\n    Index.prototype.isComplex = function() {\n      return this.index.isComplex();\n    };\n\n    return Index;\n\n  })(Base);\n\n  exports.Range = Range = (function(superClass1) {\n    extend1(Range, superClass1);\n\n    Range.prototype.children = ['from', 'to'];\n\n    function Range(from1, to1, tag) {\n      this.from = from1;\n      this.to = to1;\n      this.exclusive = tag === 'exclusive';\n      this.equals = this.exclusive ? '' : '=';\n    }\n\n    Range.prototype.compileVariables = function(o) {\n      var isComplex, ref3, ref4, ref5, step;\n      o = merge(o, {\n        top: true\n      });\n      isComplex = del(o, 'isComplex');\n      ref3 = this.cacheToCodeFragments(this.from.cache(o, LEVEL_LIST, isComplex)), this.fromC = ref3[0], this.fromVar = ref3[1];\n      ref4 = this.cacheToCodeFragments(this.to.cache(o, LEVEL_LIST, isComplex)), this.toC = ref4[0], this.toVar = ref4[1];\n      if (step = del(o, 'step')) {\n        ref5 = this.cacheToCodeFragments(step.cache(o, LEVEL_LIST, isComplex)), this.step = ref5[0], this.stepVar = ref5[1];\n      }\n      this.fromNum = this.from.isNumber() ? Number(this.fromVar) : null;\n      this.toNum = this.to.isNumber() ? Number(this.toVar) : null;\n      return this.stepNum = (step != null ? step.isNumber() : void 0) ? Number(this.stepVar) : null;\n    };\n\n    Range.prototype.compileNode = function(o) {\n      var cond, condPart, from, gt, idx, idxName, known, lt, namedIndex, ref3, ref4, stepPart, to, varPart;\n      if (!this.fromVar) {\n        this.compileVariables(o);\n      }\n      if (!o.index) {\n        return this.compileArray(o);\n      }\n      known = (this.fromNum != null) && (this.toNum != null);\n      idx = del(o, 'index');\n      idxName = del(o, 'name');\n      namedIndex = idxName && idxName !== idx;\n      varPart = idx + \" = \" + this.fromC;\n      if (this.toC !== this.toVar) {\n        varPart += \", \" + this.toC;\n      }\n      if (this.step !== this.stepVar) {\n        varPart += \", \" + this.step;\n      }\n      ref3 = [idx + \" <\" + this.equals, idx + \" >\" + this.equals], lt = ref3[0], gt = ref3[1];\n      condPart = this.stepNum != null ? this.stepNum > 0 ? lt + \" \" + this.toVar : gt + \" \" + this.toVar : known ? ((ref4 = [this.fromNum, this.toNum], from = ref4[0], to = ref4[1], ref4), from <= to ? lt + \" \" + to : gt + \" \" + to) : (cond = this.stepVar ? this.stepVar + \" > 0\" : this.fromVar + \" <= \" + this.toVar, cond + \" ? \" + lt + \" \" + this.toVar + \" : \" + gt + \" \" + this.toVar);\n      stepPart = this.stepVar ? idx + \" += \" + this.stepVar : known ? namedIndex ? from <= to ? \"++\" + idx : \"--\" + idx : from <= to ? idx + \"++\" : idx + \"--\" : namedIndex ? cond + \" ? ++\" + idx + \" : --\" + idx : cond + \" ? \" + idx + \"++ : \" + idx + \"--\";\n      if (namedIndex) {\n        varPart = idxName + \" = \" + varPart;\n      }\n      if (namedIndex) {\n        stepPart = idxName + \" = \" + stepPart;\n      }\n      return [this.makeCode(varPart + \"; \" + condPart + \"; \" + stepPart)];\n    };\n\n    Range.prototype.compileArray = function(o) {\n      var args, body, cond, hasArgs, i, idt, j, known, post, pre, range, ref3, ref4, result, results, vars;\n      known = (this.fromNum != null) && (this.toNum != null);\n      if (known && Math.abs(this.fromNum - this.toNum) <= 20) {\n        range = (function() {\n          results = [];\n          for (var j = ref3 = this.fromNum, ref4 = this.toNum; ref3 <= ref4 ? j <= ref4 : j >= ref4; ref3 <= ref4 ? j++ : j--){ results.push(j); }\n          return results;\n        }).apply(this);\n        if (this.exclusive) {\n          range.pop();\n        }\n        return [this.makeCode(\"[\" + (range.join(', ')) + \"]\")];\n      }\n      idt = this.tab + TAB;\n      i = o.scope.freeVariable('i', {\n        single: true\n      });\n      result = o.scope.freeVariable('results');\n      pre = \"\\n\" + idt + result + \" = [];\";\n      if (known) {\n        o.index = i;\n        body = fragmentsToText(this.compileNode(o));\n      } else {\n        vars = (i + \" = \" + this.fromC) + (this.toC !== this.toVar ? \", \" + this.toC : '');\n        cond = this.fromVar + \" <= \" + this.toVar;\n        body = \"var \" + vars + \"; \" + cond + \" ? \" + i + \" <\" + this.equals + \" \" + this.toVar + \" : \" + i + \" >\" + this.equals + \" \" + this.toVar + \"; \" + cond + \" ? \" + i + \"++ : \" + i + \"--\";\n      }\n      post = \"{ \" + result + \".push(\" + i + \"); }\\n\" + idt + \"return \" + result + \";\\n\" + o.indent;\n      hasArgs = function(node) {\n        return node != null ? node.contains(isLiteralArguments) : void 0;\n      };\n      if (hasArgs(this.from) || hasArgs(this.to)) {\n        args = ', arguments';\n      }\n      return [this.makeCode(\"(function() {\" + pre + \"\\n\" + idt + \"for (\" + body + \")\" + post + \"}).apply(this\" + (args != null ? args : '') + \")\")];\n    };\n\n    return Range;\n\n  })(Base);\n\n  exports.Slice = Slice = (function(superClass1) {\n    extend1(Slice, superClass1);\n\n    Slice.prototype.children = ['range'];\n\n    function Slice(range1) {\n      this.range = range1;\n      Slice.__super__.constructor.call(this);\n    }\n\n    Slice.prototype.compileNode = function(o) {\n      var compiled, compiledText, from, fromCompiled, ref3, to, toStr;\n      ref3 = this.range, to = ref3.to, from = ref3.from;\n      fromCompiled = from && from.compileToFragments(o, LEVEL_PAREN) || [this.makeCode('0')];\n      if (to) {\n        compiled = to.compileToFragments(o, LEVEL_PAREN);\n        compiledText = fragmentsToText(compiled);\n        if (!(!this.range.exclusive && +compiledText === -1)) {\n          toStr = ', ' + (this.range.exclusive ? compiledText : to.isNumber() ? \"\" + (+compiledText + 1) : (compiled = to.compileToFragments(o, LEVEL_ACCESS), \"+\" + (fragmentsToText(compiled)) + \" + 1 || 9e9\"));\n        }\n      }\n      return [this.makeCode(\".slice(\" + (fragmentsToText(fromCompiled)) + (toStr || '') + \")\")];\n    };\n\n    return Slice;\n\n  })(Base);\n\n  exports.Obj = Obj = (function(superClass1) {\n    extend1(Obj, superClass1);\n\n    function Obj(props, generated) {\n      this.generated = generated != null ? generated : false;\n      this.objects = this.properties = props || [];\n    }\n\n    Obj.prototype.children = ['properties'];\n\n    Obj.prototype.compileNode = function(o) {\n      var answer, dynamicIndex, hasDynamic, i, idt, indent, j, join, k, key, l, lastNoncom, len1, len2, len3, node, oref, prop, props, ref3, value;\n      props = this.properties;\n      if (this.generated) {\n        for (j = 0, len1 = props.length; j < len1; j++) {\n          node = props[j];\n          if (node instanceof Value) {\n            node.error('cannot have an implicit value in an implicit object');\n          }\n        }\n      }\n      for (dynamicIndex = k = 0, len2 = props.length; k < len2; dynamicIndex = ++k) {\n        prop = props[dynamicIndex];\n        if ((prop.variable || prop).base instanceof Parens) {\n          break;\n        }\n      }\n      hasDynamic = dynamicIndex < props.length;\n      idt = o.indent += TAB;\n      lastNoncom = this.lastNonComment(this.properties);\n      answer = [];\n      if (hasDynamic) {\n        oref = o.scope.freeVariable('obj');\n        answer.push(this.makeCode(\"(\\n\" + idt + oref + \" = \"));\n      }\n      answer.push(this.makeCode(\"{\" + (props.length === 0 || dynamicIndex === 0 ? '}' : '\\n')));\n      for (i = l = 0, len3 = props.length; l < len3; i = ++l) {\n        prop = props[i];\n        if (i === dynamicIndex) {\n          if (i !== 0) {\n            answer.push(this.makeCode(\"\\n\" + idt + \"}\"));\n          }\n          answer.push(this.makeCode(',\\n'));\n        }\n        join = i === props.length - 1 || i === dynamicIndex - 1 ? '' : prop === lastNoncom || prop instanceof Comment ? '\\n' : ',\\n';\n        indent = prop instanceof Comment ? '' : idt;\n        if (hasDynamic && i < dynamicIndex) {\n          indent += TAB;\n        }\n        if (prop instanceof Assign) {\n          if (prop.context !== 'object') {\n            prop.operatorToken.error(\"unexpected \" + prop.operatorToken.value);\n          }\n          if (prop.variable instanceof Value && prop.variable.hasProperties()) {\n            prop.variable.error('invalid object key');\n          }\n        }\n        if (prop instanceof Value && prop[\"this\"]) {\n          prop = new Assign(prop.properties[0].name, prop, 'object');\n        }\n        if (!(prop instanceof Comment)) {\n          if (i < dynamicIndex) {\n            if (!(prop instanceof Assign)) {\n              prop = new Assign(prop, prop, 'object');\n            }\n          } else {\n            if (prop instanceof Assign) {\n              key = prop.variable;\n              value = prop.value;\n            } else {\n              ref3 = prop.base.cache(o), key = ref3[0], value = ref3[1];\n              if (key instanceof IdentifierLiteral) {\n                key = new PropertyName(key.value);\n              }\n            }\n            prop = new Assign(new Value(new IdentifierLiteral(oref), [new Access(key)]), value);\n          }\n        }\n        if (indent) {\n          answer.push(this.makeCode(indent));\n        }\n        answer.push.apply(answer, prop.compileToFragments(o, LEVEL_TOP));\n        if (join) {\n          answer.push(this.makeCode(join));\n        }\n      }\n      if (hasDynamic) {\n        answer.push(this.makeCode(\",\\n\" + idt + oref + \"\\n\" + this.tab + \")\"));\n      } else {\n        if (props.length !== 0) {\n          answer.push(this.makeCode(\"\\n\" + this.tab + \"}\"));\n        }\n      }\n      if (this.front && !hasDynamic) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n\n    Obj.prototype.assigns = function(name) {\n      var j, len1, prop, ref3;\n      ref3 = this.properties;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        prop = ref3[j];\n        if (prop.assigns(name)) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    return Obj;\n\n  })(Base);\n\n  exports.Arr = Arr = (function(superClass1) {\n    extend1(Arr, superClass1);\n\n    function Arr(objs) {\n      this.objects = objs || [];\n    }\n\n    Arr.prototype.children = ['objects'];\n\n    Arr.prototype.compileNode = function(o) {\n      var answer, compiledObjs, fragments, index, j, len1, obj;\n      if (!this.objects.length) {\n        return [this.makeCode('[]')];\n      }\n      o.indent += TAB;\n      answer = Splat.compileSplattedArray(o, this.objects);\n      if (answer.length) {\n        return answer;\n      }\n      answer = [];\n      compiledObjs = (function() {\n        var j, len1, ref3, results;\n        ref3 = this.objects;\n        results = [];\n        for (j = 0, len1 = ref3.length; j < len1; j++) {\n          obj = ref3[j];\n          results.push(obj.compileToFragments(o, LEVEL_LIST));\n        }\n        return results;\n      }).call(this);\n      for (index = j = 0, len1 = compiledObjs.length; j < len1; index = ++j) {\n        fragments = compiledObjs[index];\n        if (index) {\n          answer.push(this.makeCode(\", \"));\n        }\n        answer.push.apply(answer, fragments);\n      }\n      if (fragmentsToText(answer).indexOf('\\n') >= 0) {\n        answer.unshift(this.makeCode(\"[\\n\" + o.indent));\n        answer.push(this.makeCode(\"\\n\" + this.tab + \"]\"));\n      } else {\n        answer.unshift(this.makeCode(\"[\"));\n        answer.push(this.makeCode(\"]\"));\n      }\n      return answer;\n    };\n\n    Arr.prototype.assigns = function(name) {\n      var j, len1, obj, ref3;\n      ref3 = this.objects;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        obj = ref3[j];\n        if (obj.assigns(name)) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    return Arr;\n\n  })(Base);\n\n  exports.Class = Class = (function(superClass1) {\n    extend1(Class, superClass1);\n\n    function Class(variable1, parent1, body1) {\n      this.variable = variable1;\n      this.parent = parent1;\n      this.body = body1 != null ? body1 : new Block;\n      this.boundFuncs = [];\n      this.body.classBody = true;\n    }\n\n    Class.prototype.children = ['variable', 'parent', 'body'];\n\n    Class.prototype.defaultClassVariableName = '_Class';\n\n    Class.prototype.determineName = function() {\n      var message, name, node, ref3, tail;\n      if (!this.variable) {\n        return this.defaultClassVariableName;\n      }\n      ref3 = this.variable.properties, tail = ref3[ref3.length - 1];\n      node = tail ? tail instanceof Access && tail.name : this.variable.base;\n      if (!(node instanceof IdentifierLiteral || node instanceof PropertyName)) {\n        return this.defaultClassVariableName;\n      }\n      name = node.value;\n      if (!tail) {\n        message = isUnassignable(name);\n        if (message) {\n          this.variable.error(message);\n        }\n      }\n      if (indexOf.call(JS_FORBIDDEN, name) >= 0) {\n        return \"_\" + name;\n      } else {\n        return name;\n      }\n    };\n\n    Class.prototype.setContext = function(name) {\n      return this.body.traverseChildren(false, function(node) {\n        if (node.classBody) {\n          return false;\n        }\n        if (node instanceof ThisLiteral) {\n          return node.value = name;\n        } else if (node instanceof Code) {\n          if (node.bound) {\n            return node.context = name;\n          }\n        }\n      });\n    };\n\n    Class.prototype.addBoundFunctions = function(o) {\n      var bvar, j, len1, lhs, ref3;\n      ref3 = this.boundFuncs;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        bvar = ref3[j];\n        lhs = (new Value(new ThisLiteral, [new Access(bvar)])).compile(o);\n        this.ctor.body.unshift(new Literal(lhs + \" = \" + (utility('bind', o)) + \"(\" + lhs + \", this)\"));\n      }\n    };\n\n    Class.prototype.addProperties = function(node, name, o) {\n      var acc, assign, base, exprs, func, props;\n      props = node.base.properties.slice(0);\n      exprs = (function() {\n        var results;\n        results = [];\n        while (assign = props.shift()) {\n          if (assign instanceof Assign) {\n            base = assign.variable.base;\n            delete assign.context;\n            func = assign.value;\n            if (base.value === 'constructor') {\n              if (this.ctor) {\n                assign.error('cannot define more than one constructor in a class');\n              }\n              if (func.bound) {\n                assign.error('cannot define a constructor as a bound function');\n              }\n              if (func instanceof Code) {\n                assign = this.ctor = func;\n              } else {\n                this.externalCtor = o.classScope.freeVariable('ctor');\n                assign = new Assign(new IdentifierLiteral(this.externalCtor), func);\n              }\n            } else {\n              if (assign.variable[\"this\"]) {\n                func[\"static\"] = true;\n              } else {\n                acc = base.isComplex() ? new Index(base) : new Access(base);\n                assign.variable = new Value(new IdentifierLiteral(name), [new Access(new PropertyName('prototype')), acc]);\n                if (func instanceof Code && func.bound) {\n                  this.boundFuncs.push(base);\n                  func.bound = false;\n                }\n              }\n            }\n          }\n          results.push(assign);\n        }\n        return results;\n      }).call(this);\n      return compact(exprs);\n    };\n\n    Class.prototype.walkBody = function(name, o) {\n      return this.traverseChildren(false, (function(_this) {\n        return function(child) {\n          var cont, exps, i, j, len1, node, ref3;\n          cont = true;\n          if (child instanceof Class) {\n            return false;\n          }\n          if (child instanceof Block) {\n            ref3 = exps = child.expressions;\n            for (i = j = 0, len1 = ref3.length; j < len1; i = ++j) {\n              node = ref3[i];\n              if (node instanceof Assign && node.variable.looksStatic(name)) {\n                node.value[\"static\"] = true;\n              } else if (node instanceof Value && node.isObject(true)) {\n                cont = false;\n                exps[i] = _this.addProperties(node, name, o);\n              }\n            }\n            child.expressions = exps = flatten(exps);\n          }\n          return cont && !(child instanceof Class);\n        };\n      })(this));\n    };\n\n    Class.prototype.hoistDirectivePrologue = function() {\n      var expressions, index, node;\n      index = 0;\n      expressions = this.body.expressions;\n      while ((node = expressions[index]) && node instanceof Comment || node instanceof Value && node.isString()) {\n        ++index;\n      }\n      return this.directives = expressions.splice(0, index);\n    };\n\n    Class.prototype.ensureConstructor = function(name) {\n      if (!this.ctor) {\n        this.ctor = new Code;\n        if (this.externalCtor) {\n          this.ctor.body.push(new Literal(this.externalCtor + \".apply(this, arguments)\"));\n        } else if (this.parent) {\n          this.ctor.body.push(new Literal(name + \".__super__.constructor.apply(this, arguments)\"));\n        }\n        this.ctor.body.makeReturn();\n        this.body.expressions.unshift(this.ctor);\n      }\n      this.ctor.ctor = this.ctor.name = name;\n      this.ctor.klass = null;\n      return this.ctor.noReturn = true;\n    };\n\n    Class.prototype.compileNode = function(o) {\n      var args, argumentsNode, func, jumpNode, klass, lname, name, ref3, superClass;\n      if (jumpNode = this.body.jumps()) {\n        jumpNode.error('Class bodies cannot contain pure statements');\n      }\n      if (argumentsNode = this.body.contains(isLiteralArguments)) {\n        argumentsNode.error(\"Class bodies shouldn't reference arguments\");\n      }\n      name = this.determineName();\n      lname = new IdentifierLiteral(name);\n      func = new Code([], Block.wrap([this.body]));\n      args = [];\n      o.classScope = func.makeScope(o.scope);\n      this.hoistDirectivePrologue();\n      this.setContext(name);\n      this.walkBody(name, o);\n      this.ensureConstructor(name);\n      this.addBoundFunctions(o);\n      this.body.spaced = true;\n      this.body.expressions.push(lname);\n      if (this.parent) {\n        superClass = new IdentifierLiteral(o.classScope.freeVariable('superClass', {\n          reserve: false\n        }));\n        this.body.expressions.unshift(new Extends(lname, superClass));\n        func.params.push(new Param(superClass));\n        args.push(this.parent);\n      }\n      (ref3 = this.body.expressions).unshift.apply(ref3, this.directives);\n      klass = new Parens(new Call(func, args));\n      if (this.variable) {\n        klass = new Assign(this.variable, klass, null, {\n          moduleDeclaration: this.moduleDeclaration\n        });\n      }\n      return klass.compileToFragments(o);\n    };\n\n    return Class;\n\n  })(Base);\n\n  exports.ModuleDeclaration = ModuleDeclaration = (function(superClass1) {\n    extend1(ModuleDeclaration, superClass1);\n\n    function ModuleDeclaration(clause, source1) {\n      this.clause = clause;\n      this.source = source1;\n      this.checkSource();\n    }\n\n    ModuleDeclaration.prototype.children = ['clause', 'source'];\n\n    ModuleDeclaration.prototype.isStatement = YES;\n\n    ModuleDeclaration.prototype.jumps = THIS;\n\n    ModuleDeclaration.prototype.makeReturn = THIS;\n\n    ModuleDeclaration.prototype.checkSource = function() {\n      if ((this.source != null) && this.source instanceof StringWithInterpolations) {\n        return this.source.error('the name of the module to be imported from must be an uninterpolated string');\n      }\n    };\n\n    ModuleDeclaration.prototype.checkScope = function(o, moduleDeclarationType) {\n      if (o.indent.length !== 0) {\n        return this.error(moduleDeclarationType + \" statements must be at top-level scope\");\n      }\n    };\n\n    return ModuleDeclaration;\n\n  })(Base);\n\n  exports.ImportDeclaration = ImportDeclaration = (function(superClass1) {\n    extend1(ImportDeclaration, superClass1);\n\n    function ImportDeclaration() {\n      return ImportDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    ImportDeclaration.prototype.compileNode = function(o) {\n      var code, ref3;\n      this.checkScope(o, 'import');\n      o.importedSymbols = [];\n      code = [];\n      code.push(this.makeCode(this.tab + \"import \"));\n      if (this.clause != null) {\n        code.push.apply(code, this.clause.compileNode(o));\n      }\n      if (((ref3 = this.source) != null ? ref3.value : void 0) != null) {\n        if (this.clause !== null) {\n          code.push(this.makeCode(' from '));\n        }\n        code.push(this.makeCode(this.source.value));\n      }\n      code.push(this.makeCode(';'));\n      return code;\n    };\n\n    return ImportDeclaration;\n\n  })(ModuleDeclaration);\n\n  exports.ImportClause = ImportClause = (function(superClass1) {\n    extend1(ImportClause, superClass1);\n\n    function ImportClause(defaultBinding, namedImports) {\n      this.defaultBinding = defaultBinding;\n      this.namedImports = namedImports;\n    }\n\n    ImportClause.prototype.children = ['defaultBinding', 'namedImports'];\n\n    ImportClause.prototype.compileNode = function(o) {\n      var code;\n      code = [];\n      if (this.defaultBinding != null) {\n        code.push.apply(code, this.defaultBinding.compileNode(o));\n        if (this.namedImports != null) {\n          code.push(this.makeCode(', '));\n        }\n      }\n      if (this.namedImports != null) {\n        code.push.apply(code, this.namedImports.compileNode(o));\n      }\n      return code;\n    };\n\n    return ImportClause;\n\n  })(Base);\n\n  exports.ExportDeclaration = ExportDeclaration = (function(superClass1) {\n    extend1(ExportDeclaration, superClass1);\n\n    function ExportDeclaration() {\n      return ExportDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    ExportDeclaration.prototype.compileNode = function(o) {\n      var code, ref3;\n      this.checkScope(o, 'export');\n      code = [];\n      code.push(this.makeCode(this.tab + \"export \"));\n      if (this instanceof ExportDefaultDeclaration) {\n        code.push(this.makeCode('default '));\n      }\n      if (!(this instanceof ExportDefaultDeclaration) && (this.clause instanceof Assign || this.clause instanceof Class)) {\n        if (this.clause instanceof Class && !this.clause.variable) {\n          this.clause.error('anonymous classes cannot be exported');\n        }\n        code.push(this.makeCode('var '));\n        this.clause.moduleDeclaration = 'export';\n      }\n      if ((this.clause.body != null) && this.clause.body instanceof Block) {\n        code = code.concat(this.clause.compileToFragments(o, LEVEL_TOP));\n      } else {\n        code = code.concat(this.clause.compileNode(o));\n      }\n      if (((ref3 = this.source) != null ? ref3.value : void 0) != null) {\n        code.push(this.makeCode(\" from \" + this.source.value));\n      }\n      code.push(this.makeCode(';'));\n      return code;\n    };\n\n    return ExportDeclaration;\n\n  })(ModuleDeclaration);\n\n  exports.ExportNamedDeclaration = ExportNamedDeclaration = (function(superClass1) {\n    extend1(ExportNamedDeclaration, superClass1);\n\n    function ExportNamedDeclaration() {\n      return ExportNamedDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    return ExportNamedDeclaration;\n\n  })(ExportDeclaration);\n\n  exports.ExportDefaultDeclaration = ExportDefaultDeclaration = (function(superClass1) {\n    extend1(ExportDefaultDeclaration, superClass1);\n\n    function ExportDefaultDeclaration() {\n      return ExportDefaultDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    return ExportDefaultDeclaration;\n\n  })(ExportDeclaration);\n\n  exports.ExportAllDeclaration = ExportAllDeclaration = (function(superClass1) {\n    extend1(ExportAllDeclaration, superClass1);\n\n    function ExportAllDeclaration() {\n      return ExportAllDeclaration.__super__.constructor.apply(this, arguments);\n    }\n\n    return ExportAllDeclaration;\n\n  })(ExportDeclaration);\n\n  exports.ModuleSpecifierList = ModuleSpecifierList = (function(superClass1) {\n    extend1(ModuleSpecifierList, superClass1);\n\n    function ModuleSpecifierList(specifiers) {\n      this.specifiers = specifiers;\n    }\n\n    ModuleSpecifierList.prototype.children = ['specifiers'];\n\n    ModuleSpecifierList.prototype.compileNode = function(o) {\n      var code, compiledList, fragments, index, j, len1, specifier;\n      code = [];\n      o.indent += TAB;\n      compiledList = (function() {\n        var j, len1, ref3, results;\n        ref3 = this.specifiers;\n        results = [];\n        for (j = 0, len1 = ref3.length; j < len1; j++) {\n          specifier = ref3[j];\n          results.push(specifier.compileToFragments(o, LEVEL_LIST));\n        }\n        return results;\n      }).call(this);\n      if (this.specifiers.length !== 0) {\n        code.push(this.makeCode(\"{\\n\" + o.indent));\n        for (index = j = 0, len1 = compiledList.length; j < len1; index = ++j) {\n          fragments = compiledList[index];\n          if (index) {\n            code.push(this.makeCode(\",\\n\" + o.indent));\n          }\n          code.push.apply(code, fragments);\n        }\n        code.push(this.makeCode(\"\\n}\"));\n      } else {\n        code.push(this.makeCode('{}'));\n      }\n      return code;\n    };\n\n    return ModuleSpecifierList;\n\n  })(Base);\n\n  exports.ImportSpecifierList = ImportSpecifierList = (function(superClass1) {\n    extend1(ImportSpecifierList, superClass1);\n\n    function ImportSpecifierList() {\n      return ImportSpecifierList.__super__.constructor.apply(this, arguments);\n    }\n\n    return ImportSpecifierList;\n\n  })(ModuleSpecifierList);\n\n  exports.ExportSpecifierList = ExportSpecifierList = (function(superClass1) {\n    extend1(ExportSpecifierList, superClass1);\n\n    function ExportSpecifierList() {\n      return ExportSpecifierList.__super__.constructor.apply(this, arguments);\n    }\n\n    return ExportSpecifierList;\n\n  })(ModuleSpecifierList);\n\n  exports.ModuleSpecifier = ModuleSpecifier = (function(superClass1) {\n    extend1(ModuleSpecifier, superClass1);\n\n    function ModuleSpecifier(original, alias, moduleDeclarationType1) {\n      this.original = original;\n      this.alias = alias;\n      this.moduleDeclarationType = moduleDeclarationType1;\n      this.identifier = this.alias != null ? this.alias.value : this.original.value;\n    }\n\n    ModuleSpecifier.prototype.children = ['original', 'alias'];\n\n    ModuleSpecifier.prototype.compileNode = function(o) {\n      var code;\n      o.scope.find(this.identifier, this.moduleDeclarationType);\n      code = [];\n      code.push(this.makeCode(this.original.value));\n      if (this.alias != null) {\n        code.push(this.makeCode(\" as \" + this.alias.value));\n      }\n      return code;\n    };\n\n    return ModuleSpecifier;\n\n  })(Base);\n\n  exports.ImportSpecifier = ImportSpecifier = (function(superClass1) {\n    extend1(ImportSpecifier, superClass1);\n\n    function ImportSpecifier(imported, local) {\n      ImportSpecifier.__super__.constructor.call(this, imported, local, 'import');\n    }\n\n    ImportSpecifier.prototype.compileNode = function(o) {\n      var ref3;\n      if ((ref3 = this.identifier, indexOf.call(o.importedSymbols, ref3) >= 0) || o.scope.check(this.identifier)) {\n        this.error(\"'\" + this.identifier + \"' has already been declared\");\n      } else {\n        o.importedSymbols.push(this.identifier);\n      }\n      return ImportSpecifier.__super__.compileNode.call(this, o);\n    };\n\n    return ImportSpecifier;\n\n  })(ModuleSpecifier);\n\n  exports.ImportDefaultSpecifier = ImportDefaultSpecifier = (function(superClass1) {\n    extend1(ImportDefaultSpecifier, superClass1);\n\n    function ImportDefaultSpecifier() {\n      return ImportDefaultSpecifier.__super__.constructor.apply(this, arguments);\n    }\n\n    return ImportDefaultSpecifier;\n\n  })(ImportSpecifier);\n\n  exports.ImportNamespaceSpecifier = ImportNamespaceSpecifier = (function(superClass1) {\n    extend1(ImportNamespaceSpecifier, superClass1);\n\n    function ImportNamespaceSpecifier() {\n      return ImportNamespaceSpecifier.__super__.constructor.apply(this, arguments);\n    }\n\n    return ImportNamespaceSpecifier;\n\n  })(ImportSpecifier);\n\n  exports.ExportSpecifier = ExportSpecifier = (function(superClass1) {\n    extend1(ExportSpecifier, superClass1);\n\n    function ExportSpecifier(local, exported) {\n      ExportSpecifier.__super__.constructor.call(this, local, exported, 'export');\n    }\n\n    return ExportSpecifier;\n\n  })(ModuleSpecifier);\n\n  exports.Assign = Assign = (function(superClass1) {\n    extend1(Assign, superClass1);\n\n    function Assign(variable1, value1, context, options) {\n      this.variable = variable1;\n      this.value = value1;\n      this.context = context;\n      if (options == null) {\n        options = {};\n      }\n      this.param = options.param, this.subpattern = options.subpattern, this.operatorToken = options.operatorToken, this.moduleDeclaration = options.moduleDeclaration;\n    }\n\n    Assign.prototype.children = ['variable', 'value'];\n\n    Assign.prototype.isStatement = function(o) {\n      return (o != null ? o.level : void 0) === LEVEL_TOP && (this.context != null) && (this.moduleDeclaration || indexOf.call(this.context, \"?\") >= 0);\n    };\n\n    Assign.prototype.checkAssignability = function(o, varBase) {\n      if (Object.prototype.hasOwnProperty.call(o.scope.positions, varBase.value) && o.scope.variables[o.scope.positions[varBase.value]].type === 'import') {\n        return varBase.error(\"'\" + varBase.value + \"' is read-only\");\n      }\n    };\n\n    Assign.prototype.assigns = function(name) {\n      return this[this.context === 'object' ? 'value' : 'variable'].assigns(name);\n    };\n\n    Assign.prototype.unfoldSoak = function(o) {\n      return unfoldSoak(o, this, 'variable');\n    };\n\n    Assign.prototype.compileNode = function(o) {\n      var answer, compiledName, isValue, j, name, properties, prototype, ref3, ref4, ref5, ref6, ref7, ref8, val, varBase;\n      if (isValue = this.variable instanceof Value) {\n        if (this.variable.isArray() || this.variable.isObject()) {\n          return this.compilePatternMatch(o);\n        }\n        if (this.variable.isSplice()) {\n          return this.compileSplice(o);\n        }\n        if ((ref3 = this.context) === '||=' || ref3 === '&&=' || ref3 === '?=') {\n          return this.compileConditional(o);\n        }\n        if ((ref4 = this.context) === '**=' || ref4 === '//=' || ref4 === '%%=') {\n          return this.compileSpecialMath(o);\n        }\n      }\n      if (this.value instanceof Code) {\n        if (this.value[\"static\"]) {\n          this.value.klass = this.variable.base;\n          this.value.name = this.variable.properties[0];\n          this.value.variable = this.variable;\n        } else if (((ref5 = this.variable.properties) != null ? ref5.length : void 0) >= 2) {\n          ref6 = this.variable.properties, properties = 3 <= ref6.length ? slice.call(ref6, 0, j = ref6.length - 2) : (j = 0, []), prototype = ref6[j++], name = ref6[j++];\n          if (((ref7 = prototype.name) != null ? ref7.value : void 0) === 'prototype') {\n            this.value.klass = new Value(this.variable.base, properties);\n            this.value.name = name;\n            this.value.variable = this.variable;\n          }\n        }\n      }\n      if (!this.context) {\n        varBase = this.variable.unwrapAll();\n        if (!varBase.isAssignable()) {\n          this.variable.error(\"'\" + (this.variable.compile(o)) + \"' can't be assigned\");\n        }\n        if (!(typeof varBase.hasProperties === \"function\" ? varBase.hasProperties() : void 0)) {\n          if (this.moduleDeclaration) {\n            this.checkAssignability(o, varBase);\n            o.scope.add(varBase.value, this.moduleDeclaration);\n          } else if (this.param) {\n            o.scope.add(varBase.value, 'var');\n          } else {\n            this.checkAssignability(o, varBase);\n            o.scope.find(varBase.value);\n          }\n        }\n      }\n      val = this.value.compileToFragments(o, LEVEL_LIST);\n      if (isValue && this.variable.base instanceof Obj) {\n        this.variable.front = true;\n      }\n      compiledName = this.variable.compileToFragments(o, LEVEL_LIST);\n      if (this.context === 'object') {\n        if (ref8 = fragmentsToText(compiledName), indexOf.call(JS_FORBIDDEN, ref8) >= 0) {\n          compiledName.unshift(this.makeCode('\"'));\n          compiledName.push(this.makeCode('\"'));\n        }\n        return compiledName.concat(this.makeCode(\": \"), val);\n      }\n      answer = compiledName.concat(this.makeCode(\" \" + (this.context || '=') + \" \"), val);\n      if (o.level <= LEVEL_LIST) {\n        return answer;\n      } else {\n        return this.wrapInBraces(answer);\n      }\n    };\n\n    Assign.prototype.compilePatternMatch = function(o) {\n      var acc, assigns, code, defaultValue, expandedIdx, fragments, i, idx, isObject, ivar, j, len1, message, name, obj, objects, olen, ref, ref3, ref4, ref5, ref6, rest, top, val, value, vvar, vvarText;\n      top = o.level === LEVEL_TOP;\n      value = this.value;\n      objects = this.variable.base.objects;\n      if (!(olen = objects.length)) {\n        code = value.compileToFragments(o);\n        if (o.level >= LEVEL_OP) {\n          return this.wrapInBraces(code);\n        } else {\n          return code;\n        }\n      }\n      obj = objects[0];\n      if (olen === 1 && obj instanceof Expansion) {\n        obj.error('Destructuring assignment has no target');\n      }\n      isObject = this.variable.isObject();\n      if (top && olen === 1 && !(obj instanceof Splat)) {\n        defaultValue = null;\n        if (obj instanceof Assign && obj.context === 'object') {\n          ref3 = obj, (ref4 = ref3.variable, idx = ref4.base), obj = ref3.value;\n          if (obj instanceof Assign) {\n            defaultValue = obj.value;\n            obj = obj.variable;\n          }\n        } else {\n          if (obj instanceof Assign) {\n            defaultValue = obj.value;\n            obj = obj.variable;\n          }\n          idx = isObject ? obj[\"this\"] ? obj.properties[0].name : new PropertyName(obj.unwrap().value) : new NumberLiteral(0);\n        }\n        acc = idx.unwrap() instanceof PropertyName;\n        value = new Value(value);\n        value.properties.push(new (acc ? Access : Index)(idx));\n        message = isUnassignable(obj.unwrap().value);\n        if (message) {\n          obj.error(message);\n        }\n        if (defaultValue) {\n          value = new Op('?', value, defaultValue);\n        }\n        return new Assign(obj, value, null, {\n          param: this.param\n        }).compileToFragments(o, LEVEL_TOP);\n      }\n      vvar = value.compileToFragments(o, LEVEL_LIST);\n      vvarText = fragmentsToText(vvar);\n      assigns = [];\n      expandedIdx = false;\n      if (!(value.unwrap() instanceof IdentifierLiteral) || this.variable.assigns(vvarText)) {\n        assigns.push([this.makeCode((ref = o.scope.freeVariable('ref')) + \" = \")].concat(slice.call(vvar)));\n        vvar = [this.makeCode(ref)];\n        vvarText = ref;\n      }\n      for (i = j = 0, len1 = objects.length; j < len1; i = ++j) {\n        obj = objects[i];\n        idx = i;\n        if (!expandedIdx && obj instanceof Splat) {\n          name = obj.name.unwrap().value;\n          obj = obj.unwrap();\n          val = olen + \" <= \" + vvarText + \".length ? \" + (utility('slice', o)) + \".call(\" + vvarText + \", \" + i;\n          if (rest = olen - i - 1) {\n            ivar = o.scope.freeVariable('i', {\n              single: true\n            });\n            val += \", \" + ivar + \" = \" + vvarText + \".length - \" + rest + \") : (\" + ivar + \" = \" + i + \", [])\";\n          } else {\n            val += \") : []\";\n          }\n          val = new Literal(val);\n          expandedIdx = ivar + \"++\";\n        } else if (!expandedIdx && obj instanceof Expansion) {\n          if (rest = olen - i - 1) {\n            if (rest === 1) {\n              expandedIdx = vvarText + \".length - 1\";\n            } else {\n              ivar = o.scope.freeVariable('i', {\n                single: true\n              });\n              val = new Literal(ivar + \" = \" + vvarText + \".length - \" + rest);\n              expandedIdx = ivar + \"++\";\n              assigns.push(val.compileToFragments(o, LEVEL_LIST));\n            }\n          }\n          continue;\n        } else {\n          if (obj instanceof Splat || obj instanceof Expansion) {\n            obj.error(\"multiple splats/expansions are disallowed in an assignment\");\n          }\n          defaultValue = null;\n          if (obj instanceof Assign && obj.context === 'object') {\n            ref5 = obj, (ref6 = ref5.variable, idx = ref6.base), obj = ref5.value;\n            if (obj instanceof Assign) {\n              defaultValue = obj.value;\n              obj = obj.variable;\n            }\n          } else {\n            if (obj instanceof Assign) {\n              defaultValue = obj.value;\n              obj = obj.variable;\n            }\n            idx = isObject ? obj[\"this\"] ? obj.properties[0].name : new PropertyName(obj.unwrap().value) : new Literal(expandedIdx || idx);\n          }\n          name = obj.unwrap().value;\n          acc = idx.unwrap() instanceof PropertyName;\n          val = new Value(new Literal(vvarText), [new (acc ? Access : Index)(idx)]);\n          if (defaultValue) {\n            val = new Op('?', val, defaultValue);\n          }\n        }\n        if (name != null) {\n          message = isUnassignable(name);\n          if (message) {\n            obj.error(message);\n          }\n        }\n        assigns.push(new Assign(obj, val, null, {\n          param: this.param,\n          subpattern: true\n        }).compileToFragments(o, LEVEL_LIST));\n      }\n      if (!(top || this.subpattern)) {\n        assigns.push(vvar);\n      }\n      fragments = this.joinFragmentArrays(assigns, ', ');\n      if (o.level < LEVEL_LIST) {\n        return fragments;\n      } else {\n        return this.wrapInBraces(fragments);\n      }\n    };\n\n    Assign.prototype.compileConditional = function(o) {\n      var fragments, left, ref3, right;\n      ref3 = this.variable.cacheReference(o), left = ref3[0], right = ref3[1];\n      if (!left.properties.length && left.base instanceof Literal && !(left.base instanceof ThisLiteral) && !o.scope.check(left.base.value)) {\n        this.variable.error(\"the variable \\\"\" + left.base.value + \"\\\" can't be assigned with \" + this.context + \" because it has not been declared before\");\n      }\n      if (indexOf.call(this.context, \"?\") >= 0) {\n        o.isExistentialEquals = true;\n        return new If(new Existence(left), right, {\n          type: 'if'\n        }).addElse(new Assign(right, this.value, '=')).compileToFragments(o);\n      } else {\n        fragments = new Op(this.context.slice(0, -1), left, new Assign(right, this.value, '=')).compileToFragments(o);\n        if (o.level <= LEVEL_LIST) {\n          return fragments;\n        } else {\n          return this.wrapInBraces(fragments);\n        }\n      }\n    };\n\n    Assign.prototype.compileSpecialMath = function(o) {\n      var left, ref3, right;\n      ref3 = this.variable.cacheReference(o), left = ref3[0], right = ref3[1];\n      return new Assign(left, new Op(this.context.slice(0, -1), right, this.value)).compileToFragments(o);\n    };\n\n    Assign.prototype.compileSplice = function(o) {\n      var answer, exclusive, from, fromDecl, fromRef, name, ref3, ref4, ref5, to, valDef, valRef;\n      ref3 = this.variable.properties.pop().range, from = ref3.from, to = ref3.to, exclusive = ref3.exclusive;\n      name = this.variable.compile(o);\n      if (from) {\n        ref4 = this.cacheToCodeFragments(from.cache(o, LEVEL_OP)), fromDecl = ref4[0], fromRef = ref4[1];\n      } else {\n        fromDecl = fromRef = '0';\n      }\n      if (to) {\n        if ((from != null ? from.isNumber() : void 0) && to.isNumber()) {\n          to = to.compile(o) - fromRef;\n          if (!exclusive) {\n            to += 1;\n          }\n        } else {\n          to = to.compile(o, LEVEL_ACCESS) + ' - ' + fromRef;\n          if (!exclusive) {\n            to += ' + 1';\n          }\n        }\n      } else {\n        to = \"9e9\";\n      }\n      ref5 = this.value.cache(o, LEVEL_LIST), valDef = ref5[0], valRef = ref5[1];\n      answer = [].concat(this.makeCode(\"[].splice.apply(\" + name + \", [\" + fromDecl + \", \" + to + \"].concat(\"), valDef, this.makeCode(\")), \"), valRef);\n      if (o.level > LEVEL_TOP) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n\n    return Assign;\n\n  })(Base);\n\n  exports.Code = Code = (function(superClass1) {\n    extend1(Code, superClass1);\n\n    function Code(params, body, tag) {\n      this.params = params || [];\n      this.body = body || new Block;\n      this.bound = tag === 'boundfunc';\n      this.isGenerator = !!this.body.contains(function(node) {\n        return (node instanceof Op && node.isYield()) || node instanceof YieldReturn;\n      });\n    }\n\n    Code.prototype.children = ['params', 'body'];\n\n    Code.prototype.isStatement = function() {\n      return !!this.ctor;\n    };\n\n    Code.prototype.jumps = NO;\n\n    Code.prototype.makeScope = function(parentScope) {\n      return new Scope(parentScope, this.body, this);\n    };\n\n    Code.prototype.compileNode = function(o) {\n      var answer, boundfunc, code, exprs, i, j, k, l, len1, len2, len3, len4, len5, len6, lit, m, p, param, params, q, r, ref, ref3, ref4, ref5, ref6, ref7, ref8, splats, uniqs, val, wasEmpty, wrapper;\n      if (this.bound && ((ref3 = o.scope.method) != null ? ref3.bound : void 0)) {\n        this.context = o.scope.method.context;\n      }\n      if (this.bound && !this.context) {\n        this.context = '_this';\n        wrapper = new Code([new Param(new IdentifierLiteral(this.context))], new Block([this]));\n        boundfunc = new Call(wrapper, [new ThisLiteral]);\n        boundfunc.updateLocationDataIfMissing(this.locationData);\n        return boundfunc.compileNode(o);\n      }\n      o.scope = del(o, 'classScope') || this.makeScope(o.scope);\n      o.scope.shared = del(o, 'sharedScope');\n      o.indent += TAB;\n      delete o.bare;\n      delete o.isExistentialEquals;\n      params = [];\n      exprs = [];\n      ref4 = this.params;\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        param = ref4[j];\n        if (!(param instanceof Expansion)) {\n          o.scope.parameter(param.asReference(o));\n        }\n      }\n      ref5 = this.params;\n      for (k = 0, len2 = ref5.length; k < len2; k++) {\n        param = ref5[k];\n        if (!(param.splat || param instanceof Expansion)) {\n          continue;\n        }\n        ref6 = this.params;\n        for (l = 0, len3 = ref6.length; l < len3; l++) {\n          p = ref6[l];\n          if (!(p instanceof Expansion) && p.name.value) {\n            o.scope.add(p.name.value, 'var', true);\n          }\n        }\n        splats = new Assign(new Value(new Arr((function() {\n          var len4, m, ref7, results;\n          ref7 = this.params;\n          results = [];\n          for (m = 0, len4 = ref7.length; m < len4; m++) {\n            p = ref7[m];\n            results.push(p.asReference(o));\n          }\n          return results;\n        }).call(this))), new Value(new IdentifierLiteral('arguments')));\n        break;\n      }\n      ref7 = this.params;\n      for (m = 0, len4 = ref7.length; m < len4; m++) {\n        param = ref7[m];\n        if (param.isComplex()) {\n          val = ref = param.asReference(o);\n          if (param.value) {\n            val = new Op('?', ref, param.value);\n          }\n          exprs.push(new Assign(new Value(param.name), val, '=', {\n            param: true\n          }));\n        } else {\n          ref = param;\n          if (param.value) {\n            lit = new Literal(ref.name.value + ' == null');\n            val = new Assign(new Value(param.name), param.value, '=');\n            exprs.push(new If(lit, val));\n          }\n        }\n        if (!splats) {\n          params.push(ref);\n        }\n      }\n      wasEmpty = this.body.isEmpty();\n      if (splats) {\n        exprs.unshift(splats);\n      }\n      if (exprs.length) {\n        (ref8 = this.body.expressions).unshift.apply(ref8, exprs);\n      }\n      for (i = q = 0, len5 = params.length; q < len5; i = ++q) {\n        p = params[i];\n        params[i] = p.compileToFragments(o);\n        o.scope.parameter(fragmentsToText(params[i]));\n      }\n      uniqs = [];\n      this.eachParamName(function(name, node) {\n        if (indexOf.call(uniqs, name) >= 0) {\n          node.error(\"multiple parameters named \" + name);\n        }\n        return uniqs.push(name);\n      });\n      if (!(wasEmpty || this.noReturn)) {\n        this.body.makeReturn();\n      }\n      code = 'function';\n      if (this.isGenerator) {\n        code += '*';\n      }\n      if (this.ctor) {\n        code += ' ' + this.name;\n      }\n      code += '(';\n      answer = [this.makeCode(code)];\n      for (i = r = 0, len6 = params.length; r < len6; i = ++r) {\n        p = params[i];\n        if (i) {\n          answer.push(this.makeCode(\", \"));\n        }\n        answer.push.apply(answer, p);\n      }\n      answer.push(this.makeCode(') {'));\n      if (!this.body.isEmpty()) {\n        answer = answer.concat(this.makeCode(\"\\n\"), this.body.compileWithDeclarations(o), this.makeCode(\"\\n\" + this.tab));\n      }\n      answer.push(this.makeCode('}'));\n      if (this.ctor) {\n        return [this.makeCode(this.tab)].concat(slice.call(answer));\n      }\n      if (this.front || (o.level >= LEVEL_ACCESS)) {\n        return this.wrapInBraces(answer);\n      } else {\n        return answer;\n      }\n    };\n\n    Code.prototype.eachParamName = function(iterator) {\n      var j, len1, param, ref3, results;\n      ref3 = this.params;\n      results = [];\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        param = ref3[j];\n        results.push(param.eachName(iterator));\n      }\n      return results;\n    };\n\n    Code.prototype.traverseChildren = function(crossScope, func) {\n      if (crossScope) {\n        return Code.__super__.traverseChildren.call(this, crossScope, func);\n      }\n    };\n\n    return Code;\n\n  })(Base);\n\n  exports.Param = Param = (function(superClass1) {\n    extend1(Param, superClass1);\n\n    function Param(name1, value1, splat) {\n      var message, token;\n      this.name = name1;\n      this.value = value1;\n      this.splat = splat;\n      message = isUnassignable(this.name.unwrapAll().value);\n      if (message) {\n        this.name.error(message);\n      }\n      if (this.name instanceof Obj && this.name.generated) {\n        token = this.name.objects[0].operatorToken;\n        token.error(\"unexpected \" + token.value);\n      }\n    }\n\n    Param.prototype.children = ['name', 'value'];\n\n    Param.prototype.compileToFragments = function(o) {\n      return this.name.compileToFragments(o, LEVEL_LIST);\n    };\n\n    Param.prototype.asReference = function(o) {\n      var name, node;\n      if (this.reference) {\n        return this.reference;\n      }\n      node = this.name;\n      if (node[\"this\"]) {\n        name = node.properties[0].name.value;\n        if (indexOf.call(JS_FORBIDDEN, name) >= 0) {\n          name = \"_\" + name;\n        }\n        node = new IdentifierLiteral(o.scope.freeVariable(name));\n      } else if (node.isComplex()) {\n        node = new IdentifierLiteral(o.scope.freeVariable('arg'));\n      }\n      node = new Value(node);\n      if (this.splat) {\n        node = new Splat(node);\n      }\n      node.updateLocationDataIfMissing(this.locationData);\n      return this.reference = node;\n    };\n\n    Param.prototype.isComplex = function() {\n      return this.name.isComplex();\n    };\n\n    Param.prototype.eachName = function(iterator, name) {\n      var atParam, j, len1, node, obj, ref3, ref4;\n      if (name == null) {\n        name = this.name;\n      }\n      atParam = function(obj) {\n        return iterator(\"@\" + obj.properties[0].name.value, obj);\n      };\n      if (name instanceof Literal) {\n        return iterator(name.value, name);\n      }\n      if (name instanceof Value) {\n        return atParam(name);\n      }\n      ref4 = (ref3 = name.objects) != null ? ref3 : [];\n      for (j = 0, len1 = ref4.length; j < len1; j++) {\n        obj = ref4[j];\n        if (obj instanceof Assign && (obj.context == null)) {\n          obj = obj.variable;\n        }\n        if (obj instanceof Assign) {\n          if (obj.value instanceof Assign) {\n            obj = obj.value;\n          }\n          this.eachName(iterator, obj.value.unwrap());\n        } else if (obj instanceof Splat) {\n          node = obj.name.unwrap();\n          iterator(node.value, node);\n        } else if (obj instanceof Value) {\n          if (obj.isArray() || obj.isObject()) {\n            this.eachName(iterator, obj.base);\n          } else if (obj[\"this\"]) {\n            atParam(obj);\n          } else {\n            iterator(obj.base.value, obj.base);\n          }\n        } else if (!(obj instanceof Expansion)) {\n          obj.error(\"illegal parameter \" + (obj.compile()));\n        }\n      }\n    };\n\n    return Param;\n\n  })(Base);\n\n  exports.Splat = Splat = (function(superClass1) {\n    extend1(Splat, superClass1);\n\n    Splat.prototype.children = ['name'];\n\n    Splat.prototype.isAssignable = YES;\n\n    function Splat(name) {\n      this.name = name.compile ? name : new Literal(name);\n    }\n\n    Splat.prototype.assigns = function(name) {\n      return this.name.assigns(name);\n    };\n\n    Splat.prototype.compileToFragments = function(o) {\n      return this.name.compileToFragments(o);\n    };\n\n    Splat.prototype.unwrap = function() {\n      return this.name;\n    };\n\n    Splat.compileSplattedArray = function(o, list, apply) {\n      var args, base, compiledNode, concatPart, fragments, i, index, j, last, len1, node;\n      index = -1;\n      while ((node = list[++index]) && !(node instanceof Splat)) {\n        continue;\n      }\n      if (index >= list.length) {\n        return [];\n      }\n      if (list.length === 1) {\n        node = list[0];\n        fragments = node.compileToFragments(o, LEVEL_LIST);\n        if (apply) {\n          return fragments;\n        }\n        return [].concat(node.makeCode((utility('slice', o)) + \".call(\"), fragments, node.makeCode(\")\"));\n      }\n      args = list.slice(index);\n      for (i = j = 0, len1 = args.length; j < len1; i = ++j) {\n        node = args[i];\n        compiledNode = node.compileToFragments(o, LEVEL_LIST);\n        args[i] = node instanceof Splat ? [].concat(node.makeCode((utility('slice', o)) + \".call(\"), compiledNode, node.makeCode(\")\")) : [].concat(node.makeCode(\"[\"), compiledNode, node.makeCode(\"]\"));\n      }\n      if (index === 0) {\n        node = list[0];\n        concatPart = node.joinFragmentArrays(args.slice(1), ', ');\n        return args[0].concat(node.makeCode(\".concat(\"), concatPart, node.makeCode(\")\"));\n      }\n      base = (function() {\n        var k, len2, ref3, results;\n        ref3 = list.slice(0, index);\n        results = [];\n        for (k = 0, len2 = ref3.length; k < len2; k++) {\n          node = ref3[k];\n          results.push(node.compileToFragments(o, LEVEL_LIST));\n        }\n        return results;\n      })();\n      base = list[0].joinFragmentArrays(base, ', ');\n      concatPart = list[index].joinFragmentArrays(args, ', ');\n      last = list[list.length - 1];\n      return [].concat(list[0].makeCode(\"[\"), base, list[index].makeCode(\"].concat(\"), concatPart, last.makeCode(\")\"));\n    };\n\n    return Splat;\n\n  })(Base);\n\n  exports.Expansion = Expansion = (function(superClass1) {\n    extend1(Expansion, superClass1);\n\n    function Expansion() {\n      return Expansion.__super__.constructor.apply(this, arguments);\n    }\n\n    Expansion.prototype.isComplex = NO;\n\n    Expansion.prototype.compileNode = function(o) {\n      return this.error('Expansion must be used inside a destructuring assignment or parameter list');\n    };\n\n    Expansion.prototype.asReference = function(o) {\n      return this;\n    };\n\n    Expansion.prototype.eachName = function(iterator) {};\n\n    return Expansion;\n\n  })(Base);\n\n  exports.While = While = (function(superClass1) {\n    extend1(While, superClass1);\n\n    function While(condition, options) {\n      this.condition = (options != null ? options.invert : void 0) ? condition.invert() : condition;\n      this.guard = options != null ? options.guard : void 0;\n    }\n\n    While.prototype.children = ['condition', 'guard', 'body'];\n\n    While.prototype.isStatement = YES;\n\n    While.prototype.makeReturn = function(res) {\n      if (res) {\n        return While.__super__.makeReturn.apply(this, arguments);\n      } else {\n        this.returns = !this.jumps({\n          loop: true\n        });\n        return this;\n      }\n    };\n\n    While.prototype.addBody = function(body1) {\n      this.body = body1;\n      return this;\n    };\n\n    While.prototype.jumps = function() {\n      var expressions, j, jumpNode, len1, node;\n      expressions = this.body.expressions;\n      if (!expressions.length) {\n        return false;\n      }\n      for (j = 0, len1 = expressions.length; j < len1; j++) {\n        node = expressions[j];\n        if (jumpNode = node.jumps({\n          loop: true\n        })) {\n          return jumpNode;\n        }\n      }\n      return false;\n    };\n\n    While.prototype.compileNode = function(o) {\n      var answer, body, rvar, set;\n      o.indent += TAB;\n      set = '';\n      body = this.body;\n      if (body.isEmpty()) {\n        body = this.makeCode('');\n      } else {\n        if (this.returns) {\n          body.makeReturn(rvar = o.scope.freeVariable('results'));\n          set = \"\" + this.tab + rvar + \" = [];\\n\";\n        }\n        if (this.guard) {\n          if (body.expressions.length > 1) {\n            body.expressions.unshift(new If((new Parens(this.guard)).invert(), new StatementLiteral(\"continue\")));\n          } else {\n            if (this.guard) {\n              body = Block.wrap([new If(this.guard, body)]);\n            }\n          }\n        }\n        body = [].concat(this.makeCode(\"\\n\"), body.compileToFragments(o, LEVEL_TOP), this.makeCode(\"\\n\" + this.tab));\n      }\n      answer = [].concat(this.makeCode(set + this.tab + \"while (\"), this.condition.compileToFragments(o, LEVEL_PAREN), this.makeCode(\") {\"), body, this.makeCode(\"}\"));\n      if (this.returns) {\n        answer.push(this.makeCode(\"\\n\" + this.tab + \"return \" + rvar + \";\"));\n      }\n      return answer;\n    };\n\n    return While;\n\n  })(Base);\n\n  exports.Op = Op = (function(superClass1) {\n    var CONVERSIONS, INVERSIONS;\n\n    extend1(Op, superClass1);\n\n    function Op(op, first, second, flip) {\n      if (op === 'in') {\n        return new In(first, second);\n      }\n      if (op === 'do') {\n        return this.generateDo(first);\n      }\n      if (op === 'new') {\n        if (first instanceof Call && !first[\"do\"] && !first.isNew) {\n          return first.newInstance();\n        }\n        if (first instanceof Code && first.bound || first[\"do\"]) {\n          first = new Parens(first);\n        }\n      }\n      this.operator = CONVERSIONS[op] || op;\n      this.first = first;\n      this.second = second;\n      this.flip = !!flip;\n      return this;\n    }\n\n    CONVERSIONS = {\n      '==': '===',\n      '!=': '!==',\n      'of': 'in',\n      'yieldfrom': 'yield*'\n    };\n\n    INVERSIONS = {\n      '!==': '===',\n      '===': '!=='\n    };\n\n    Op.prototype.children = ['first', 'second'];\n\n    Op.prototype.isNumber = function() {\n      var ref3;\n      return this.isUnary() && ((ref3 = this.operator) === '+' || ref3 === '-') && this.first instanceof Value && this.first.isNumber();\n    };\n\n    Op.prototype.isYield = function() {\n      var ref3;\n      return (ref3 = this.operator) === 'yield' || ref3 === 'yield*';\n    };\n\n    Op.prototype.isUnary = function() {\n      return !this.second;\n    };\n\n    Op.prototype.isComplex = function() {\n      return !this.isNumber();\n    };\n\n    Op.prototype.isChainable = function() {\n      var ref3;\n      return (ref3 = this.operator) === '<' || ref3 === '>' || ref3 === '>=' || ref3 === '<=' || ref3 === '===' || ref3 === '!==';\n    };\n\n    Op.prototype.invert = function() {\n      var allInvertable, curr, fst, op, ref3;\n      if (this.isChainable() && this.first.isChainable()) {\n        allInvertable = true;\n        curr = this;\n        while (curr && curr.operator) {\n          allInvertable && (allInvertable = curr.operator in INVERSIONS);\n          curr = curr.first;\n        }\n        if (!allInvertable) {\n          return new Parens(this).invert();\n        }\n        curr = this;\n        while (curr && curr.operator) {\n          curr.invert = !curr.invert;\n          curr.operator = INVERSIONS[curr.operator];\n          curr = curr.first;\n        }\n        return this;\n      } else if (op = INVERSIONS[this.operator]) {\n        this.operator = op;\n        if (this.first.unwrap() instanceof Op) {\n          this.first.invert();\n        }\n        return this;\n      } else if (this.second) {\n        return new Parens(this).invert();\n      } else if (this.operator === '!' && (fst = this.first.unwrap()) instanceof Op && ((ref3 = fst.operator) === '!' || ref3 === 'in' || ref3 === 'instanceof')) {\n        return fst;\n      } else {\n        return new Op('!', this);\n      }\n    };\n\n    Op.prototype.unfoldSoak = function(o) {\n      var ref3;\n      return ((ref3 = this.operator) === '++' || ref3 === '--' || ref3 === 'delete') && unfoldSoak(o, this, 'first');\n    };\n\n    Op.prototype.generateDo = function(exp) {\n      var call, func, j, len1, param, passedParams, ref, ref3;\n      passedParams = [];\n      func = exp instanceof Assign && (ref = exp.value.unwrap()) instanceof Code ? ref : exp;\n      ref3 = func.params || [];\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        param = ref3[j];\n        if (param.value) {\n          passedParams.push(param.value);\n          delete param.value;\n        } else {\n          passedParams.push(param);\n        }\n      }\n      call = new Call(exp, passedParams);\n      call[\"do\"] = true;\n      return call;\n    };\n\n    Op.prototype.compileNode = function(o) {\n      var answer, isChain, lhs, message, ref3, rhs;\n      isChain = this.isChainable() && this.first.isChainable();\n      if (!isChain) {\n        this.first.front = this.front;\n      }\n      if (this.operator === 'delete' && o.scope.check(this.first.unwrapAll().value)) {\n        this.error('delete operand may not be argument or var');\n      }\n      if ((ref3 = this.operator) === '--' || ref3 === '++') {\n        message = isUnassignable(this.first.unwrapAll().value);\n        if (message) {\n          this.first.error(message);\n        }\n      }\n      if (this.isYield()) {\n        return this.compileYield(o);\n      }\n      if (this.isUnary()) {\n        return this.compileUnary(o);\n      }\n      if (isChain) {\n        return this.compileChain(o);\n      }\n      switch (this.operator) {\n        case '?':\n          return this.compileExistence(o);\n        case '**':\n          return this.compilePower(o);\n        case '//':\n          return this.compileFloorDivision(o);\n        case '%%':\n          return this.compileModulo(o);\n        default:\n          lhs = this.first.compileToFragments(o, LEVEL_OP);\n          rhs = this.second.compileToFragments(o, LEVEL_OP);\n          answer = [].concat(lhs, this.makeCode(\" \" + this.operator + \" \"), rhs);\n          if (o.level <= LEVEL_OP) {\n            return answer;\n          } else {\n            return this.wrapInBraces(answer);\n          }\n      }\n    };\n\n    Op.prototype.compileChain = function(o) {\n      var fragments, fst, ref3, shared;\n      ref3 = this.first.second.cache(o), this.first.second = ref3[0], shared = ref3[1];\n      fst = this.first.compileToFragments(o, LEVEL_OP);\n      fragments = fst.concat(this.makeCode(\" \" + (this.invert ? '&&' : '||') + \" \"), shared.compileToFragments(o), this.makeCode(\" \" + this.operator + \" \"), this.second.compileToFragments(o, LEVEL_OP));\n      return this.wrapInBraces(fragments);\n    };\n\n    Op.prototype.compileExistence = function(o) {\n      var fst, ref;\n      if (this.first.isComplex()) {\n        ref = new IdentifierLiteral(o.scope.freeVariable('ref'));\n        fst = new Parens(new Assign(ref, this.first));\n      } else {\n        fst = this.first;\n        ref = fst;\n      }\n      return new If(new Existence(fst), ref, {\n        type: 'if'\n      }).addElse(this.second).compileToFragments(o);\n    };\n\n    Op.prototype.compileUnary = function(o) {\n      var op, parts, plusMinus;\n      parts = [];\n      op = this.operator;\n      parts.push([this.makeCode(op)]);\n      if (op === '!' && this.first instanceof Existence) {\n        this.first.negated = !this.first.negated;\n        return this.first.compileToFragments(o);\n      }\n      if (o.level >= LEVEL_ACCESS) {\n        return (new Parens(this)).compileToFragments(o);\n      }\n      plusMinus = op === '+' || op === '-';\n      if ((op === 'new' || op === 'typeof' || op === 'delete') || plusMinus && this.first instanceof Op && this.first.operator === op) {\n        parts.push([this.makeCode(' ')]);\n      }\n      if ((plusMinus && this.first instanceof Op) || (op === 'new' && this.first.isStatement(o))) {\n        this.first = new Parens(this.first);\n      }\n      parts.push(this.first.compileToFragments(o, LEVEL_OP));\n      if (this.flip) {\n        parts.reverse();\n      }\n      return this.joinFragmentArrays(parts, '');\n    };\n\n    Op.prototype.compileYield = function(o) {\n      var op, parts, ref3;\n      parts = [];\n      op = this.operator;\n      if (o.scope.parent == null) {\n        this.error('yield can only occur inside functions');\n      }\n      if (indexOf.call(Object.keys(this.first), 'expression') >= 0 && !(this.first instanceof Throw)) {\n        if (this.first.expression != null) {\n          parts.push(this.first.expression.compileToFragments(o, LEVEL_OP));\n        }\n      } else {\n        if (o.level >= LEVEL_PAREN) {\n          parts.push([this.makeCode(\"(\")]);\n        }\n        parts.push([this.makeCode(op)]);\n        if (((ref3 = this.first.base) != null ? ref3.value : void 0) !== '') {\n          parts.push([this.makeCode(\" \")]);\n        }\n        parts.push(this.first.compileToFragments(o, LEVEL_OP));\n        if (o.level >= LEVEL_PAREN) {\n          parts.push([this.makeCode(\")\")]);\n        }\n      }\n      return this.joinFragmentArrays(parts, '');\n    };\n\n    Op.prototype.compilePower = function(o) {\n      var pow;\n      pow = new Value(new IdentifierLiteral('Math'), [new Access(new PropertyName('pow'))]);\n      return new Call(pow, [this.first, this.second]).compileToFragments(o);\n    };\n\n    Op.prototype.compileFloorDivision = function(o) {\n      var div, floor, second;\n      floor = new Value(new IdentifierLiteral('Math'), [new Access(new PropertyName('floor'))]);\n      second = this.second.isComplex() ? new Parens(this.second) : this.second;\n      div = new Op('/', this.first, second);\n      return new Call(floor, [div]).compileToFragments(o);\n    };\n\n    Op.prototype.compileModulo = function(o) {\n      var mod;\n      mod = new Value(new Literal(utility('modulo', o)));\n      return new Call(mod, [this.first, this.second]).compileToFragments(o);\n    };\n\n    Op.prototype.toString = function(idt) {\n      return Op.__super__.toString.call(this, idt, this.constructor.name + ' ' + this.operator);\n    };\n\n    return Op;\n\n  })(Base);\n\n  exports.In = In = (function(superClass1) {\n    extend1(In, superClass1);\n\n    function In(object, array) {\n      this.object = object;\n      this.array = array;\n    }\n\n    In.prototype.children = ['object', 'array'];\n\n    In.prototype.invert = NEGATE;\n\n    In.prototype.compileNode = function(o) {\n      var hasSplat, j, len1, obj, ref3;\n      if (this.array instanceof Value && this.array.isArray() && this.array.base.objects.length) {\n        ref3 = this.array.base.objects;\n        for (j = 0, len1 = ref3.length; j < len1; j++) {\n          obj = ref3[j];\n          if (!(obj instanceof Splat)) {\n            continue;\n          }\n          hasSplat = true;\n          break;\n        }\n        if (!hasSplat) {\n          return this.compileOrTest(o);\n        }\n      }\n      return this.compileLoopTest(o);\n    };\n\n    In.prototype.compileOrTest = function(o) {\n      var cmp, cnj, i, item, j, len1, ref, ref3, ref4, ref5, sub, tests;\n      ref3 = this.object.cache(o, LEVEL_OP), sub = ref3[0], ref = ref3[1];\n      ref4 = this.negated ? [' !== ', ' && '] : [' === ', ' || '], cmp = ref4[0], cnj = ref4[1];\n      tests = [];\n      ref5 = this.array.base.objects;\n      for (i = j = 0, len1 = ref5.length; j < len1; i = ++j) {\n        item = ref5[i];\n        if (i) {\n          tests.push(this.makeCode(cnj));\n        }\n        tests = tests.concat((i ? ref : sub), this.makeCode(cmp), item.compileToFragments(o, LEVEL_ACCESS));\n      }\n      if (o.level < LEVEL_OP) {\n        return tests;\n      } else {\n        return this.wrapInBraces(tests);\n      }\n    };\n\n    In.prototype.compileLoopTest = function(o) {\n      var fragments, ref, ref3, sub;\n      ref3 = this.object.cache(o, LEVEL_LIST), sub = ref3[0], ref = ref3[1];\n      fragments = [].concat(this.makeCode(utility('indexOf', o) + \".call(\"), this.array.compileToFragments(o, LEVEL_LIST), this.makeCode(\", \"), ref, this.makeCode(\") \" + (this.negated ? '< 0' : '>= 0')));\n      if (fragmentsToText(sub) === fragmentsToText(ref)) {\n        return fragments;\n      }\n      fragments = sub.concat(this.makeCode(', '), fragments);\n      if (o.level < LEVEL_LIST) {\n        return fragments;\n      } else {\n        return this.wrapInBraces(fragments);\n      }\n    };\n\n    In.prototype.toString = function(idt) {\n      return In.__super__.toString.call(this, idt, this.constructor.name + (this.negated ? '!' : ''));\n    };\n\n    return In;\n\n  })(Base);\n\n  exports.Try = Try = (function(superClass1) {\n    extend1(Try, superClass1);\n\n    function Try(attempt, errorVariable, recovery, ensure) {\n      this.attempt = attempt;\n      this.errorVariable = errorVariable;\n      this.recovery = recovery;\n      this.ensure = ensure;\n    }\n\n    Try.prototype.children = ['attempt', 'recovery', 'ensure'];\n\n    Try.prototype.isStatement = YES;\n\n    Try.prototype.jumps = function(o) {\n      var ref3;\n      return this.attempt.jumps(o) || ((ref3 = this.recovery) != null ? ref3.jumps(o) : void 0);\n    };\n\n    Try.prototype.makeReturn = function(res) {\n      if (this.attempt) {\n        this.attempt = this.attempt.makeReturn(res);\n      }\n      if (this.recovery) {\n        this.recovery = this.recovery.makeReturn(res);\n      }\n      return this;\n    };\n\n    Try.prototype.compileNode = function(o) {\n      var catchPart, ensurePart, generatedErrorVariableName, message, placeholder, tryPart;\n      o.indent += TAB;\n      tryPart = this.attempt.compileToFragments(o, LEVEL_TOP);\n      catchPart = this.recovery ? (generatedErrorVariableName = o.scope.freeVariable('error', {\n        reserve: false\n      }), placeholder = new IdentifierLiteral(generatedErrorVariableName), this.errorVariable ? (message = isUnassignable(this.errorVariable.unwrapAll().value), message ? this.errorVariable.error(message) : void 0, this.recovery.unshift(new Assign(this.errorVariable, placeholder))) : void 0, [].concat(this.makeCode(\" catch (\"), placeholder.compileToFragments(o), this.makeCode(\") {\\n\"), this.recovery.compileToFragments(o, LEVEL_TOP), this.makeCode(\"\\n\" + this.tab + \"}\"))) : !(this.ensure || this.recovery) ? (generatedErrorVariableName = o.scope.freeVariable('error', {\n        reserve: false\n      }), [this.makeCode(\" catch (\" + generatedErrorVariableName + \") {}\")]) : [];\n      ensurePart = this.ensure ? [].concat(this.makeCode(\" finally {\\n\"), this.ensure.compileToFragments(o, LEVEL_TOP), this.makeCode(\"\\n\" + this.tab + \"}\")) : [];\n      return [].concat(this.makeCode(this.tab + \"try {\\n\"), tryPart, this.makeCode(\"\\n\" + this.tab + \"}\"), catchPart, ensurePart);\n    };\n\n    return Try;\n\n  })(Base);\n\n  exports.Throw = Throw = (function(superClass1) {\n    extend1(Throw, superClass1);\n\n    function Throw(expression) {\n      this.expression = expression;\n    }\n\n    Throw.prototype.children = ['expression'];\n\n    Throw.prototype.isStatement = YES;\n\n    Throw.prototype.jumps = NO;\n\n    Throw.prototype.makeReturn = THIS;\n\n    Throw.prototype.compileNode = function(o) {\n      return [].concat(this.makeCode(this.tab + \"throw \"), this.expression.compileToFragments(o), this.makeCode(\";\"));\n    };\n\n    return Throw;\n\n  })(Base);\n\n  exports.Existence = Existence = (function(superClass1) {\n    extend1(Existence, superClass1);\n\n    function Existence(expression) {\n      this.expression = expression;\n    }\n\n    Existence.prototype.children = ['expression'];\n\n    Existence.prototype.invert = NEGATE;\n\n    Existence.prototype.compileNode = function(o) {\n      var cmp, cnj, code, ref3;\n      this.expression.front = this.front;\n      code = this.expression.compile(o, LEVEL_OP);\n      if (this.expression.unwrap() instanceof IdentifierLiteral && !o.scope.check(code)) {\n        ref3 = this.negated ? ['===', '||'] : ['!==', '&&'], cmp = ref3[0], cnj = ref3[1];\n        code = \"typeof \" + code + \" \" + cmp + \" \\\"undefined\\\" \" + cnj + \" \" + code + \" \" + cmp + \" null\";\n      } else {\n        code = code + \" \" + (this.negated ? '==' : '!=') + \" null\";\n      }\n      return [this.makeCode(o.level <= LEVEL_COND ? code : \"(\" + code + \")\")];\n    };\n\n    return Existence;\n\n  })(Base);\n\n  exports.Parens = Parens = (function(superClass1) {\n    extend1(Parens, superClass1);\n\n    function Parens(body1) {\n      this.body = body1;\n    }\n\n    Parens.prototype.children = ['body'];\n\n    Parens.prototype.unwrap = function() {\n      return this.body;\n    };\n\n    Parens.prototype.isComplex = function() {\n      return this.body.isComplex();\n    };\n\n    Parens.prototype.compileNode = function(o) {\n      var bare, expr, fragments;\n      expr = this.body.unwrap();\n      if (expr instanceof Value && expr.isAtomic()) {\n        expr.front = this.front;\n        return expr.compileToFragments(o);\n      }\n      fragments = expr.compileToFragments(o, LEVEL_PAREN);\n      bare = o.level < LEVEL_OP && (expr instanceof Op || expr instanceof Call || (expr instanceof For && expr.returns)) && (o.level < LEVEL_COND || fragments.length <= 3);\n      if (bare) {\n        return fragments;\n      } else {\n        return this.wrapInBraces(fragments);\n      }\n    };\n\n    return Parens;\n\n  })(Base);\n\n  exports.StringWithInterpolations = StringWithInterpolations = (function(superClass1) {\n    extend1(StringWithInterpolations, superClass1);\n\n    function StringWithInterpolations() {\n      return StringWithInterpolations.__super__.constructor.apply(this, arguments);\n    }\n\n    StringWithInterpolations.prototype.compileNode = function(o) {\n      var element, elements, expr, fragments, j, len1, value;\n      if (!o.inTaggedTemplateCall) {\n        return StringWithInterpolations.__super__.compileNode.apply(this, arguments);\n      }\n      expr = this.body.unwrap();\n      elements = [];\n      expr.traverseChildren(false, function(node) {\n        if (node instanceof StringLiteral) {\n          elements.push(node);\n          return true;\n        } else if (node instanceof Parens) {\n          elements.push(node);\n          return false;\n        }\n        return true;\n      });\n      fragments = [];\n      fragments.push(this.makeCode('`'));\n      for (j = 0, len1 = elements.length; j < len1; j++) {\n        element = elements[j];\n        if (element instanceof StringLiteral) {\n          value = element.value.slice(1, -1);\n          value = value.replace(/(\\\\*)(`|\\$\\{)/g, function(match, backslashes, toBeEscaped) {\n            if (backslashes.length % 2 === 0) {\n              return backslashes + \"\\\\\" + toBeEscaped;\n            } else {\n              return match;\n            }\n          });\n          fragments.push(this.makeCode(value));\n        } else {\n          fragments.push(this.makeCode('${'));\n          fragments.push.apply(fragments, element.compileToFragments(o, LEVEL_PAREN));\n          fragments.push(this.makeCode('}'));\n        }\n      }\n      fragments.push(this.makeCode('`'));\n      return fragments;\n    };\n\n    return StringWithInterpolations;\n\n  })(Parens);\n\n  exports.For = For = (function(superClass1) {\n    extend1(For, superClass1);\n\n    function For(body, source) {\n      var ref3;\n      this.source = source.source, this.guard = source.guard, this.step = source.step, this.name = source.name, this.index = source.index;\n      this.body = Block.wrap([body]);\n      this.own = !!source.own;\n      this.object = !!source.object;\n      this.from = !!source.from;\n      if (this.from && this.index) {\n        this.index.error('cannot use index with for-from');\n      }\n      if (this.own && !this.object) {\n        source.ownTag.error(\"cannot use own with for-\" + (this.from ? 'from' : 'in'));\n      }\n      if (this.object) {\n        ref3 = [this.index, this.name], this.name = ref3[0], this.index = ref3[1];\n      }\n      if (this.index instanceof Value && !this.index.isAssignable()) {\n        this.index.error('index cannot be a pattern matching expression');\n      }\n      this.range = this.source instanceof Value && this.source.base instanceof Range && !this.source.properties.length && !this.from;\n      this.pattern = this.name instanceof Value;\n      if (this.range && this.index) {\n        this.index.error('indexes do not apply to range loops');\n      }\n      if (this.range && this.pattern) {\n        this.name.error('cannot pattern match over range loops');\n      }\n      this.returns = false;\n    }\n\n    For.prototype.children = ['body', 'source', 'guard', 'step'];\n\n    For.prototype.compileNode = function(o) {\n      var body, bodyFragments, compare, compareDown, declare, declareDown, defPart, defPartFragments, down, forPartFragments, guardPart, idt1, increment, index, ivar, kvar, kvarAssign, last, lvar, name, namePart, ref, ref3, ref4, resultPart, returnResult, rvar, scope, source, step, stepNum, stepVar, svar, varPart;\n      body = Block.wrap([this.body]);\n      ref3 = body.expressions, last = ref3[ref3.length - 1];\n      if ((last != null ? last.jumps() : void 0) instanceof Return) {\n        this.returns = false;\n      }\n      source = this.range ? this.source.base : this.source;\n      scope = o.scope;\n      if (!this.pattern) {\n        name = this.name && (this.name.compile(o, LEVEL_LIST));\n      }\n      index = this.index && (this.index.compile(o, LEVEL_LIST));\n      if (name && !this.pattern) {\n        scope.find(name);\n      }\n      if (index && !(this.index instanceof Value)) {\n        scope.find(index);\n      }\n      if (this.returns) {\n        rvar = scope.freeVariable('results');\n      }\n      if (this.from) {\n        if (this.pattern) {\n          ivar = scope.freeVariable('x', {\n            single: true\n          });\n        }\n      } else {\n        ivar = (this.object && index) || scope.freeVariable('i', {\n          single: true\n        });\n      }\n      kvar = ((this.range || this.from) && name) || index || ivar;\n      kvarAssign = kvar !== ivar ? kvar + \" = \" : \"\";\n      if (this.step && !this.range) {\n        ref4 = this.cacheToCodeFragments(this.step.cache(o, LEVEL_LIST, isComplexOrAssignable)), step = ref4[0], stepVar = ref4[1];\n        if (this.step.isNumber()) {\n          stepNum = Number(stepVar);\n        }\n      }\n      if (this.pattern) {\n        name = ivar;\n      }\n      varPart = '';\n      guardPart = '';\n      defPart = '';\n      idt1 = this.tab + TAB;\n      if (this.range) {\n        forPartFragments = source.compileToFragments(merge(o, {\n          index: ivar,\n          name: name,\n          step: this.step,\n          isComplex: isComplexOrAssignable\n        }));\n      } else {\n        svar = this.source.compile(o, LEVEL_LIST);\n        if ((name || this.own) && !(this.source.unwrap() instanceof IdentifierLiteral)) {\n          defPart += \"\" + this.tab + (ref = scope.freeVariable('ref')) + \" = \" + svar + \";\\n\";\n          svar = ref;\n        }\n        if (name && !this.pattern && !this.from) {\n          namePart = name + \" = \" + svar + \"[\" + kvar + \"]\";\n        }\n        if (!this.object && !this.from) {\n          if (step !== stepVar) {\n            defPart += \"\" + this.tab + step + \";\\n\";\n          }\n          down = stepNum < 0;\n          if (!(this.step && (stepNum != null) && down)) {\n            lvar = scope.freeVariable('len');\n          }\n          declare = \"\" + kvarAssign + ivar + \" = 0, \" + lvar + \" = \" + svar + \".length\";\n          declareDown = \"\" + kvarAssign + ivar + \" = \" + svar + \".length - 1\";\n          compare = ivar + \" < \" + lvar;\n          compareDown = ivar + \" >= 0\";\n          if (this.step) {\n            if (stepNum != null) {\n              if (down) {\n                compare = compareDown;\n                declare = declareDown;\n              }\n            } else {\n              compare = stepVar + \" > 0 ? \" + compare + \" : \" + compareDown;\n              declare = \"(\" + stepVar + \" > 0 ? (\" + declare + \") : \" + declareDown + \")\";\n            }\n            increment = ivar + \" += \" + stepVar;\n          } else {\n            increment = \"\" + (kvar !== ivar ? \"++\" + ivar : ivar + \"++\");\n          }\n          forPartFragments = [this.makeCode(declare + \"; \" + compare + \"; \" + kvarAssign + increment)];\n        }\n      }\n      if (this.returns) {\n        resultPart = \"\" + this.tab + rvar + \" = [];\\n\";\n        returnResult = \"\\n\" + this.tab + \"return \" + rvar + \";\";\n        body.makeReturn(rvar);\n      }\n      if (this.guard) {\n        if (body.expressions.length > 1) {\n          body.expressions.unshift(new If((new Parens(this.guard)).invert(), new StatementLiteral(\"continue\")));\n        } else {\n          if (this.guard) {\n            body = Block.wrap([new If(this.guard, body)]);\n          }\n        }\n      }\n      if (this.pattern) {\n        body.expressions.unshift(new Assign(this.name, this.from ? new IdentifierLiteral(kvar) : new Literal(svar + \"[\" + kvar + \"]\")));\n      }\n      defPartFragments = [].concat(this.makeCode(defPart), this.pluckDirectCall(o, body));\n      if (namePart) {\n        varPart = \"\\n\" + idt1 + namePart + \";\";\n      }\n      if (this.object) {\n        forPartFragments = [this.makeCode(kvar + \" in \" + svar)];\n        if (this.own) {\n          guardPart = \"\\n\" + idt1 + \"if (!\" + (utility('hasProp', o)) + \".call(\" + svar + \", \" + kvar + \")) continue;\";\n        }\n      } else if (this.from) {\n        forPartFragments = [this.makeCode(kvar + \" of \" + svar)];\n      }\n      bodyFragments = body.compileToFragments(merge(o, {\n        indent: idt1\n      }), LEVEL_TOP);\n      if (bodyFragments && bodyFragments.length > 0) {\n        bodyFragments = [].concat(this.makeCode(\"\\n\"), bodyFragments, this.makeCode(\"\\n\"));\n      }\n      return [].concat(defPartFragments, this.makeCode(\"\" + (resultPart || '') + this.tab + \"for (\"), forPartFragments, this.makeCode(\") {\" + guardPart + varPart), bodyFragments, this.makeCode(this.tab + \"}\" + (returnResult || '')));\n    };\n\n    For.prototype.pluckDirectCall = function(o, body) {\n      var base, defs, expr, fn, idx, j, len1, ref, ref3, ref4, ref5, ref6, ref7, ref8, ref9, val;\n      defs = [];\n      ref3 = body.expressions;\n      for (idx = j = 0, len1 = ref3.length; j < len1; idx = ++j) {\n        expr = ref3[idx];\n        expr = expr.unwrapAll();\n        if (!(expr instanceof Call)) {\n          continue;\n        }\n        val = (ref4 = expr.variable) != null ? ref4.unwrapAll() : void 0;\n        if (!((val instanceof Code) || (val instanceof Value && ((ref5 = val.base) != null ? ref5.unwrapAll() : void 0) instanceof Code && val.properties.length === 1 && ((ref6 = (ref7 = val.properties[0].name) != null ? ref7.value : void 0) === 'call' || ref6 === 'apply')))) {\n          continue;\n        }\n        fn = ((ref8 = val.base) != null ? ref8.unwrapAll() : void 0) || val;\n        ref = new IdentifierLiteral(o.scope.freeVariable('fn'));\n        base = new Value(ref);\n        if (val.base) {\n          ref9 = [base, val], val.base = ref9[0], base = ref9[1];\n        }\n        body.expressions[idx] = new Call(base, expr.args);\n        defs = defs.concat(this.makeCode(this.tab), new Assign(ref, fn).compileToFragments(o, LEVEL_TOP), this.makeCode(';\\n'));\n      }\n      return defs;\n    };\n\n    return For;\n\n  })(While);\n\n  exports.Switch = Switch = (function(superClass1) {\n    extend1(Switch, superClass1);\n\n    function Switch(subject, cases, otherwise) {\n      this.subject = subject;\n      this.cases = cases;\n      this.otherwise = otherwise;\n    }\n\n    Switch.prototype.children = ['subject', 'cases', 'otherwise'];\n\n    Switch.prototype.isStatement = YES;\n\n    Switch.prototype.jumps = function(o) {\n      var block, conds, j, jumpNode, len1, ref3, ref4, ref5;\n      if (o == null) {\n        o = {\n          block: true\n        };\n      }\n      ref3 = this.cases;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        ref4 = ref3[j], conds = ref4[0], block = ref4[1];\n        if (jumpNode = block.jumps(o)) {\n          return jumpNode;\n        }\n      }\n      return (ref5 = this.otherwise) != null ? ref5.jumps(o) : void 0;\n    };\n\n    Switch.prototype.makeReturn = function(res) {\n      var j, len1, pair, ref3, ref4;\n      ref3 = this.cases;\n      for (j = 0, len1 = ref3.length; j < len1; j++) {\n        pair = ref3[j];\n        pair[1].makeReturn(res);\n      }\n      if (res) {\n        this.otherwise || (this.otherwise = new Block([new Literal('void 0')]));\n      }\n      if ((ref4 = this.otherwise) != null) {\n        ref4.makeReturn(res);\n      }\n      return this;\n    };\n\n    Switch.prototype.compileNode = function(o) {\n      var block, body, cond, conditions, expr, fragments, i, idt1, idt2, j, k, len1, len2, ref3, ref4, ref5;\n      idt1 = o.indent + TAB;\n      idt2 = o.indent = idt1 + TAB;\n      fragments = [].concat(this.makeCode(this.tab + \"switch (\"), (this.subject ? this.subject.compileToFragments(o, LEVEL_PAREN) : this.makeCode(\"false\")), this.makeCode(\") {\\n\"));\n      ref3 = this.cases;\n      for (i = j = 0, len1 = ref3.length; j < len1; i = ++j) {\n        ref4 = ref3[i], conditions = ref4[0], block = ref4[1];\n        ref5 = flatten([conditions]);\n        for (k = 0, len2 = ref5.length; k < len2; k++) {\n          cond = ref5[k];\n          if (!this.subject) {\n            cond = cond.invert();\n          }\n          fragments = fragments.concat(this.makeCode(idt1 + \"case \"), cond.compileToFragments(o, LEVEL_PAREN), this.makeCode(\":\\n\"));\n        }\n        if ((body = block.compileToFragments(o, LEVEL_TOP)).length > 0) {\n          fragments = fragments.concat(body, this.makeCode('\\n'));\n        }\n        if (i === this.cases.length - 1 && !this.otherwise) {\n          break;\n        }\n        expr = this.lastNonComment(block.expressions);\n        if (expr instanceof Return || (expr instanceof Literal && expr.jumps() && expr.value !== 'debugger')) {\n          continue;\n        }\n        fragments.push(cond.makeCode(idt2 + 'break;\\n'));\n      }\n      if (this.otherwise && this.otherwise.expressions.length) {\n        fragments.push.apply(fragments, [this.makeCode(idt1 + \"default:\\n\")].concat(slice.call(this.otherwise.compileToFragments(o, LEVEL_TOP)), [this.makeCode(\"\\n\")]));\n      }\n      fragments.push(this.makeCode(this.tab + '}'));\n      return fragments;\n    };\n\n    return Switch;\n\n  })(Base);\n\n  exports.If = If = (function(superClass1) {\n    extend1(If, superClass1);\n\n    function If(condition, body1, options) {\n      this.body = body1;\n      if (options == null) {\n        options = {};\n      }\n      this.condition = options.type === 'unless' ? condition.invert() : condition;\n      this.elseBody = null;\n      this.isChain = false;\n      this.soak = options.soak;\n    }\n\n    If.prototype.children = ['condition', 'body', 'elseBody'];\n\n    If.prototype.bodyNode = function() {\n      var ref3;\n      return (ref3 = this.body) != null ? ref3.unwrap() : void 0;\n    };\n\n    If.prototype.elseBodyNode = function() {\n      var ref3;\n      return (ref3 = this.elseBody) != null ? ref3.unwrap() : void 0;\n    };\n\n    If.prototype.addElse = function(elseBody) {\n      if (this.isChain) {\n        this.elseBodyNode().addElse(elseBody);\n      } else {\n        this.isChain = elseBody instanceof If;\n        this.elseBody = this.ensureBlock(elseBody);\n        this.elseBody.updateLocationDataIfMissing(elseBody.locationData);\n      }\n      return this;\n    };\n\n    If.prototype.isStatement = function(o) {\n      var ref3;\n      return (o != null ? o.level : void 0) === LEVEL_TOP || this.bodyNode().isStatement(o) || ((ref3 = this.elseBodyNode()) != null ? ref3.isStatement(o) : void 0);\n    };\n\n    If.prototype.jumps = function(o) {\n      var ref3;\n      return this.body.jumps(o) || ((ref3 = this.elseBody) != null ? ref3.jumps(o) : void 0);\n    };\n\n    If.prototype.compileNode = function(o) {\n      if (this.isStatement(o)) {\n        return this.compileStatement(o);\n      } else {\n        return this.compileExpression(o);\n      }\n    };\n\n    If.prototype.makeReturn = function(res) {\n      if (res) {\n        this.elseBody || (this.elseBody = new Block([new Literal('void 0')]));\n      }\n      this.body && (this.body = new Block([this.body.makeReturn(res)]));\n      this.elseBody && (this.elseBody = new Block([this.elseBody.makeReturn(res)]));\n      return this;\n    };\n\n    If.prototype.ensureBlock = function(node) {\n      if (node instanceof Block) {\n        return node;\n      } else {\n        return new Block([node]);\n      }\n    };\n\n    If.prototype.compileStatement = function(o) {\n      var answer, body, child, cond, exeq, ifPart, indent;\n      child = del(o, 'chainChild');\n      exeq = del(o, 'isExistentialEquals');\n      if (exeq) {\n        return new If(this.condition.invert(), this.elseBodyNode(), {\n          type: 'if'\n        }).compileToFragments(o);\n      }\n      indent = o.indent + TAB;\n      cond = this.condition.compileToFragments(o, LEVEL_PAREN);\n      body = this.ensureBlock(this.body).compileToFragments(merge(o, {\n        indent: indent\n      }));\n      ifPart = [].concat(this.makeCode(\"if (\"), cond, this.makeCode(\") {\\n\"), body, this.makeCode(\"\\n\" + this.tab + \"}\"));\n      if (!child) {\n        ifPart.unshift(this.makeCode(this.tab));\n      }\n      if (!this.elseBody) {\n        return ifPart;\n      }\n      answer = ifPart.concat(this.makeCode(' else '));\n      if (this.isChain) {\n        o.chainChild = true;\n        answer = answer.concat(this.elseBody.unwrap().compileToFragments(o, LEVEL_TOP));\n      } else {\n        answer = answer.concat(this.makeCode(\"{\\n\"), this.elseBody.compileToFragments(merge(o, {\n          indent: indent\n        }), LEVEL_TOP), this.makeCode(\"\\n\" + this.tab + \"}\"));\n      }\n      return answer;\n    };\n\n    If.prototype.compileExpression = function(o) {\n      var alt, body, cond, fragments;\n      cond = this.condition.compileToFragments(o, LEVEL_COND);\n      body = this.bodyNode().compileToFragments(o, LEVEL_LIST);\n      alt = this.elseBodyNode() ? this.elseBodyNode().compileToFragments(o, LEVEL_LIST) : [this.makeCode('void 0')];\n      fragments = cond.concat(this.makeCode(\" ? \"), body, this.makeCode(\" : \"), alt);\n      if (o.level >= LEVEL_COND) {\n        return this.wrapInBraces(fragments);\n      } else {\n        return fragments;\n      }\n    };\n\n    If.prototype.unfoldSoak = function() {\n      return this.soak && this;\n    };\n\n    return If;\n\n  })(Base);\n\n  UTILITIES = {\n    extend: function(o) {\n      return \"function(child, parent) { for (var key in parent) { if (\" + (utility('hasProp', o)) + \".call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; }\";\n    },\n    bind: function() {\n      return 'function(fn, me){ return function(){ return fn.apply(me, arguments); }; }';\n    },\n    indexOf: function() {\n      return \"[].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; }\";\n    },\n    modulo: function() {\n      return \"function(a, b) { return (+a % (b = +b) + b) % b; }\";\n    },\n    hasProp: function() {\n      return '{}.hasOwnProperty';\n    },\n    slice: function() {\n      return '[].slice';\n    }\n  };\n\n  LEVEL_TOP = 1;\n\n  LEVEL_PAREN = 2;\n\n  LEVEL_LIST = 3;\n\n  LEVEL_COND = 4;\n\n  LEVEL_OP = 5;\n\n  LEVEL_ACCESS = 6;\n\n  TAB = '  ';\n\n  SIMPLENUM = /^[+-]?\\d+$/;\n\n  utility = function(name, o) {\n    var ref, root;\n    root = o.scope.root;\n    if (name in root.utilities) {\n      return root.utilities[name];\n    } else {\n      ref = root.freeVariable(name);\n      root.assign(ref, UTILITIES[name](o));\n      return root.utilities[name] = ref;\n    }\n  };\n\n  multident = function(code, tab) {\n    code = code.replace(/\\n/g, '$&' + tab);\n    return code.replace(/\\s+$/, '');\n  };\n\n  isLiteralArguments = function(node) {\n    return node instanceof IdentifierLiteral && node.value === 'arguments';\n  };\n\n  isLiteralThis = function(node) {\n    return node instanceof ThisLiteral || (node instanceof Code && node.bound) || node instanceof SuperCall;\n  };\n\n  isComplexOrAssignable = function(node) {\n    return node.isComplex() || (typeof node.isAssignable === \"function\" ? node.isAssignable() : void 0);\n  };\n\n  unfoldSoak = function(o, parent, name) {\n    var ifn;\n    if (!(ifn = parent[name].unfoldSoak(o))) {\n      return;\n    }\n    parent[name] = ifn.body;\n    ifn.body = new Value(parent);\n    return ifn;\n  };\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}