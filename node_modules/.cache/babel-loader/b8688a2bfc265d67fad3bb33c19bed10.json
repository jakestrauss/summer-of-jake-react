{"ast":null,"code":"var _jsxFileName = \"/Users/straussj/Documents/react_projects/summer-of-jake/front-end/src/components/Map.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport '../static/Map.css';\nimport { GoogleMap, KmlLayer, Marker, InfoWindow, useJsApiLoader } from '@react-google-maps/api';\nimport mapStyles from './../mapStyles';\nimport RouteURLService from '../services/RouteURLService';\nimport MarkerService from '../services/MarkerService';\nimport LocalRoutes from './LocalRoutes'; //Map Constants\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '100vw',\n  height: '100vh'\n};\nconst center = {\n  lat: 40.644366,\n  lng: -39.872822\n};\nconst mapOptions = {\n  styles: mapStyles,\n  disableDefaultUI: true,\n  zoomControl: true\n};\nexport default function Map() {\n  _s();\n\n  const {\n    isLoaded,\n    loadError\n  } = useJsApiLoader({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\"\n  }); //State variables\n\n  const [infoWindowVisible, setInfoWindowVisible] = useState(false);\n  const [routes, setRoutes] = useState([]);\n  const [markers, setMarkers] = useState([]);\n  useEffect(() => {\n    RouteURLService.getRoutes().then(result => setRoutes(result));\n    MarkerService.getMarkers().then(result => setMarkers(result));\n  }, []);\n  if (loadError) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Error loading maps\"\n  }, void 0, false);\n  if (!isLoaded || !routes) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"Loading maps\"\n  }, void 0, false);\n  const markerSize = new window.google.maps.Size(20, 20); //Click events\n\n  const markerClick = () => {\n    setInfoWindowVisible(true);\n  };\n\n  const markerInfoWindowClose = () => {\n    setInfoWindowVisible(false);\n  };\n\n  const mapClick = () => {\n    fall19Close();\n    pctOneClose();\n    pctTwoClose();\n    markerInfoWindowClose();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"map-title\",\n      children: \"Summer of Jake\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: mapContainerStyle,\n      zoom: 3,\n      center: center,\n      options: mapOptions,\n      onClick: mapClick,\n      children: [routes.map(route => /*#__PURE__*/_jsxDEV(KmlLayer, {\n        url: route,\n        options: hardCodedKmlOptions\n      }, `kmlLayer-${route}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 42\n      }, this)), /*#__PURE__*/_jsxDEV(LocalRoutes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), markers.map(marker => {\n        const localIcon = {\n          url: marker.url,\n          scaledSize: markerSize\n        };\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Marker, {\n            position: marker.latLong,\n            icon: localIcon,\n            onClick: markerClick\n          }, `marker-${marker.latLong}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), infoWindowVisible && /*#__PURE__*/_jsxDEV(InfoWindow, {\n            visible: false,\n            position: marker.latLong,\n            onCloseClick: markerInfoWindowClose,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: marker.url,\n                alt: \"Marker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 41\n            }, this)\n          }, `infoWindow-${marker.latLong}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Map, \"CAWpqVWpXoxNlmEqsFb3jF89huE=\", false, function () {\n  return [useJsApiLoader];\n});\n\n_c = Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/straussj/Documents/react_projects/summer-of-jake/front-end/src/components/Map.jsx"],"names":["React","useEffect","useState","GoogleMap","KmlLayer","Marker","InfoWindow","useJsApiLoader","mapStyles","RouteURLService","MarkerService","LocalRoutes","mapContainerStyle","width","height","center","lat","lng","mapOptions","styles","disableDefaultUI","zoomControl","Map","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","infoWindowVisible","setInfoWindowVisible","routes","setRoutes","markers","setMarkers","getRoutes","then","result","getMarkers","markerSize","window","google","maps","Size","markerClick","markerInfoWindowClose","mapClick","fall19Close","pctOneClose","pctTwoClose","map","route","hardCodedKmlOptions","marker","localIcon","url","scaledSize","latLong"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport '../static/Map.css';\nimport { GoogleMap, KmlLayer, Marker, InfoWindow, useJsApiLoader } from '@react-google-maps/api';\nimport mapStyles from './../mapStyles';\nimport RouteURLService from '../services/RouteURLService';\nimport MarkerService from '../services/MarkerService';\nimport LocalRoutes from './LocalRoutes';\n\n//Map Constants\nconst mapContainerStyle = {\n    width: '100vw',\n    height: '100vh'\n};\nconst center = {\n    lat: 40.644366,\n    lng: -39.872822\n};\nconst mapOptions = {\n    styles: mapStyles,\n    disableDefaultUI: true,\n    zoomControl: true\n};\n\nexport default function Map() {\n    const { isLoaded, loadError } = useJsApiLoader({\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\"\n    });\n\n    //State variables\n    const [infoWindowVisible, setInfoWindowVisible] = useState(false);\n    const [routes, setRoutes] = useState([]);\n    const [markers, setMarkers] = useState([]);\n\n    useEffect(() => {\n        RouteURLService.getRoutes().then(result => setRoutes(result));\n        MarkerService.getMarkers().then(result => setMarkers(result));\n    }, []);\n\n    if (loadError)\n        return (<>Error loading maps</>);\n    if (!isLoaded || !routes)\n        return (<>Loading maps</>);\n    \n\n    const markerSize = new window.google.maps.Size(20, 20);\n\n    //Click events\n    const markerClick = () => {setInfoWindowVisible(true)};\n    const markerInfoWindowClose = () => {setInfoWindowVisible(false)};\n\n\n    const mapClick = () => {\n        fall19Close();\n        pctOneClose();\n        pctTwoClose();\n        markerInfoWindowClose();\n    }\n\n    return (\n        <div>\n            <h1 className=\"map-title\">Summer of Jake</h1>\n            <GoogleMap mapContainerStyle={mapContainerStyle} zoom={3} center={center} options={mapOptions} onClick={mapClick}>\n                {\n                    routes.map(route => (<KmlLayer url={route} options={hardCodedKmlOptions} key={`kmlLayer-${route}`}/>\n                ))}\n                <LocalRoutes></LocalRoutes>\n                {\n                    markers.map(marker => {\n                        const localIcon = {\n                            url: marker.url,\n                            scaledSize: markerSize\n                        }\n                        return(\n                            <>\n                                <Marker position={marker.latLong} icon={localIcon} key={`marker-${marker.latLong}`} onClick={markerClick}>\n                                </Marker>\n                                {infoWindowVisible \n                                    && <InfoWindow key={`infoWindow-${marker.latLong}`} visible={false} position={marker.latLong} onCloseClick={markerInfoWindowClose}>\n                                        <div><img src={marker.url} alt=\"Marker\"></img></div>\n                                    </InfoWindow>\n                                }\n                            </>   \n                        )\n                    })\n                }\n            </GoogleMap>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}