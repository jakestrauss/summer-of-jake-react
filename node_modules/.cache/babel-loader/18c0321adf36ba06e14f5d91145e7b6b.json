{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var CoffeeScript, Module, binary, child_process, ext, findExtension, fork, helpers, i, len, loadFile, path, ref;\n  CoffeeScript = require('./coffee-script');\n  child_process = require('child_process');\n  helpers = require('./helpers');\n  path = require('path');\n\n  loadFile = function (module, filename) {\n    var answer;\n    answer = CoffeeScript._compileFile(filename, false, true);\n    return module._compile(answer, filename);\n  };\n\n  if (require.extensions) {\n    ref = CoffeeScript.FILE_EXTENSIONS;\n\n    for (i = 0, len = ref.length; i < len; i++) {\n      ext = ref[i];\n      require.extensions[ext] = loadFile;\n    }\n\n    Module = require('module');\n\n    findExtension = function (filename) {\n      var curExtension, extensions;\n      extensions = path.basename(filename).split('.');\n\n      if (extensions[0] === '') {\n        extensions.shift();\n      }\n\n      while (extensions.shift()) {\n        curExtension = '.' + extensions.join('.');\n\n        if (Module._extensions[curExtension]) {\n          return curExtension;\n        }\n      }\n\n      return '.js';\n    };\n\n    Module.prototype.load = function (filename) {\n      var extension;\n      this.filename = filename;\n      this.paths = Module._nodeModulePaths(path.dirname(filename));\n      extension = findExtension(filename);\n\n      Module._extensions[extension](this, filename);\n\n      return this.loaded = true;\n    };\n  }\n\n  if (child_process) {\n    fork = child_process.fork;\n    binary = require.resolve('../../bin/coffee');\n\n    child_process.fork = function (path, args, options) {\n      if (helpers.isCoffee(path)) {\n        if (!Array.isArray(args)) {\n          options = args || {};\n          args = [];\n        }\n\n        args = [path].concat(args);\n        path = binary;\n      }\n\n      return fork(path, args, options);\n    };\n  }\n}).call(this);","map":{"version":3,"sources":["/Users/straussj/Documents/react_projects/summer-of-jake/node_modules/coffee-script/lib/coffee-script/register.js"],"names":["CoffeeScript","Module","binary","child_process","ext","findExtension","fork","helpers","i","len","loadFile","path","ref","require","module","filename","answer","_compileFile","_compile","extensions","FILE_EXTENSIONS","length","curExtension","basename","split","shift","join","_extensions","prototype","load","extension","paths","_nodeModulePaths","dirname","loaded","resolve","args","options","isCoffee","Array","isArray","concat","call"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var CoffeeScript, Module, binary, child_process, ext, findExtension, fork, helpers, i, len, loadFile, path, ref;\n\n  CoffeeScript = require('./coffee-script');\n\n  child_process = require('child_process');\n\n  helpers = require('./helpers');\n\n  path = require('path');\n\n  loadFile = function(module, filename) {\n    var answer;\n    answer = CoffeeScript._compileFile(filename, false, true);\n    return module._compile(answer, filename);\n  };\n\n  if (require.extensions) {\n    ref = CoffeeScript.FILE_EXTENSIONS;\n    for (i = 0, len = ref.length; i < len; i++) {\n      ext = ref[i];\n      require.extensions[ext] = loadFile;\n    }\n    Module = require('module');\n    findExtension = function(filename) {\n      var curExtension, extensions;\n      extensions = path.basename(filename).split('.');\n      if (extensions[0] === '') {\n        extensions.shift();\n      }\n      while (extensions.shift()) {\n        curExtension = '.' + extensions.join('.');\n        if (Module._extensions[curExtension]) {\n          return curExtension;\n        }\n      }\n      return '.js';\n    };\n    Module.prototype.load = function(filename) {\n      var extension;\n      this.filename = filename;\n      this.paths = Module._nodeModulePaths(path.dirname(filename));\n      extension = findExtension(filename);\n      Module._extensions[extension](this, filename);\n      return this.loaded = true;\n    };\n  }\n\n  if (child_process) {\n    fork = child_process.fork;\n    binary = require.resolve('../../bin/coffee');\n    child_process.fork = function(path, args, options) {\n      if (helpers.isCoffee(path)) {\n        if (!Array.isArray(args)) {\n          options = args || {};\n          args = [];\n        }\n        args = [path].concat(args);\n        path = binary;\n      }\n      return fork(path, args, options);\n    };\n  }\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}