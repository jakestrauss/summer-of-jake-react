{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var Scope,\n      indexOf = [].indexOf || function (item) {\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (i in this && this[i] === item) return i;\n    }\n\n    return -1;\n  };\n\n  exports.Scope = Scope = function () {\n    function Scope(parent, expressions, method, referencedVars) {\n      var ref, ref1;\n      this.parent = parent;\n      this.expressions = expressions;\n      this.method = method;\n      this.referencedVars = referencedVars;\n      this.variables = [{\n        name: 'arguments',\n        type: 'arguments'\n      }];\n      this.positions = {};\n\n      if (!this.parent) {\n        this.utilities = {};\n      }\n\n      this.root = (ref = (ref1 = this.parent) != null ? ref1.root : void 0) != null ? ref : this;\n    }\n\n    Scope.prototype.add = function (name, type, immediate) {\n      if (this.shared && !immediate) {\n        return this.parent.add(name, type, immediate);\n      }\n\n      if (Object.prototype.hasOwnProperty.call(this.positions, name)) {\n        return this.variables[this.positions[name]].type = type;\n      } else {\n        return this.positions[name] = this.variables.push({\n          name: name,\n          type: type\n        }) - 1;\n      }\n    };\n\n    Scope.prototype.namedMethod = function () {\n      var ref;\n\n      if (((ref = this.method) != null ? ref.name : void 0) || !this.parent) {\n        return this.method;\n      }\n\n      return this.parent.namedMethod();\n    };\n\n    Scope.prototype.find = function (name, type) {\n      if (type == null) {\n        type = 'var';\n      }\n\n      if (this.check(name)) {\n        return true;\n      }\n\n      this.add(name, type);\n      return false;\n    };\n\n    Scope.prototype.parameter = function (name) {\n      if (this.shared && this.parent.check(name, true)) {\n        return;\n      }\n\n      return this.add(name, 'param');\n    };\n\n    Scope.prototype.check = function (name) {\n      var ref;\n      return !!(this.type(name) || ((ref = this.parent) != null ? ref.check(name) : void 0));\n    };\n\n    Scope.prototype.temporary = function (name, index, single) {\n      var diff, endCode, letter, newCode, num, startCode;\n\n      if (single == null) {\n        single = false;\n      }\n\n      if (single) {\n        startCode = name.charCodeAt(0);\n        endCode = 'z'.charCodeAt(0);\n        diff = endCode - startCode;\n        newCode = startCode + index % (diff + 1);\n        letter = String.fromCharCode(newCode);\n        num = Math.floor(index / (diff + 1));\n        return \"\" + letter + (num || '');\n      } else {\n        return \"\" + name + (index || '');\n      }\n    };\n\n    Scope.prototype.type = function (name) {\n      var i, len, ref, v;\n      ref = this.variables;\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        v = ref[i];\n\n        if (v.name === name) {\n          return v.type;\n        }\n      }\n\n      return null;\n    };\n\n    Scope.prototype.freeVariable = function (name, options) {\n      var index, ref, temp;\n\n      if (options == null) {\n        options = {};\n      }\n\n      index = 0;\n\n      while (true) {\n        temp = this.temporary(name, index, options.single);\n\n        if (!(this.check(temp) || indexOf.call(this.root.referencedVars, temp) >= 0)) {\n          break;\n        }\n\n        index++;\n      }\n\n      if ((ref = options.reserve) != null ? ref : true) {\n        this.add(temp, 'var', true);\n      }\n\n      return temp;\n    };\n\n    Scope.prototype.assign = function (name, value) {\n      this.add(name, {\n        value: value,\n        assigned: true\n      }, true);\n      return this.hasAssignments = true;\n    };\n\n    Scope.prototype.hasDeclarations = function () {\n      return !!this.declaredVariables().length;\n    };\n\n    Scope.prototype.declaredVariables = function () {\n      var v;\n      return function () {\n        var i, len, ref, results;\n        ref = this.variables;\n        results = [];\n\n        for (i = 0, len = ref.length; i < len; i++) {\n          v = ref[i];\n\n          if (v.type === 'var') {\n            results.push(v.name);\n          }\n        }\n\n        return results;\n      }.call(this).sort();\n    };\n\n    Scope.prototype.assignedVariables = function () {\n      var i, len, ref, results, v;\n      ref = this.variables;\n      results = [];\n\n      for (i = 0, len = ref.length; i < len; i++) {\n        v = ref[i];\n\n        if (v.type.assigned) {\n          results.push(v.name + \" = \" + v.type.value);\n        }\n      }\n\n      return results;\n    };\n\n    return Scope;\n  }();\n}).call(this);","map":{"version":3,"sources":["/Users/straussj/Documents/react_projects/summer-of-jake/node_modules/coffee-script/lib/coffee-script/scope.js"],"names":["Scope","indexOf","item","i","l","length","exports","parent","expressions","method","referencedVars","ref","ref1","variables","name","type","positions","utilities","root","prototype","add","immediate","shared","Object","hasOwnProperty","call","push","namedMethod","find","check","parameter","temporary","index","single","diff","endCode","letter","newCode","num","startCode","charCodeAt","String","fromCharCode","Math","floor","len","v","freeVariable","options","temp","reserve","assign","value","assigned","hasAssignments","hasDeclarations","declaredVariables","results","sort","assignedVariables"],"mappings":"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","sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var Scope,\n    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\n  exports.Scope = Scope = (function() {\n    function Scope(parent, expressions, method, referencedVars) {\n      var ref, ref1;\n      this.parent = parent;\n      this.expressions = expressions;\n      this.method = method;\n      this.referencedVars = referencedVars;\n      this.variables = [\n        {\n          name: 'arguments',\n          type: 'arguments'\n        }\n      ];\n      this.positions = {};\n      if (!this.parent) {\n        this.utilities = {};\n      }\n      this.root = (ref = (ref1 = this.parent) != null ? ref1.root : void 0) != null ? ref : this;\n    }\n\n    Scope.prototype.add = function(name, type, immediate) {\n      if (this.shared && !immediate) {\n        return this.parent.add(name, type, immediate);\n      }\n      if (Object.prototype.hasOwnProperty.call(this.positions, name)) {\n        return this.variables[this.positions[name]].type = type;\n      } else {\n        return this.positions[name] = this.variables.push({\n          name: name,\n          type: type\n        }) - 1;\n      }\n    };\n\n    Scope.prototype.namedMethod = function() {\n      var ref;\n      if (((ref = this.method) != null ? ref.name : void 0) || !this.parent) {\n        return this.method;\n      }\n      return this.parent.namedMethod();\n    };\n\n    Scope.prototype.find = function(name, type) {\n      if (type == null) {\n        type = 'var';\n      }\n      if (this.check(name)) {\n        return true;\n      }\n      this.add(name, type);\n      return false;\n    };\n\n    Scope.prototype.parameter = function(name) {\n      if (this.shared && this.parent.check(name, true)) {\n        return;\n      }\n      return this.add(name, 'param');\n    };\n\n    Scope.prototype.check = function(name) {\n      var ref;\n      return !!(this.type(name) || ((ref = this.parent) != null ? ref.check(name) : void 0));\n    };\n\n    Scope.prototype.temporary = function(name, index, single) {\n      var diff, endCode, letter, newCode, num, startCode;\n      if (single == null) {\n        single = false;\n      }\n      if (single) {\n        startCode = name.charCodeAt(0);\n        endCode = 'z'.charCodeAt(0);\n        diff = endCode - startCode;\n        newCode = startCode + index % (diff + 1);\n        letter = String.fromCharCode(newCode);\n        num = Math.floor(index / (diff + 1));\n        return \"\" + letter + (num || '');\n      } else {\n        return \"\" + name + (index || '');\n      }\n    };\n\n    Scope.prototype.type = function(name) {\n      var i, len, ref, v;\n      ref = this.variables;\n      for (i = 0, len = ref.length; i < len; i++) {\n        v = ref[i];\n        if (v.name === name) {\n          return v.type;\n        }\n      }\n      return null;\n    };\n\n    Scope.prototype.freeVariable = function(name, options) {\n      var index, ref, temp;\n      if (options == null) {\n        options = {};\n      }\n      index = 0;\n      while (true) {\n        temp = this.temporary(name, index, options.single);\n        if (!(this.check(temp) || indexOf.call(this.root.referencedVars, temp) >= 0)) {\n          break;\n        }\n        index++;\n      }\n      if ((ref = options.reserve) != null ? ref : true) {\n        this.add(temp, 'var', true);\n      }\n      return temp;\n    };\n\n    Scope.prototype.assign = function(name, value) {\n      this.add(name, {\n        value: value,\n        assigned: true\n      }, true);\n      return this.hasAssignments = true;\n    };\n\n    Scope.prototype.hasDeclarations = function() {\n      return !!this.declaredVariables().length;\n    };\n\n    Scope.prototype.declaredVariables = function() {\n      var v;\n      return ((function() {\n        var i, len, ref, results;\n        ref = this.variables;\n        results = [];\n        for (i = 0, len = ref.length; i < len; i++) {\n          v = ref[i];\n          if (v.type === 'var') {\n            results.push(v.name);\n          }\n        }\n        return results;\n      }).call(this)).sort();\n    };\n\n    Scope.prototype.assignedVariables = function() {\n      var i, len, ref, results, v;\n      ref = this.variables;\n      results = [];\n      for (i = 0, len = ref.length; i < len; i++) {\n        v = ref[i];\n        if (v.type.assigned) {\n          results.push(v.name + \" = \" + v.type.value);\n        }\n      }\n      return results;\n    };\n\n    return Scope;\n\n  })();\n\n}).call(this);\n"]},"metadata":{},"sourceType":"script"}